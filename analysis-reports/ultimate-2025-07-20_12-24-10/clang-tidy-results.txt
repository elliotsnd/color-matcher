64809 warnings and 4 errors generated.
Error while processing G:\finalcolorwithcalibration\src\main.cpp.
error: unknown argument '-mlongcalls'; did you mean '-mlong-calls'? [clang-diagnostic-error]
error: unknown argument: '-fno-tree-switch-conversion' [clang-diagnostic-error]
error: unknown argument: '-fstrict-volatile-bitfields' [clang-diagnostic-error]
warning: optimization flag '-freorder-blocks' is not supported [clang-diagnostic-ignored-optimization-argument]
.pio\libdeps\um_pros3\ArduinoJson\src\ArduinoJson/Serialization/Writers/ArduinoStringWriter.hpp:19:9: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   19 |     str = static_cast<const char*>(0);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
.pio\libdeps\um_pros3\ArduinoJson\src\ArduinoJson/Variant/ConverterImpl.hpp:281:9: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  281 |     dst = str.c_str();
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:37:1: warning: system include functional not allowed, transitively included from .pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h [llvmlibc-restrict-system-libc-headers]
   37 | #include <functional>
      | ^~~~~~~~~~~~~~~~~~~~~
   38 | 
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:55:41: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   55 |   #define CONFIG_ASYNC_TCP_RUNNING_CORE -1 // any available core
      |                                         ^
      |                                         ( )
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:64:44: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   64 |   #define CONFIG_ASYNC_TCP_STACK_SIZE 8192 * 2
      |                                            ^  
      |                                       (       )
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   84 | typedef std::function<void(void*, AsyncClient*)> AcConnectHandler;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using AcConnectHandler = std::function<void(void*, AsyncClient*)>
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:85:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   85 | typedef std::function<void(void*, AsyncClient*, size_t len, uint32_t time)> AcAckHandler;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using AcAckHandler = std::function<void(void*, AsyncClient*, size_t len, uint32_t time)>
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:86:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   86 | typedef std::function<void(void*, AsyncClient*, int8_t error)> AcErrorHandler;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using AcErrorHandler = std::function<void(void*, AsyncClient*, int8_t error)>
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:87:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   87 | typedef std::function<void(void*, AsyncClient*, void* data, size_t len)> AcDataHandler;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using AcDataHandler = std::function<void(void*, AsyncClient*, void* data, size_t len)>
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   88 | typedef std::function<void(void*, AsyncClient*, struct pbuf* pb)> AcPacketHandler;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using AcPacketHandler = std::function<void(void*, AsyncClient*, struct pbuf* pb)>
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:88:62: warning: parameter name 'pb' is too short, expected at least 3 characters [readability-identifier-length]
   88 | typedef std::function<void(void*, AsyncClient*, struct pbuf* pb)> AcPacketHandler;
      |                                                              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   89 | typedef std::function<void(void*, AsyncClient*, uint32_t time)> AcTimeoutHandler;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using AcTimeoutHandler = std::function<void(void*, AsyncClient*, uint32_t time)>
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:94:7: warning: class 'AsyncClient' defines a destructor and a copy assignment operator but does not define a copy constructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   94 | class AsyncClient {
      |       ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:96:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   96 |     AsyncClient(tcp_pcb* pcb = 0);
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:96:32: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   96 |     AsyncClient(tcp_pcb* pcb = 0);
      |                                ^
      |                                nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:104:5: warning: 'operator!=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  104 |     bool operator!=(const AsyncClient& other) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:105:22: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  105 |       return !(*this == other);
      |                      ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:102:10: note: resolves to this declaration
  102 |     bool operator==(const AsyncClient& other);
      |          ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:107:35: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
  107 |     bool connect(const IPAddress& ip, uint16_t port);
      |                                   ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:109:37: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
  109 |     bool connect(const IPv6Address& ip, uint16_t port);
      |                                     ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:119:5: warning: 'stop' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  119 |     void stop() { close(false); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:172:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  172 |     size_t write(const char* data) { return data == NULL ? 0 : write(data, strlen(data)); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:172:53: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  172 |     size_t write(const char* data) { return data == NULL ? 0 : write(data, strlen(data)); };
      |                                                     ^~~~
      |                                                     nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:196:32: warning: parameter name 'ms' is too short, expected at least 3 characters [readability-identifier-length]
  196 |     void setKeepAlive(uint32_t ms, uint8_t cnt);
      |                                ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:221:37: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  221 |     void onConnect(AcConnectHandler cb, void* arg = 0);
      |                                     ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:221:53: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  221 |     void onConnect(AcConnectHandler cb, void* arg = 0);
      |                                                     ^
      |                                                     nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:223:40: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  223 |     void onDisconnect(AcConnectHandler cb, void* arg = 0);
      |                                        ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:223:56: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  223 |     void onDisconnect(AcConnectHandler cb, void* arg = 0);
      |                                                        ^
      |                                                        nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:225:29: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  225 |     void onAck(AcAckHandler cb, void* arg = 0);
      |                             ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:225:45: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  225 |     void onAck(AcAckHandler cb, void* arg = 0);
      |                                             ^
      |                                             nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:227:33: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  227 |     void onError(AcErrorHandler cb, void* arg = 0);
      |                                 ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:227:49: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  227 |     void onError(AcErrorHandler cb, void* arg = 0);
      |                                                 ^
      |                                                 nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:229:31: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  229 |     void onData(AcDataHandler cb, void* arg = 0);
      |                               ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:229:47: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  229 |     void onData(AcDataHandler cb, void* arg = 0);
      |                                               ^
      |                                               nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:231:35: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  231 |     void onPacket(AcPacketHandler cb, void* arg = 0);
      |                                   ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:231:51: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  231 |     void onPacket(AcPacketHandler cb, void* arg = 0);
      |                                                   ^
      |                                                   nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:233:37: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  233 |     void onTimeout(AcTimeoutHandler cb, void* arg = 0);
      |                                     ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:233:53: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  233 |     void onTimeout(AcTimeoutHandler cb, void* arg = 0);
      |                                                     ^
      |                                                     nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:235:34: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  235 |     void onPoll(AcConnectHandler cb, void* arg = 0);
      |                                  ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:235:50: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  235 |     void onPoll(AcConnectHandler cb, void* arg = 0);
      |                                                  ^
      |                                                  nullptr
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:238:33: warning: parameter name 'pb' is too short, expected at least 3 characters [readability-identifier-length]
  238 |     void ackPacket(struct pbuf* pb);
      |                                 ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:242:5: warning: 'ackLater' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  242 |     void ackLater() { _ack_pcb = false; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:248:19: warning: invalid case style for function '_s_poll' [readability-identifier-naming]
  248 |     static int8_t _s_poll(void* arg, struct tcp_pcb* tpcb);
      |                   ^~~~~~~
      |                   sPoll
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:249:19: warning: invalid case style for function '_s_recv' [readability-identifier-naming]
  249 |     static int8_t _s_recv(void* arg, struct tcp_pcb* tpcb, struct pbuf* pb, int8_t err);
      |                   ^~~~~~~
      |                   sRecv
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:249:73: warning: parameter name 'pb' is too short, expected at least 3 characters [readability-identifier-length]
  249 |     static int8_t _s_recv(void* arg, struct tcp_pcb* tpcb, struct pbuf* pb, int8_t err);
      |                                                                         ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:250:19: warning: invalid case style for function '_s_fin' [readability-identifier-naming]
  250 |     static int8_t _s_fin(void* arg, struct tcp_pcb* tpcb, int8_t err);
      |                   ^~~~~~
      |                   sFin
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:251:19: warning: invalid case style for function '_s_lwip_fin' [readability-identifier-naming]
  251 |     static int8_t _s_lwip_fin(void* arg, struct tcp_pcb* tpcb, int8_t err);
      |                   ^~~~~~~~~~~
      |                   sLwipFin
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:252:17: warning: invalid case style for function '_s_error' [readability-identifier-naming]
  252 |     static void _s_error(void* arg, int8_t err);
      |                 ^~~~~~~~
      |                 sError
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:253:19: warning: invalid case style for function '_s_sent' [readability-identifier-naming]
  253 |     static int8_t _s_sent(void* arg, struct tcp_pcb* tpcb, uint16_t len);
      |                   ^~~~~~~
      |                   sSent
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:254:19: warning: invalid case style for function '_s_connected' [readability-identifier-naming]
  254 |     static int8_t _s_connected(void* arg, struct tcp_pcb* tpcb, int8_t err);
      |                   ^~~~~~~~~~~~
      |                   sConnected
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:255:17: warning: invalid case style for function '_s_dns_found' [readability-identifier-naming]
  255 |     static void _s_dns_found(const char* name, struct ip_addr* ipaddr, void* arg);
      |                 ^~~~~~~~~~~~
      |                 sDnsFound
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:257:12: warning: invalid case style for function '_recv' [readability-identifier-naming]
  257 |     int8_t _recv(tcp_pcb* pcb, pbuf* pb, int8_t err);
      |            ^~~~~
      |            recv
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:257:38: warning: parameter name 'pb' is too short, expected at least 3 characters [readability-identifier-length]
  257 |     int8_t _recv(tcp_pcb* pcb, pbuf* pb, int8_t err);
      |                                      ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:258:5: warning: 'pcb' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  258 |     tcp_pcb* pcb() { return _pcb; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:261:10: warning: invalid case style for function '_connect' [readability-identifier-naming]
  261 |     bool _connect(ip_addr_t addr, uint16_t port);
      |          ^~~~~~~~
      |          connect
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:263:14: warning: member variable '_pcb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  263 |     tcp_pcb* _pcb;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:264:12: warning: member variable '_closed_slot' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  264 |     int8_t _closed_slot;
      |            ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:266:22: warning: member variable '_connect_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  266 |     AcConnectHandler _connect_cb;
      |                      ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:267:11: warning: member variable '_connect_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  267 |     void* _connect_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:268:22: warning: member variable '_discard_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  268 |     AcConnectHandler _discard_cb;
      |                      ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:269:11: warning: member variable '_discard_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  269 |     void* _discard_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:270:18: warning: member variable '_sent_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  270 |     AcAckHandler _sent_cb;
      |                  ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:271:11: warning: member variable '_sent_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  271 |     void* _sent_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:272:20: warning: member variable '_error_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  272 |     AcErrorHandler _error_cb;
      |                    ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:273:11: warning: member variable '_error_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  273 |     void* _error_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:274:19: warning: member variable '_recv_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  274 |     AcDataHandler _recv_cb;
      |                   ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:275:11: warning: member variable '_recv_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  275 |     void* _recv_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:276:21: warning: member variable '_pb_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  276 |     AcPacketHandler _pb_cb;
      |                     ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:277:11: warning: member variable '_pb_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  277 |     void* _pb_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:278:22: warning: member variable '_timeout_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  278 |     AcTimeoutHandler _timeout_cb;
      |                      ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:279:11: warning: member variable '_timeout_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  279 |     void* _timeout_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:280:22: warning: member variable '_poll_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  280 |     AcConnectHandler _poll_cb;
      |                      ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:281:11: warning: member variable '_poll_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  281 |     void* _poll_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:283:10: warning: member variable '_ack_pcb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  283 |     bool _ack_pcb;
      |          ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:284:14: warning: member variable '_tx_last_packet' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  284 |     uint32_t _tx_last_packet;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:285:14: warning: member variable '_rx_ack_len' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  285 |     uint32_t _rx_ack_len;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:286:14: warning: member variable '_rx_last_packet' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  286 |     uint32_t _rx_last_packet;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:287:14: warning: member variable '_rx_timeout' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  287 |     uint32_t _rx_timeout;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:288:14: warning: member variable '_rx_last_ack' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  288 |     uint32_t _rx_last_ack;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:289:14: warning: member variable '_ack_timeout' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  289 |     uint32_t _ack_timeout;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:290:14: warning: member variable '_connect_port' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  290 |     uint16_t _connect_port;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:292:12: warning: invalid case style for function '_close' [readability-identifier-naming]
  292 |     int8_t _close();
      |            ^~~~~~
      |            close
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:293:10: warning: invalid case style for function '_free_closed_slot' [readability-identifier-naming]
  293 |     void _free_closed_slot();
      |          ^~~~~~~~~~~~~~~~~
      |          freeClosedSlot
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:294:10: warning: invalid case style for function '_allocate_closed_slot' [readability-identifier-naming]
  294 |     bool _allocate_closed_slot();
      |          ^~~~~~~~~~~~~~~~~~~~~
      |          allocateClosedSlot
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:295:12: warning: invalid case style for function '_connected' [readability-identifier-naming]
  295 |     int8_t _connected(tcp_pcb* pcb, int8_t err);
      |            ^~~~~~~~~~
      |            connected
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:296:10: warning: invalid case style for function '_error' [readability-identifier-naming]
  296 |     void _error(int8_t err);
      |          ^~~~~~
      |          error
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:297:12: warning: invalid case style for function '_poll' [readability-identifier-naming]
  297 |     int8_t _poll(tcp_pcb* pcb);
      |            ^~~~~
      |            poll
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:298:12: warning: invalid case style for function '_sent' [readability-identifier-naming]
  298 |     int8_t _sent(tcp_pcb* pcb, uint16_t len);
      |            ^~~~~
      |            sent
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:299:12: warning: invalid case style for function '_fin' [readability-identifier-naming]
  299 |     int8_t _fin(tcp_pcb* pcb, int8_t err);
      |            ^~~~
      |            fin
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:300:12: warning: invalid case style for function '_lwip_fin' [readability-identifier-naming]
  300 |     int8_t _lwip_fin(tcp_pcb* pcb, int8_t err);
      |            ^~~~~~~~~
      |            lwipFin
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:301:10: warning: invalid case style for function '_dns_found' [readability-identifier-naming]
  301 |     void _dns_found(struct ip_addr* ipaddr);
      |          ^~~~~~~~~~
      |          dnsFound
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:304:18: warning: member variable 'prev' has public visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  304 |     AsyncClient* prev;
      |                  ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:305:18: warning: member variable 'next' has public visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  305 |     AsyncClient* next;
      |                  ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:308:7: warning: class 'AsyncServer' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  308 | class AsyncServer {
      |       ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:314:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  314 |     AsyncServer(uint16_t port);
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:316:36: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  316 |     void onClient(AcConnectHandler cb, void* arg);
      |                                    ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:324:19: warning: invalid case style for function '_s_accept' [readability-identifier-naming]
  324 |     static int8_t _s_accept(void* arg, tcp_pcb* newpcb, int8_t err);
      |                   ^~~~~~~~~
      |                   sAccept
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:325:19: warning: invalid case style for function '_s_accepted' [readability-identifier-naming]
  325 |     static int8_t _s_accepted(void* arg, AsyncClient* client);
      |                   ^~~~~~~~~~~
      |                   sAccepted
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:328:14: warning: member variable '_port' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  328 |     uint16_t _port;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:329:10: warning: member variable '_bind4' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  329 |     bool _bind4 = false;
      |          ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:330:10: warning: member variable '_bind6' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  330 |     bool _bind6 = false;
      |          ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:331:15: warning: member variable '_addr' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  331 |     IPAddress _addr;
      |               ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:333:17: warning: member variable '_addr6' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  333 |     IPv6Address _addr6;
      |                 ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:335:10: warning: member variable '_noDelay' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  335 |     bool _noDelay;
      |          ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:336:14: warning: member variable '_pcb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  336 |     tcp_pcb* _pcb;
      |              ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:337:22: warning: member variable '_connect_cb' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  337 |     AcConnectHandler _connect_cb;
      |                      ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:338:11: warning: member variable '_connect_cb_arg' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  338 |     void* _connect_cb_arg;
      |           ^
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:340:12: warning: invalid case style for function '_accept' [readability-identifier-naming]
  340 |     int8_t _accept(tcp_pcb* newpcb, int8_t err);
      |            ^~~~~~~
      |            accept
.pio\libdeps\um_pros3\AsyncTCP\src\AsyncTCP.h:341:12: warning: invalid case style for function '_accepted' [readability-identifier-naming]
  341 |     int8_t _accepted(AsyncClient* client);
      |            ^~~~~~~~~
      |            accepted
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:15:9: warning: declaration uses identifier '__DFRobot_TCS3430_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define __DFRobot_TCS3430_H__
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         DFRobot_TCS3430_H_
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:32:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   32 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   33 |   uint8_t   pon: 1; /* Power ON. This field activates the internal oscillator to permit the timers and ADC channels to operate. 
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |                        Writing a one activates the oscillator. 
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   35 |                        Writing a zero disables the oscillator. */
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   36 |   uint8_t   aen: 1; /* ALS Enable. This bit actives the ALS function.
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |                       Set aen=1 and pon=1 in the same command to ensure autozero function is run prior to the first measurement.*/
      |                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |   uint8_t   reservedBit2: 1; /* Reserved. */
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |   uint8_t   wen: 1; /* Wait Enable. This bit activates the wait featrue. 
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |                        Writing a 1 activates the wait timer.
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |                        Writing a 0 disables the wait timer. */
      |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |   uint8_t   reservedBit4_7: 4; /* Reserved. */
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 | } __attribute__ ((packed)) sEnableReg_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:164:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  164 | typedef struct { 
      | ^~~~~~~~~~~~~~~~
  165 |   uint8_t   again: 2; 
      |   ~~~~~~~~~~~~~~~~~~~
  166 |   uint8_t   reservedBit2: 1; 
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~
  167 |   uint8_t   amux: 1;
      |   ~~~~~~~~~~~~~~~~~~
  168 |   uint8_t   reservedBit4_7: 4; 
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  169 | } __attribute__ ((packed)) sCFG1Reg_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:253:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  253 | typedef struct { 
      | ^~~~~~~~~~~~~~~~
  254 |   uint8_t   reservedBit0_3: 4; 
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  255 |   uint8_t   sai: 1; 
      |   ~~~~~~~~~~~~~~~~~
  256 |   uint8_t   reservedBit5_6: 2;
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  257 |   uint8_t   intReadClear: 1; 
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~
  258 | } __attribute__ ((packed)) sCFG3Reg_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:271:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  271 | typedef struct { 
      | ^~~~~~~~~~~~~~~~
  272 |   uint8_t   azNTHIteration: 7;
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  273 |   uint8_t   azMode: 1; 
      |   ~~~~~~~~~~~~~~~~~~~~
  274 | } __attribute__ ((packed)) sAZCFGReg_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:286:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  286 | typedef struct { 
      | ^~~~~~~~~~~~~~~~
  287 |   uint8_t   reservedBit0_3: 4; 
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  288 |   uint8_t   aien: 1; 
      |   ~~~~~~~~~~~~~~~~~~
  289 |   uint8_t   reservedBit5_6: 2;
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  290 |   uint8_t   asien: 1; 
      |   ~~~~~~~~~~~~~~~~~~~
  291 | } __attribute__ ((packed)) sINTENABReg_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:293:7: warning: class 'DFRobot_TCS3430' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  293 | class DFRobot_TCS3430{
      |       ^
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:293:7: warning: invalid case style for class 'DFRobot_TCS3430' [readability-identifier-naming]
  293 | class DFRobot_TCS3430{
      |       ^~~~~~~~~~~~~~~
      |       DfRobotTcS3430
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:296:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
  296 |   typedef enum {
      |   ^~~~~~~~~~~~~~
  297 |     eRegENABLEAddr = 0x80,
      |     ~~~~~~~~~~~~~~~~~~~~~~
  298 |     eRegATIMEAddr,
      |     ~~~~~~~~~~~~~~
  299 |     eRegWTIMEAddr = 0x83,
      |     ~~~~~~~~~~~~~~~~~~~~~
  300 |     eRegAILTLAddr,
      |     ~~~~~~~~~~~~~~
  301 |     eRegAILTHAddr,
      |     ~~~~~~~~~~~~~~
  302 |     eRegAIHTLAddr,
      |     ~~~~~~~~~~~~~~
  303 |     eRegAIHTHAddr,
      |     ~~~~~~~~~~~~~~
  304 |     eRegPERSAddr = 0x8C,
      |     ~~~~~~~~~~~~~~~~~~~~
  305 |     eRegCFG0Addr,
      |     ~~~~~~~~~~~~~
  306 |     eRegCFG1Addr = 0x90,
      |     ~~~~~~~~~~~~~~~~~~~~
  307 |     eRegREVIDAddr,
      |     ~~~~~~~~~~~~~~
  308 |     eRegIDAddr,
      |     ~~~~~~~~~~~
  309 |     eRegSTATUSAddr,
      |     ~~~~~~~~~~~~~~~
  310 |     eRegCH0DATALAddr,
      |     ~~~~~~~~~~~~~~~~~
  311 |     eRegCH0DATAHAddr,
      |     ~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:296:11: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  296 |   typedef enum {
      |           ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:296:11: warning: enum 'eTCS3430RegisterAddress_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:297:5: warning: invalid case style for constant 'eRegENABLEAddr' [readability-identifier-naming]
  297 |     eRegENABLEAddr = 0x80,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:298:5: warning: invalid case style for constant 'eRegATIMEAddr' [readability-identifier-naming]
  298 |     eRegATIMEAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:299:5: warning: invalid case style for constant 'eRegWTIMEAddr' [readability-identifier-naming]
  299 |     eRegWTIMEAddr = 0x83,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:300:5: warning: invalid case style for constant 'eRegAILTLAddr' [readability-identifier-naming]
  300 |     eRegAILTLAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:301:5: warning: invalid case style for constant 'eRegAILTHAddr' [readability-identifier-naming]
  301 |     eRegAILTHAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:302:5: warning: invalid case style for constant 'eRegAIHTLAddr' [readability-identifier-naming]
  302 |     eRegAIHTLAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:303:5: warning: invalid case style for constant 'eRegAIHTHAddr' [readability-identifier-naming]
  303 |     eRegAIHTHAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:304:5: warning: invalid case style for constant 'eRegPERSAddr' [readability-identifier-naming]
  304 |     eRegPERSAddr = 0x8C,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:305:5: warning: invalid case style for constant 'eRegCFG0Addr' [readability-identifier-naming]
  305 |     eRegCFG0Addr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:306:5: warning: invalid case style for constant 'eRegCFG1Addr' [readability-identifier-naming]
  306 |     eRegCFG1Addr = 0x90,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:307:5: warning: invalid case style for constant 'eRegREVIDAddr' [readability-identifier-naming]
  307 |     eRegREVIDAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:308:5: warning: invalid case style for constant 'eRegIDAddr' [readability-identifier-naming]
  308 |     eRegIDAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:309:5: warning: invalid case style for constant 'eRegSTATUSAddr' [readability-identifier-naming]
  309 |     eRegSTATUSAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:310:5: warning: invalid case style for constant 'eRegCH0DATALAddr' [readability-identifier-naming]
  310 |     eRegCH0DATALAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:311:5: warning: invalid case style for constant 'eRegCH0DATAHAddr' [readability-identifier-naming]
  311 |     eRegCH0DATAHAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:312:5: warning: invalid case style for constant 'eRegCH1DATALAddr' [readability-identifier-naming]
  312 |     eRegCH1DATALAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:313:5: warning: invalid case style for constant 'eRegCH1DATAHAddr' [readability-identifier-naming]
  313 |     eRegCH1DATAHAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:314:5: warning: invalid case style for constant 'eRegCH2DATALAddr' [readability-identifier-naming]
  314 |     eRegCH2DATALAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:315:5: warning: invalid case style for constant 'eRegCH2DATAHAddr' [readability-identifier-naming]
  315 |     eRegCH2DATAHAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:316:5: warning: invalid case style for constant 'eRegCH3DATALAddr' [readability-identifier-naming]
  316 |     eRegCH3DATALAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:317:5: warning: invalid case style for constant 'eRegCH3DATAHAddr' [readability-identifier-naming]
  317 |     eRegCH3DATAHAddr,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:318:5: warning: invalid case style for constant 'eRegCFG2Addr' [readability-identifier-naming]
  318 |     eRegCFG2Addr = 0x9F,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:319:5: warning: invalid case style for constant 'eRegCFG3Addr' [readability-identifier-naming]
  319 |     eRegCFG3Addr = 0xAB,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:320:5: warning: invalid case style for constant 'eRegAZCONFIGAddr' [readability-identifier-naming]
  320 |     eRegAZCONFIGAddr = 0xD6,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:321:5: warning: invalid case style for constant 'eRegINTENABAddr' [readability-identifier-naming]
  321 |     eRegINTENABAddr = 0xDD,
      |     ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:323:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  323 | public:
      | ^~~~~~~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:294:1: note: previously declared here
  294 | public:
      | ^
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:328:3: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  328 |   DFRobot_TCS3430(TwoWire *pWire=&Wire);
      |   ^
      |   explicit 
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:333:3: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
  333 |   ~DFRobot_TCS3430(){
      |   ^                 ~
      |                     = default
  334 |   };
      |   ~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:333:3: warning: '~DFRobot_TCS3430' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  333 |   ~DFRobot_TCS3430(){
      |   ^
      |   LIBC_INLINE 
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:521:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  521 | private:
      | ^~~~~~~~
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:465:1: note: previously declared here
  465 | private:
      | ^
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:522:29: warning: declaration uses identifier '_TCS3430Register', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  522 |   eTCS3430RegisterAddress_t _TCS3430Register;
      |                             ^~~~~~~~~~~~~~~~
      |                             TCS3430Register
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:528:15: warning: declaration uses identifier '_AZCfgReg', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  528 |   sAZCFGReg_t _AZCfgReg;
      |               ^~~~~~~~~
      |               AZCfgReg
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:27:3: warning: system include mutex not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h [llvmlibc-restrict-system-libc-headers]
   27 |   #include <mutex>
      |   ^~~~~~~~~~~~~~~~
   28 |   #ifndef SSE_MAX_QUEUED_MESSAGES
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:31:29: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   31 |   #define SSE_MIN_INFLIGH 2 * 1460  // allow 2 MSS packets
      |                             ^
      |                           (       )
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:32:30: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   32 |   #define SSE_MAX_INFLIGH 16 * 1024 // but no more than 16k, no need to blow it, since same data is kept in local Q
      |                              ^
      |                           (        )
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:49:10: warning: circular header file dependency detected while including 'ESPAsyncWebServer.h', please check the include path [misc-header-include-cycle]
   49 | #include <ESPAsyncWebServer.h>
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:922:10: note: 'AsyncEventSource.h' included from here
  922 | #include "AsyncEventSource.h"
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:14:10: note: 'ESPAsyncWebServer.h' included from here
   14 | #include <ESPAsyncWebServer.h>
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:73:35: warning: member '_data' of type 'const AsyncEvent_SharedData_t' (aka 'const shared_ptr<String>') is const qualified [cppcoreguidelines-avoid-const-or-ref-data-members]
   73 |     const AsyncEvent_SharedData_t _data;
      |                                   ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:73:35: warning: invalid case style for constant '_data' [readability-identifier-naming]
   73 |     const AsyncEvent_SharedData_t _data;
      |                                   ^~~~~
      |                                   DATA
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:78:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   78 |     AsyncEventSourceMessage(AsyncEvent_SharedData_t data) : _data(data) {};
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:78:5: warning: 'AsyncEventSourceMessage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   78 |     AsyncEventSourceMessage(AsyncEvent_SharedData_t data) : _data(data) {};
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:80:5: warning: 'AsyncEventSourceMessage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   80 |     AsyncEventSourceMessage(const char* data, size_t len) : _data(std::make_shared<String>(data, len)) {};
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:114:5: warning: 'finished' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  114 |     bool finished() { return _acked == _data->length(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:120:5: warning: 'sent' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  120 |     bool sent() { return _sent == _data->length(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:127:7: warning: class 'AsyncEventSourceClient' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  127 | class AsyncEventSourceClient {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:133:26: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  133 |     size_t _max_inflight{SSE_MAX_INFLIGH}; // max num of unacknowledged bytes that could be written to socket buffer
      |                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:32:27: note: expanded from macro 'SSE_MAX_INFLIGH'
   32 |   #define SSE_MAX_INFLIGH 16 * 1024 // but no more than 16k, no need to blow it, since same data is kept in local Q
      |                           ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:133:26: note: make conversion explicit to silence this warning
  133 |     size_t _max_inflight{SSE_MAX_INFLIGH}; // max num of unacknowledged bytes that could be written to socket buffer
      |                          ^              
      |                          static_cast<size_t>( )
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:32:27: note: expanded from macro 'SSE_MAX_INFLIGH'
   32 |   #define SSE_MAX_INFLIGH 16 * 1024 // but no more than 16k, no need to blow it, since same data is kept in local Q
      |                           ^~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:133:26: note: perform multiplication in a wider type
  133 |     size_t _max_inflight{SSE_MAX_INFLIGH}; // max num of unacknowledged bytes that could be written to socket buffer
      |                          ^
      |                          static_cast<long long>(
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:32:27: note: expanded from macro 'SSE_MAX_INFLIGH'
   32 |   #define SSE_MAX_INFLIGH 16 * 1024 // but no more than 16k, no need to blow it, since same data is kept in local Q
      |                           ^~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:138:10: warning: invalid case style for function '_queueMessage' [readability-identifier-naming]
  138 |     bool _queueMessage(const char* message, size_t len);
      |          ^~~~~~~~~~~~~
      |          queueMessage
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:139:10: warning: invalid case style for function '_queueMessage' [readability-identifier-naming]
  139 |     bool _queueMessage(AsyncEvent_SharedData_t&& msg);
      |          ^~~~~~~~~~~~~
      |          queueMessage
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:140:10: warning: invalid case style for function '_runQueue' [readability-identifier-naming]
  140 |     void _runQueue();
      |          ^~~~~~~~~
      |          runQueue
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:157:56: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  157 |     bool send(const char* message, const char* event = NULL, uint32_t id = 0, uint32_t reconnect = 0);
      |                                                        ^~~~
      |                                                        nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:157:71: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  157 |     bool send(const char* message, const char* event = NULL, uint32_t id = 0, uint32_t reconnect = 0);
      |                                                                       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:158:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  158 |     bool send(const String& message, const String& event, uint32_t id = 0, uint32_t reconnect = 0) { return send(message.c_str(), event.c_str(), id, reconnect); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:158:68: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  158 |     bool send(const String& message, const String& event, uint32_t id = 0, uint32_t reconnect = 0) { return send(message.c_str(), event.c_str(), id, reconnect); }
      |                                                                    ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:159:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  159 |     bool send(const String& message, const char* event, uint32_t id = 0, uint32_t reconnect = 0) { return send(message.c_str(), event, id, reconnect); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:159:66: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  159 |     bool send(const String& message, const char* event, uint32_t id = 0, uint32_t reconnect = 0) { return send(message.c_str(), event, id, reconnect); }
      |                                                                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:169:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  169 |     bool write(AsyncEvent_SharedData_t message) { return connected() && _queueMessage(std::move(message)); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:172:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  172 |     bool write(const char* message, size_t len) { return connected() && _queueMessage(message, len); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:179:5: warning: 'client' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  179 |     AsyncClient* client() { return _client; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:180:5: warning: 'connected' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  180 |     bool connected() const { return _client && _client->connected(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:180:37: warning: implicit conversion 'AsyncClient *' -> 'bool' [readability-implicit-bool-conversion]
  180 |     bool connected() const { return _client && _client->connected(); }
      |                                     ^
      |                                     (       != nullptr)
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:181:5: warning: 'lastId' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  181 |     uint32_t lastId() const { return _lastId; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:182:5: warning: 'packetsWaiting' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  182 |     size_t packetsWaiting() const { return _messageQueue.size(); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:191:10: warning: invalid case style for function 'set_max_inflight_bytes' [readability-identifier-naming]
  191 |     void set_max_inflight_bytes(size_t value);
      |          ^~~~~~~~~~~~~~~~~~~~~~
      |          setMaxInflightBytes
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:198:5: warning: 'get_max_inflight_bytes' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  198 |     size_t get_max_inflight_bytes() const { return _max_inflight; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:198:12: warning: invalid case style for function 'get_max_inflight_bytes' [readability-identifier-naming]
  198 |     size_t get_max_inflight_bytes() const { return _max_inflight; }
      |            ^~~~~~~~~~~~~~~~~~~~~~
      |            getMaxInflightBytes
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:201:10: warning: invalid case style for function '_onAck' [readability-identifier-naming]
  201 |     void _onAck(size_t len, uint32_t time);
      |          ^~~~~~
      |          onAck
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:202:10: warning: invalid case style for function '_onPoll' [readability-identifier-naming]
  202 |     void _onPoll();
      |          ^~~~~~~
      |          onPoll
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:203:10: warning: invalid case style for function '_onTimeout' [readability-identifier-naming]
  203 |     void _onTimeout(uint32_t time);
      |          ^~~~~~~~~~
      |          onTimeout
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:204:10: warning: invalid case style for function '_onDisconnect' [readability-identifier-naming]
  204 |     void _onDisconnect();
      |          ^~~~~~~~~~~~~
      |          onDisconnect
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:212:7: warning: class 'AsyncEventSource' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  212 | class AsyncEventSource : public AsyncWebHandler {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:225:10: warning: invalid case style for function '_adjust_inflight_window' [readability-identifier-naming]
  225 |     void _adjust_inflight_window();
      |          ^~~~~~~~~~~~~~~~~~~~~~~
      |          adjustInflightWindow
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:228:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
  228 |     typedef enum {
      |     ^~~~~~~~~~~~~~
  229 |       DISCARDED = 0,
      |       ~~~~~~~~~~~~~~
  230 |       ENQUEUED = 1,
      |       ~~~~~~~~~~~~~
  231 |       PARTIALLY_ENQUEUED = 2,
      |       ~~~~~~~~~~~~~~~~~~~~~~~
  232 |     } SendStatus;
      |     ~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:228:13: warning: enum 'SendStatus' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  228 |     typedef enum {
      |             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:234:5: warning: constructor does not initialize these fields: _clients [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  215 |     AsyncEventSource(const char* url) : _url(url) {};
      |     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:234:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  234 |     AsyncEventSource(const char* url) : _url(url) {};
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:234:5: warning: 'AsyncEventSource' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  234 |     AsyncEventSource(const char* url) : _url(url) {};
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:235:5: warning: constructor does not initialize these fields: _clients [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  235 |     AsyncEventSource(const String& url) : _url(url) {};
      |     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:235:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  235 |     AsyncEventSource(const String& url) : _url(url) {};
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:235:5: warning: 'AsyncEventSource' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  235 |     AsyncEventSource(const String& url) : _url(url) {};
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:236:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  236 |     ~AsyncEventSource() { close(); };
      |     ^
      |                         override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:236:5: warning: '~AsyncEventSource' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  236 |     ~AsyncEventSource() { close(); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:238:5: warning: 'url' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  238 |     const char* url() const { return _url.c_str(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:248:5: warning: 'onConnect' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  248 |     void onConnect(ArEventHandlerFunction cb) { _connectcb = cb; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:248:43: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  248 |     void onConnect(ArEventHandlerFunction cb) { _connectcb = cb; }
      |                                           ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:260:62: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  260 |     SendStatus send(const char* message, const char* event = NULL, uint32_t id = 0, uint32_t reconnect = 0);
      |                                                              ^~~~
      |                                                              nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:260:77: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  260 |     SendStatus send(const char* message, const char* event = NULL, uint32_t id = 0, uint32_t reconnect = 0);
      |                                                                             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:261:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  261 |     SendStatus send(const String& message, const String& event, uint32_t id = 0, uint32_t reconnect = 0) { return send(message.c_str(), event.c_str(), id, reconnect); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:261:74: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  261 |     SendStatus send(const String& message, const String& event, uint32_t id = 0, uint32_t reconnect = 0) { return send(message.c_str(), event.c_str(), id, reconnect); }
      |                                                                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:262:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  262 |     SendStatus send(const String& message, const char* event, uint32_t id = 0, uint32_t reconnect = 0) { return send(message.c_str(), event, id, reconnect); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:262:72: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  262 |     SendStatus send(const String& message, const char* event, uint32_t id = 0, uint32_t reconnect = 0) { return send(message.c_str(), event, id, reconnect); }
      |                                                                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:265:5: warning: 'onDisconnect' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  265 |     void onDisconnect(ArEventHandlerFunction cb) { _disconnectcb = cb; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:265:46: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  265 |     void onDisconnect(ArEventHandlerFunction cb) { _disconnectcb = cb; }
      |                                              ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:266:53: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  266 |     void authorizeConnect(ArAuthorizeConnectHandler cb);
      |                                                     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:275:10: warning: invalid case style for function '_addClient' [readability-identifier-naming]
  275 |     void _addClient(AsyncEventSourceClient* client);
      |          ^~~~~~~~~~
      |          addClient
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:276:10: warning: invalid case style for function '_handleDisconnect' [readability-identifier-naming]
  276 |     void _handleDisconnect(AsyncEventSourceClient* client);
      |          ^~~~~~~~~~~~~~~~~
      |          handleDisconnect
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:277:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  277 |     bool canHandle(AsyncWebServerRequest* request) const override final;
      |          ^                                               ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:278:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  278 |     void handleRequest(AsyncWebServerRequest* request) override final;
      |          ^                                             ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:286:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  286 |     AsyncEventSourceResponse(AsyncEventSource* server);
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:287:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  287 |     void _respond(AsyncWebServerRequest* request);
      |          ^                                       
      |                                                   override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:288:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  288 |     size_t _ack(AsyncWebServerRequest* request, size_t len, uint32_t time);
      |            ^                                                              
      |                                                                            override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:289:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  289 |     bool _sourceValid() const { return true; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncEventSource.h:289:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  289 |     bool _sourceValid() const { return true; }
      |          ^
      |                               override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:27:3: warning: system include mutex not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h [llvmlibc-restrict-system-libc-headers]
   27 |   #include <mutex>
      |   ^~~~~~~~~~~~~~~~
   28 |   #ifndef WS_MAX_QUEUED_MESSAGES
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:43:10: warning: circular header file dependency detected while including 'ESPAsyncWebServer.h', please check the include path [misc-header-include-cycle]
   43 | #include <ESPAsyncWebServer.h>
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:923:10: note: 'AsyncWebSocket.h' included from here
  923 | #include "AsyncWebSocket.h"
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:14:10: note: 'ESPAsyncWebServer.h' included from here
   14 | #include <ESPAsyncWebServer.h>
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:45:1: warning: system include memory not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h [llvmlibc-restrict-system-libc-headers]
   45 | #include <memory>
      | ^~~~~~~~~~~~~~~~~
   46 | 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   69 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   70 |     /** Message type as defined by enum AwsFrameType.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |      * Note: Applications will only see WS_TEXT and WS_BINARY.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |      * All other types are handled by the library. */
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     uint8_t message_opcode;
      |     ~~~~~~~~~~~~~~~~~~~~~~~
   74 |     /** Frame number of a fragmented message. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |     uint32_t num;
      |     ~~~~~~~~~~~~~
   76 |     /** Is this the last frame in a fragmented message ?*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |     uint8_t final;
      |     ~~~~~~~~~~~~~~
   78 |     /** Is this frame masked? */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |     uint8_t masked;
      |     ~~~~~~~~~~~~~~~
   80 |     /** Message type as defined by enum AwsFrameType.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   81 |      * This value is the same as message_opcode for non-fragmented
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |      * messages, but may also be WS_CONTINUATION in a fragmented message. */
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   83 |     uint8_t opcode;
      |     ~~~~~~~~~~~~~~~
   84 |     /** Length of the current frame.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:88:5: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   88 |     uint8_t mask[4];
      |     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:93:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   93 | typedef enum { WS_DISCONNECTED,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |                WS_CONNECTED,
      |                ~~~~~~~~~~~~~
   95 |                WS_DISCONNECTING } AwsClientStatus;
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:93:9: warning: enum 'AwsClientStatus' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   93 | typedef enum { WS_DISCONNECTED,
      |         ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:96:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   96 | typedef enum { WS_CONTINUATION,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   97 |                WS_TEXT,
      |                ~~~~~~~~
   98 |                WS_BINARY,
      |                ~~~~~~~~~~
   99 |                WS_DISCONNECT = 0x08,
      |                ~~~~~~~~~~~~~~~~~~~~~
  100 |                WS_PING,
      |                ~~~~~~~~
  101 |                WS_PONG } AwsFrameType;
      |                ~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:96:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   96 | typedef enum { WS_CONTINUATION,
      |         ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:96:9: warning: enum 'AwsFrameType' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  102 | typedef enum { WS_MSG_SENDING,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  103 |                WS_MSG_SENT,
      |                ~~~~~~~~~~~~
  104 |                WS_MSG_ERROR } AwsMessageStatus;
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:102:9: warning: enum 'AwsMessageStatus' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  102 | typedef enum { WS_MSG_SENDING,
      |         ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:105:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  105 | typedef enum { WS_EVT_CONNECT,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  106 |                WS_EVT_DISCONNECT,
      |                ~~~~~~~~~~~~~~~~~~
  107 |                WS_EVT_PING,
      |                ~~~~~~~~~~~~
  108 |                WS_EVT_PONG,
      |                ~~~~~~~~~~~~
  109 |                WS_EVT_ERROR,
      |                ~~~~~~~~~~~~~
  110 |                WS_EVT_DATA } AwsEventType;
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:105:9: warning: enum 'AwsEventType' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  105 | typedef enum { WS_EVT_CONNECT,
      |         ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:120:5: warning: constructor does not initialize these fields: _buffer [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  117 |     AsyncWebSocketSharedBuffer _buffer;
      |                                       
      |                                       {}
  118 | 
  119 |   public:
  120 |     AsyncWebSocketMessageBuffer() {}
      |     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:120:5: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
  120 |     AsyncWebSocketMessageBuffer() {}
      |     ^                             ~~
      |                                   = default;
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:120:5: warning: 'AsyncWebSocketMessageBuffer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  120 |     AsyncWebSocketMessageBuffer() {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:125:5: warning: 'get' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  125 |     uint8_t* get() { return _buffer->data(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:126:5: warning: 'length' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  126 |     size_t length() const { return _buffer->size(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:131:32: warning: declaration uses identifier '_WSbuffer', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  131 |     AsyncWebSocketSharedBuffer _WSbuffer;
      |                                ^~~~~~~~~
      |                                WSbuffer
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:140:5: warning: constructors that are callable with a single argument must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  140 |     AsyncWebSocketMessage(AsyncWebSocketSharedBuffer buffer, uint8_t opcode = WS_TEXT, bool mask = false);
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:142:5: warning: 'finished' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  142 |     bool finished() const { return _status != WS_MSG_SENDING; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:143:5: warning: 'betweenFrames' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  143 |     bool betweenFrames() const { return _acked == _ack; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:149:7: warning: class 'AsyncWebSocketClient' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  149 | class AsyncWebSocketClient {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:168:10: warning: invalid case style for function '_queueControl' [readability-identifier-naming]
  168 |     bool _queueControl(uint8_t opcode, const uint8_t* data = NULL, size_t len = 0, bool mask = false);
      |          ^~~~~~~~~~~~~
      |          queueControl
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:168:62: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  168 |     bool _queueControl(uint8_t opcode, const uint8_t* data = NULL, size_t len = 0, bool mask = false);
      |                                                              ^~~~
      |                                                              nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:169:10: warning: invalid case style for function '_queueMessage' [readability-identifier-naming]
  169 |     bool _queueMessage(AsyncWebSocketSharedBuffer buffer, uint8_t opcode = WS_TEXT, bool mask = false);
      |          ^~~~~~~~~~~~~
      |          queueMessage
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:170:10: warning: invalid case style for function '_runQueue' [readability-identifier-naming]
  170 |     void _runQueue();
      |          ^~~~~~~~~
      |          runQueue
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:171:10: warning: invalid case style for function '_clearQueue' [readability-identifier-naming]
  171 |     void _clearQueue();
      |          ^~~~~~~~~~~
      |          clearQueue
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:174:11: warning: member variable '_tempObject' has public visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  174 |     void* _tempObject;
      |           ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:180:5: warning: 'id' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  180 |     uint32_t id() const { return _clientId; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:181:5: warning: 'status' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  181 |     AwsClientStatus status() const { return _status; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:182:5: warning: 'client' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  182 |     AsyncClient* client() { return _client; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:183:5: warning: 'client' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  183 |     const AsyncClient* client() const { return _client; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:184:5: warning: 'server' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  184 |     AsyncWebSocket* server() { return _server; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:185:5: warning: 'server' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  185 |     const AsyncWebSocket* server() const { return _server; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:186:5: warning: 'pinfo' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  186 |     AwsFrameInfo const& pinfo() const { return _pinfo; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:206:5: warning: 'setCloseClientOnQueueFull' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  206 |     void setCloseClientOnQueueFull(bool close) { closeWhenFull = close; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:207:5: warning: 'willCloseClientOnQueueFull' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  207 |     bool willCloseClientOnQueueFull() const { return closeWhenFull; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:212:5: warning: 'shouldBeDeleted' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  212 |     bool shouldBeDeleted() const { return !_client; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:212:44: warning: implicit conversion 'AsyncClient *' -> 'bool' [readability-implicit-bool-conversion]
  212 |     bool shouldBeDeleted() const { return !_client; }
      |                                           ~^      
      |                                                    == nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:215:57: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  215 |     void close(uint16_t code = 0, const char* message = NULL);
      |                                                         ^~~~
      |                                                         nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:216:37: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  216 |     bool ping(const uint8_t* data = NULL, size_t len = 0);
      |                                     ^~~~
      |                                     nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:219:5: warning: 'keepAlivePeriod' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  219 |     void keepAlivePeriod(uint16_t seconds) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:222:5: warning: 'keepAlivePeriod' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  222 |     uint16_t keepAlivePeriod() {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:222:14: warning: method 'keepAlivePeriod' can be made const [readability-make-member-function-const]
  222 |     uint16_t keepAlivePeriod() {
      |              ^
      |                                const
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:227:5: warning: 'message' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  227 |     void message(AsyncWebSocketSharedBuffer buffer, uint8_t opcode = WS_TEXT, bool mask = false) { _queueMessage(buffer, opcode, mask); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:250:10: warning: invalid case style for function '_onAck' [readability-identifier-naming]
  250 |     void _onAck(size_t len, uint32_t time);
      |          ^~~~~~
      |          onAck
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:251:10: warning: invalid case style for function '_onError' [readability-identifier-naming]
  251 |     void _onError(int8_t);
      |          ^~~~~~~~
      |          onError
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:252:10: warning: invalid case style for function '_onPoll' [readability-identifier-naming]
  252 |     void _onPoll();
      |          ^~~~~~~
      |          onPoll
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:253:10: warning: invalid case style for function '_onTimeout' [readability-identifier-naming]
  253 |     void _onTimeout(uint32_t time);
      |          ^~~~~~~~~~
      |          onTimeout
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:254:10: warning: invalid case style for function '_onDisconnect' [readability-identifier-naming]
  254 |     void _onDisconnect();
      |          ^~~~~~~~~~~~~
      |          onDisconnect
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:255:10: warning: invalid case style for function '_onData' [readability-identifier-naming]
  255 |     void _onData(void* pbuf, size_t plen);
      |          ^~~~~~~
      |          onData
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:268:7: warning: class 'AsyncWebSocket' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  268 | class AsyncWebSocket : public AsyncWebHandler {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:281:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
  281 |     typedef enum {
      |     ^~~~~~~~~~~~~~
  282 |       DISCARDED = 0,
      |       ~~~~~~~~~~~~~~
  283 |       ENQUEUED = 1,
      |       ~~~~~~~~~~~~~
  284 |       PARTIALLY_ENQUEUED = 2,
      |       ~~~~~~~~~~~~~~~~~~~~~~~
  285 |     } SendStatus;
      |     ~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:281:13: warning: enum 'SendStatus' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  281 |     typedef enum {
      |             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:287:5: warning: constructor does not initialize these fields: _clients [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  271 |     explicit AsyncWebSocket(const char* url) : _url(url), _cNextId(1), _enabled(true) {}
      |     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:287:5: warning: 'AsyncWebSocket' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  287 |     explicit AsyncWebSocket(const char* url) : _url(url), _cNextId(1), _enabled(true) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:288:5: warning: constructor does not initialize these fields: _clients [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  288 |     AsyncWebSocket(const String& url) : _url(url), _cNextId(1), _enabled(true) {}
      |     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:288:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  288 |     AsyncWebSocket(const String& url) : _url(url), _cNextId(1), _enabled(true) {}
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:288:5: warning: 'AsyncWebSocket' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  288 |     AsyncWebSocket(const String& url) : _url(url), _cNextId(1), _enabled(true) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:289:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  289 |     ~AsyncWebSocket() {};
      |     ^
      |                       override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:289:5: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
  289 |     ~AsyncWebSocket() {};
      |     ^                 ~~
      |                       = default
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:289:5: warning: '~AsyncWebSocket' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  289 |     ~AsyncWebSocket() {};
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:290:5: warning: 'url' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  290 |     const char* url() const { return _url.c_str(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:291:5: warning: 'enable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  291 |     void enable(bool e) { _enabled = e; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:291:22: warning: parameter name 'e' is too short, expected at least 3 characters [readability-identifier-length]
  291 |     void enable(bool e) { _enabled = e; }
      |                      ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:292:5: warning: 'enabled' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  292 |     bool enabled() const { return _enabled; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:294:37: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  294 |     bool availableForWrite(uint32_t id);
      |                                     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:297:43: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  297 |     AsyncWebSocketClient* client(uint32_t id);
      |                                           ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:298:5: warning: 'hasClient' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  298 |     bool hasClient(uint32_t id) { return client(id) != nullptr; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:298:29: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  298 |     bool hasClient(uint32_t id) { return client(id) != nullptr; }
      |                             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:300:25: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  300 |     void close(uint32_t id, uint16_t code = 0, const char* message = NULL);
      |                         ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:300:70: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  300 |     void close(uint32_t id, uint16_t code = 0, const char* message = NULL);
      |                                                                      ^~~~
      |                                                                      nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:301:60: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  301 |     void closeAll(uint16_t code = 0, const char* message = NULL);
      |                                                            ^~~~
      |                                                            nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:304:24: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  304 |     bool ping(uint32_t id, const uint8_t* data = NULL, size_t len = 0);
      |                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:304:50: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  304 |     bool ping(uint32_t id, const uint8_t* data = NULL, size_t len = 0);
      |                                                  ^~~~
      |                                                  nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:305:46: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  305 |     SendStatus pingAll(const uint8_t* data = NULL, size_t len = 0); //  done
      |                                              ^~~~
      |                                              nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:307:24: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  307 |     bool text(uint32_t id, const uint8_t* message, size_t len);
      |                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:308:24: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  308 |     bool text(uint32_t id, const char* message, size_t len);
      |                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:309:24: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  309 |     bool text(uint32_t id, const char* message);
      |                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:310:24: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  310 |     bool text(uint32_t id, const String& message);
      |                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:311:24: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  311 |     bool text(uint32_t id, AsyncWebSocketMessageBuffer* buffer);
      |                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:312:24: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  312 |     bool text(uint32_t id, AsyncWebSocketSharedBuffer buffer);
      |                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:321:26: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  321 |     bool binary(uint32_t id, const uint8_t* message, size_t len);
      |                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:322:26: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  322 |     bool binary(uint32_t id, const char* message, size_t len);
      |                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:323:26: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  323 |     bool binary(uint32_t id, const char* message);
      |                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:324:26: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  324 |     bool binary(uint32_t id, const String& message);
      |                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:325:26: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  325 |     bool binary(uint32_t id, AsyncWebSocketMessageBuffer* buffer);
      |                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:326:26: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  326 |     bool binary(uint32_t id, AsyncWebSocketSharedBuffer buffer);
      |                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:335:28: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  335 |     size_t printf(uint32_t id, const char* format, ...) __attribute__((format(printf, 3, 4)));
      |                            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:347:5: warning: 'onEvent' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  347 |     void onEvent(AwsEventHandler handler) { _eventHandler = handler; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:348:5: warning: 'handleHandshake' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  348 |     void handleHandshake(AwsHandshakeHandler handler) { _handshakeHandler = handler; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:351:5: warning: '_getNextId' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  351 |     uint32_t _getNextId() { return _cNextId++; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:351:14: warning: invalid case style for function '_getNextId' [readability-identifier-naming]
  351 |     uint32_t _getNextId() { return _cNextId++; }
      |              ^~~~~~~~~~
      |              getNextId
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:352:27: warning: invalid case style for function '_newClient' [readability-identifier-naming]
  352 |     AsyncWebSocketClient* _newClient(AsyncWebServerRequest* request);
      |                           ^~~~~~~~~~
      |                           newClient
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:353:10: warning: invalid case style for function '_handleEvent' [readability-identifier-naming]
  353 |     void _handleEvent(AsyncWebSocketClient* client, AwsEventType type, void* arg, uint8_t* data, size_t len);
      |          ^~~~~~~~~~~~
      |          handleEvent
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:354:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  354 |     bool canHandle(AsyncWebServerRequest* request) const override final;
      |          ^                                               ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:355:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  355 |     void handleRequest(AsyncWebServerRequest* request) override final;
      |          ^                                             ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:361:5: warning: 'getClients' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  361 |     std::list<AsyncWebSocketClient>& getClients() { return _clients; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:372:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  372 |     void _respond(AsyncWebServerRequest* request);
      |          ^                                       
      |                                                   override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:373:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  373 |     size_t _ack(AsyncWebServerRequest* request, size_t len, uint32_t time);
      |            ^                                                              
      |                                                                            override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:374:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  374 |     bool _sourceValid() const { return true; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\AsyncWebSocket.h:374:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  374 |     bool _sourceValid() const { return true; }
      |          ^
      |                               override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:22:9: warning: declaration uses identifier '_ESPAsyncWebServer_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   22 | #define _ESPAsyncWebServer_H_
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         ESPAsyncWebServer_H_
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:27:1: warning: system include algorithm not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h [llvmlibc-restrict-system-libc-headers]
   27 | #include <algorithm>
      | ^~~~~~~~~~~~~~~~~~~~
   28 | #include <deque>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:28:1: warning: system include deque not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h [llvmlibc-restrict-system-libc-headers]
   28 | #include <deque>
      | ^~~~~~~~~~~~~~~~
   29 | #include <functional>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:29:1: warning: system include functional not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h [llvmlibc-restrict-system-libc-headers]
   29 | #include <functional>
      | ^~~~~~~~~~~~~~~~~~~~~
   30 | #include <list>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:30:1: warning: system include list not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h [llvmlibc-restrict-system-libc-headers]
   30 | #include <list>
      | ^~~~~~~~~~~~~~~
   31 | #include <unordered_map>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:31:1: warning: system include unordered_map not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h [llvmlibc-restrict-system-libc-headers]
   31 | #include <unordered_map>
      | ^~~~~~~~~~~~~~~~~~~~~~~~
   32 | #include <vector>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:32:1: warning: system include vector not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h [llvmlibc-restrict-system-libc-headers]
   32 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
   33 | 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:79:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   79 | typedef enum {
      | ^~~~~~~~~~~~~~
   80 |   HTTP_GET = 0b00000001,
      |   ~~~~~~~~~~~~~~~~~~~~~~
   81 |   HTTP_POST = 0b00000010,
      |   ~~~~~~~~~~~~~~~~~~~~~~~
   82 |   HTTP_DELETE = 0b00000100,
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~
   83 |   HTTP_PUT = 0b00001000,
      |   ~~~~~~~~~~~~~~~~~~~~~~
   84 |   HTTP_PATCH = 0b00010000,
      |   ~~~~~~~~~~~~~~~~~~~~~~~~
   85 |   HTTP_HEAD = 0b00100000,
      |   ~~~~~~~~~~~~~~~~~~~~~~~
   86 |   HTTP_OPTIONS = 0b01000000,
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~
   87 |   HTTP_ANY = 0b01111111,
      |   ~~~~~~~~~~~~~~~~~~~~~~
   88 | } WebRequestMethod;
      | ~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:79:9: warning: enum 'WebRequestMethod' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   79 | typedef enum {
      |         ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  109 | typedef uint8_t WebRequestMethodComposite;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using WebRequestMethodComposite = uint8_t
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:110:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  110 | typedef std::function<void(void)> ArDisconnectHandler;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ArDisconnectHandler = std::function<void(void)>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:125:5: warning: 'AsyncWebParameter' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  125 |     AsyncWebParameter(const String& name, const String& value, bool form = false, bool file = false, size_t size = 0) : _name(name), _value(value), _size(size), _isForm(form), _isFile(file) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:126:5: warning: 'name' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  126 |     const String& name() const { return _name; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:127:5: warning: 'value' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  127 |     const String& value() const { return _value; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:128:5: warning: 'size' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  128 |     size_t size() const { return _size; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:129:5: warning: 'isPost' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  129 |     bool isPost() const { return _isForm; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:130:5: warning: 'isFile' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  130 |     bool isFile() const { return _isFile; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:137:7: warning: class 'AsyncWebHeader' defines a copy constructor and a copy assignment operator but does not define a destructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  137 | class AsyncWebHeader {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:143:5: warning: 'AsyncWebHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  143 |     AsyncWebHeader(const AsyncWebHeader&) = default;
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:144:5: warning: 'AsyncWebHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  144 |     AsyncWebHeader(const char* name, const char* value) : _name(name), _value(value) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:145:5: warning: 'AsyncWebHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  145 |     AsyncWebHeader(const String& name, const String& value) : _name(name), _value(value) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:146:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  146 |     AsyncWebHeader(const String& data);
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:148:5: warning: 'operator=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  148 |     AsyncWebHeader& operator=(const AsyncWebHeader&) = default;
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:150:5: warning: 'name' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  150 |     const String& name() const { return _name; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:151:5: warning: 'value' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  151 |     const String& value() const { return _value; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:159:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  159 | typedef enum { RCT_NOT_USED = -1,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |                RCT_DEFAULT = 0,
      |                ~~~~~~~~~~~~~~~~
  161 |                RCT_HTTP,
      |                ~~~~~~~~~
  162 |                RCT_WS,
      |                ~~~~~~~
  163 |                RCT_EVENT,
      |                ~~~~~~~~~~
  164 |                RCT_MAX } RequestedConnectionType;
      |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:159:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  159 | typedef enum { RCT_NOT_USED = -1,
      |         ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:159:9: warning: enum 'RequestedConnectionType' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:167:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  167 | typedef enum {
      | ^~~~~~~~~~~~~~
  168 |   AUTH_NONE = 0, // always allow
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  169 |   AUTH_BASIC = 1,
      |   ~~~~~~~~~~~~~~~
  170 |   AUTH_DIGEST = 2,
      |   ~~~~~~~~~~~~~~~~
  171 |   AUTH_BEARER = 3,
      |   ~~~~~~~~~~~~~~~~
  172 |   AUTH_OTHER = 4,
      |   ~~~~~~~~~~~~~~~
  173 |   AUTH_DENIED = 255, // always returns 401
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  174 | } AsyncAuthType;
      | ~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:167:9: warning: enum 'AsyncAuthType' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  167 | typedef enum {
      |         ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:176:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  176 | typedef std::function<size_t(uint8_t*, size_t, size_t)> AwsResponseFiller;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using AwsResponseFiller = std::function<size_t(uint8_t*, size_t, size_t)>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:177:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  177 | typedef std::function<String(const String&)> AwsTemplateProcessor;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using AwsTemplateProcessor = std::function<String(const String&)>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:179:7: warning: class 'AsyncWebServerRequest' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  179 | class AsyncWebServerRequest {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:231:10: warning: invalid case style for function '_onPoll' [readability-identifier-naming]
  231 |     void _onPoll();
      |          ^~~~~~~
      |          onPoll
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:232:10: warning: invalid case style for function '_onAck' [readability-identifier-naming]
  232 |     void _onAck(size_t len, uint32_t time);
      |          ^~~~~~
      |          onAck
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:233:10: warning: invalid case style for function '_onError' [readability-identifier-naming]
  233 |     void _onError(int8_t error);
      |          ^~~~~~~~
      |          onError
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:234:10: warning: invalid case style for function '_onTimeout' [readability-identifier-naming]
  234 |     void _onTimeout(uint32_t time);
      |          ^~~~~~~~~~
      |          onTimeout
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:235:10: warning: invalid case style for function '_onDisconnect' [readability-identifier-naming]
  235 |     void _onDisconnect();
      |          ^~~~~~~~~~~~~
      |          onDisconnect
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:236:10: warning: invalid case style for function '_onData' [readability-identifier-naming]
  236 |     void _onData(void* buf, size_t len);
      |          ^~~~~~~
      |          onData
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:238:10: warning: invalid case style for function '_addPathParam' [readability-identifier-naming]
  238 |     void _addPathParam(const char* param);
      |          ^~~~~~~~~~~~~
      |          addPathParam
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:240:10: warning: invalid case style for function '_parseReqHead' [readability-identifier-naming]
  240 |     bool _parseReqHead();
      |          ^~~~~~~~~~~~~
      |          parseReqHead
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:241:10: warning: invalid case style for function '_parseReqHeader' [readability-identifier-naming]
  241 |     bool _parseReqHeader();
      |          ^~~~~~~~~~~~~~~
      |          parseReqHeader
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:242:10: warning: invalid case style for function '_parseLine' [readability-identifier-naming]
  242 |     void _parseLine();
      |          ^~~~~~~~~~
      |          parseLine
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:243:10: warning: invalid case style for function '_parsePlainPostChar' [readability-identifier-naming]
  243 |     void _parsePlainPostChar(uint8_t data);
      |          ^~~~~~~~~~~~~~~~~~~
      |          parsePlainPostChar
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:244:10: warning: invalid case style for function '_parseMultipartPostByte' [readability-identifier-naming]
  244 |     void _parseMultipartPostByte(uint8_t data, bool last);
      |          ^~~~~~~~~~~~~~~~~~~~~~~
      |          parseMultipartPostByte
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:245:10: warning: invalid case style for function '_addGetParams' [readability-identifier-naming]
  245 |     void _addGetParams(const String& params);
      |          ^~~~~~~~~~~~~
      |          addGetParams
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:247:10: warning: invalid case style for function '_handleUploadStart' [readability-identifier-naming]
  247 |     void _handleUploadStart();
      |          ^~~~~~~~~~~~~~~~~~
      |          handleUploadStart
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:248:10: warning: invalid case style for function '_handleUploadByte' [readability-identifier-naming]
  248 |     void _handleUploadByte(uint8_t data, bool last);
      |          ^~~~~~~~~~~~~~~~~
      |          handleUploadByte
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:249:10: warning: invalid case style for function '_handleUploadEnd' [readability-identifier-naming]
  249 |     void _handleUploadEnd();
      |          ^~~~~~~~~~~~~~~~
      |          handleUploadEnd
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:252:10: warning: member variable '_tempFile' has public visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  252 |     File _tempFile;
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:253:11: warning: member variable '_tempObject' has public visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  253 |     void* _tempObject;
      |           ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:258:5: warning: 'client' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  258 |     AsyncClient* client() { return _client; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:259:5: warning: 'version' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  259 |     uint8_t version() const { return _version; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:260:5: warning: 'method' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  260 |     WebRequestMethodComposite method() const { return _method; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:261:5: warning: 'url' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  261 |     const String& url() const { return _url; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:262:5: warning: 'host' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  262 |     const String& host() const { return _host; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:263:5: warning: 'contentType' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  263 |     const String& contentType() const { return _contentType; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:264:5: warning: 'contentLength' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  264 |     size_t contentLength() const { return _contentLength; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:265:5: warning: 'multipart' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  265 |     bool multipart() const { return _isMultipart; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:270:5: warning: 'requestedConnType' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  270 |     RequestedConnectionType requestedConnType() const { return _reqconntype; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:272:5: warning: 'isWebSocketUpgrade' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  272 |     bool isWebSocketUpgrade() const { return _method == HTTP_GET && isExpectedRequestedConnType(RCT_WS); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:273:5: warning: 'isSSE' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  273 |     bool isSSE() const { return _method == HTTP_GET && isExpectedRequestedConnType(RCT_EVENT); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:274:5: warning: 'isHTTP' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  274 |     bool isHTTP() const { return isExpectedRequestedConnType(RCT_DEFAULT, RCT_HTTP); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:275:43: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  275 |     void onDisconnect(ArDisconnectHandler fn);
      |                                           ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:281:90: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  281 |     bool authenticate(const char* username, const char* credentials, const char* realm = NULL, bool isHash = false) const;
      |                                                                                          ^~~~
      |                                                                                          nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:282:5: warning: 'requestAuthentication' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  282 |     void requestAuthentication(const char* realm = nullptr, bool isDigest = true) { requestAuthentication(isDigest ? AsyncAuthType::AUTH_DIGEST : AsyncAuthType::AUTH_BASIC, realm); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:285:5: warning: 'setHandler' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  285 |     void setHandler(AsyncWebHandler* handler) { _handler = handler; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:290:5: warning: 'addInterestingHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  290 |     void addInterestingHeader(__unused const char* name) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:295:5: warning: 'addInterestingHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  295 |     void addInterestingHeader(__unused const String& name) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:295:46: warning: invalid case style for constant 'String' [readability-identifier-naming]
  295 |     void addInterestingHeader(__unused const String& name) {
      |                                              ^~~~~~
      |                                              STRING
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:305:5: warning: 'redirect' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  305 |     void redirect(const String& url, int code = 302) { return redirect(url.c_str(), code); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:305:56: warning: return statement within a void function should not have a specified return value [readability-avoid-return-with-void-value]
  305 |     void redirect(const String& url, int code = 302) { return redirect(url.c_str(), code); };
      |                                                        ^~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:308:5: warning: 'getResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  308 |     AsyncWebServerResponse* getResponse() const { return _response; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:310:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  310 |     void send(int code, const char* contentType = asyncsrv::empty, const char* content = asyncsrv::empty, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType, content, callback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:310:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  310 |     void send(int code, const char* contentType = asyncsrv::empty, const char* content = asyncsrv::empty, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType, content, callback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:311:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  311 |     void send(int code, const String& contentType, const char* content = asyncsrv::empty, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType.c_str(), content, callback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:311:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  311 |     void send(int code, const String& contentType, const char* content = asyncsrv::empty, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType.c_str(), content, callback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:312:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  312 |     void send(int code, const String& contentType, const String& content, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType.c_str(), content.c_str(), callback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:312:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  312 |     void send(int code, const String& contentType, const String& content, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType.c_str(), content.c_str(), callback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:314:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  314 |     void send(int code, const char* contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType, content, len, callback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:314:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  314 |     void send(int code, const char* contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType, content, len, callback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:315:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  315 |     void send(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType, content, len, callback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:315:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  315 |     void send(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) { send(beginResponse(code, contentType, content, len, callback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:317:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  317 |     void send(FS& fs, const String& path, const char* contentType = asyncsrv::empty, bool download = false, AwsTemplateProcessor callback = nullptr) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:317:19: warning: parameter name 'fs' is too short, expected at least 3 characters [readability-identifier-length]
  317 |     void send(FS& fs, const String& path, const char* contentType = asyncsrv::empty, bool download = false, AwsTemplateProcessor callback = nullptr) {
      |                   ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:318:59: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  318 |       if (fs.exists(path) || (!download && fs.exists(path + asyncsrv::T__gz))) {
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:320:13: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  320 |       } else
      |             ^
      |              {
  321 |         send(404);
      |                   
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:323:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  323 |     void send(FS& fs, const String& path, const String& contentType, bool download = false, AwsTemplateProcessor callback = nullptr) { send(fs, path, contentType.c_str(), download, callback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:323:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  323 |     void send(FS& fs, const String& path, const String& contentType, bool download = false, AwsTemplateProcessor callback = nullptr) { send(fs, path, contentType.c_str(), download, callback); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:323:19: warning: parameter name 'fs' is too short, expected at least 3 characters [readability-identifier-length]
  323 |     void send(FS& fs, const String& path, const String& contentType, bool download = false, AwsTemplateProcessor callback = nullptr) { send(fs, path, contentType.c_str(), download, callback); }
      |                   ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:325:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  325 |     void send(File content, const String& path, const char* contentType = asyncsrv::empty, bool download = false, AwsTemplateProcessor callback = nullptr) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:328:13: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  328 |       } else
      |             ^
      |              {
  329 |         send(404);
      |                   
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:331:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  331 |     void send(File content, const String& path, const String& contentType, bool download = false, AwsTemplateProcessor callback = nullptr) { send(content, path, contentType.c_str(), download, callback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:331:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  331 |     void send(File content, const String& path, const String& contentType, bool download = false, AwsTemplateProcessor callback = nullptr) { send(content, path, contentType.c_str(), download, callback); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:333:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  333 |     void send(Stream& stream, const char* contentType, size_t len, AwsTemplateProcessor callback = nullptr) { send(beginResponse(stream, contentType, len, callback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:333:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  333 |     void send(Stream& stream, const char* contentType, size_t len, AwsTemplateProcessor callback = nullptr) { send(beginResponse(stream, contentType, len, callback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:334:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  334 |     void send(Stream& stream, const String& contentType, size_t len, AwsTemplateProcessor callback = nullptr) { send(beginResponse(stream, contentType, len, callback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:334:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  334 |     void send(Stream& stream, const String& contentType, size_t len, AwsTemplateProcessor callback = nullptr) { send(beginResponse(stream, contentType, len, callback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:336:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  336 |     void send(const char* contentType, size_t len, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { send(beginResponse(contentType, len, callback, templateCallback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:336:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  336 |     void send(const char* contentType, size_t len, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { send(beginResponse(contentType, len, callback, templateCallback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:337:5: warning: 'send' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  337 |     void send(const String& contentType, size_t len, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { send(beginResponse(contentType, len, callback, templateCallback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:337:10: warning: method 'send' can be made static [readability-convert-member-functions-to-static]
  337 |     void send(const String& contentType, size_t len, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { send(beginResponse(contentType, len, callback, templateCallback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:339:5: warning: 'sendChunked' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  339 |     void sendChunked(const char* contentType, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { send(beginChunkedResponse(contentType, callback, templateCallback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:339:10: warning: method 'sendChunked' can be made static [readability-convert-member-functions-to-static]
  339 |     void sendChunked(const char* contentType, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { send(beginChunkedResponse(contentType, callback, templateCallback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:340:5: warning: 'sendChunked' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  340 |     void sendChunked(const String& contentType, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { send(beginChunkedResponse(contentType, callback, templateCallback)); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:340:10: warning: method 'sendChunked' can be made static [readability-convert-member-functions-to-static]
  340 |     void sendChunked(const String& contentType, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { send(beginChunkedResponse(contentType, callback, templateCallback)); }
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:345:5: warning: 'send_P' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  345 |     void send_P(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:345:10: warning: method 'send_P' can be made static [readability-convert-member-functions-to-static]
  345 |     void send_P(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) {
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:345:10: warning: invalid case style for function 'send_P' [readability-identifier-naming]
  345 |     void send_P(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) {
      |          ^~~~~~
      |          sendP
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:350:5: warning: 'send_P' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  350 |     void send_P(int code, const String& contentType, PGM_P content, AwsTemplateProcessor callback = nullptr) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:350:10: warning: method 'send_P' can be made static [readability-convert-member-functions-to-static]
  350 |     void send_P(int code, const String& contentType, PGM_P content, AwsTemplateProcessor callback = nullptr) {
      |          ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:350:10: warning: invalid case style for function 'send_P' [readability-identifier-naming]
  350 |     void send_P(int code, const String& contentType, PGM_P content, AwsTemplateProcessor callback = nullptr) {
      |          ^~~~~~
      |          sendP
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:360:5: warning: 'beginResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  360 |     AsyncWebServerResponse* beginResponse(int code, const String& contentType, const char* content = asyncsrv::empty, AwsTemplateProcessor callback = nullptr) { return beginResponse(code, contentType.c_str(), content, callback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:360:29: warning: method 'beginResponse' can be made static [readability-convert-member-functions-to-static]
  360 |     AsyncWebServerResponse* beginResponse(int code, const String& contentType, const char* content = asyncsrv::empty, AwsTemplateProcessor callback = nullptr) { return beginResponse(code, contentType.c_str(), content, callback); }
      |                             ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:361:5: warning: 'beginResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  361 |     AsyncWebServerResponse* beginResponse(int code, const String& contentType, const String& content, AwsTemplateProcessor callback = nullptr) { return beginResponse(code, contentType.c_str(), content.c_str(), callback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:361:29: warning: method 'beginResponse' can be made static [readability-convert-member-functions-to-static]
  361 |     AsyncWebServerResponse* beginResponse(int code, const String& contentType, const String& content, AwsTemplateProcessor callback = nullptr) { return beginResponse(code, contentType.c_str(), content.c_str(), callback); }
      |                             ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:364:5: warning: 'beginResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  364 |     AsyncWebServerResponse* beginResponse(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) { return beginResponse(code, contentType.c_str(), content, len, callback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:364:29: warning: method 'beginResponse' can be made static [readability-convert-member-functions-to-static]
  364 |     AsyncWebServerResponse* beginResponse(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) { return beginResponse(code, contentType.c_str(), content, len, callback); }
      |                             ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:366:47: warning: parameter name 'fs' is too short, expected at least 3 characters [readability-identifier-length]
  366 |     AsyncWebServerResponse* beginResponse(FS& fs, const String& path, const char* contentType = asyncsrv::empty, bool download = false, AwsTemplateProcessor callback = nullptr);
      |                                               ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:367:5: warning: 'beginResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  367 |     AsyncWebServerResponse* beginResponse(FS& fs, const String& path, const String& contentType = emptyString, bool download = false, AwsTemplateProcessor callback = nullptr) { return beginResponse(fs, path, contentType.c_str(), download, callback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:367:29: warning: method 'beginResponse' can be made static [readability-convert-member-functions-to-static]
  367 |     AsyncWebServerResponse* beginResponse(FS& fs, const String& path, const String& contentType = emptyString, bool download = false, AwsTemplateProcessor callback = nullptr) { return beginResponse(fs, path, contentType.c_str(), download, callback); }
      |                             ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:367:47: warning: parameter name 'fs' is too short, expected at least 3 characters [readability-identifier-length]
  367 |     AsyncWebServerResponse* beginResponse(FS& fs, const String& path, const String& contentType = emptyString, bool download = false, AwsTemplateProcessor callback = nullptr) { return beginResponse(fs, path, contentType.c_str(), download, callback); }
      |                                               ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:370:5: warning: 'beginResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  370 |     AsyncWebServerResponse* beginResponse(File content, const String& path, const String& contentType = emptyString, bool download = false, AwsTemplateProcessor callback = nullptr) { return beginResponse(content, path, contentType.c_str(), download, callback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:370:29: warning: method 'beginResponse' can be made static [readability-convert-member-functions-to-static]
  370 |     AsyncWebServerResponse* beginResponse(File content, const String& path, const String& contentType = emptyString, bool download = false, AwsTemplateProcessor callback = nullptr) { return beginResponse(content, path, contentType.c_str(), download, callback); }
      |                             ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:373:5: warning: 'beginResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  373 |     AsyncWebServerResponse* beginResponse(Stream& stream, const String& contentType, size_t len, AwsTemplateProcessor callback = nullptr) { return beginResponse(stream, contentType.c_str(), len, callback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:373:29: warning: method 'beginResponse' can be made static [readability-convert-member-functions-to-static]
  373 |     AsyncWebServerResponse* beginResponse(Stream& stream, const String& contentType, size_t len, AwsTemplateProcessor callback = nullptr) { return beginResponse(stream, contentType.c_str(), len, callback); }
      |                             ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:376:5: warning: 'beginResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  376 |     AsyncWebServerResponse* beginResponse(const String& contentType, size_t len, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { return beginResponse(contentType.c_str(), len, callback, templateCallback); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:376:29: warning: method 'beginResponse' can be made static [readability-convert-member-functions-to-static]
  376 |     AsyncWebServerResponse* beginResponse(const String& contentType, size_t len, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) { return beginResponse(contentType.c_str(), len, callback, templateCallback); }
      |                             ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:382:5: warning: 'beginResponseStream' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  382 |     AsyncResponseStream* beginResponseStream(const String& contentType, size_t bufferSize = RESPONSE_STREAM_BUFFER_SIZE) { return beginResponseStream(contentType.c_str(), bufferSize); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:387:5: warning: 'beginResponse_P' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  387 |     AsyncWebServerResponse* beginResponse_P(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:387:29: warning: method 'beginResponse_P' can be made static [readability-convert-member-functions-to-static]
  387 |     AsyncWebServerResponse* beginResponse_P(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) {
      |                             ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:387:29: warning: invalid case style for function 'beginResponse_P' [readability-identifier-naming]
  387 |     AsyncWebServerResponse* beginResponse_P(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) {
      |                             ^~~~~~~~~~~~~~~
      |                             beginResponseP
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:393:29: warning: invalid case style for function 'beginResponse_P' [readability-identifier-naming]
  393 |     AsyncWebServerResponse* beginResponse_P(int code, const String& contentType, PGM_P content, AwsTemplateProcessor callback = nullptr);
      |                             ^~~~~~~~~~~~~~~
      |                             beginResponseP
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:405:5: warning: 'getParam' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  405 |     const AsyncWebParameter* getParam(const String& name, bool post = false, bool file = false) const { return getParam(name.c_str(), post, file); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:418:5: warning: 'args' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  418 |     size_t args() const { return params(); } // get arguments count
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:423:5: warning: 'arg' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  423 |     const String& arg(const String& name) const { return arg(name.c_str()); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:427:30: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
  427 |     const String& arg(size_t i) const;     // get request argument value by number
      |                              ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:428:34: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
  428 |     const String& argName(size_t i) const; // get request argument name by number
      |                                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:430:5: warning: 'hasArg' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  430 |     bool hasArg(const String& name) const { return hasArg(name.c_str()); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:435:65: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
  435 |     const String& ASYNCWEBSERVER_REGEX_ATTRIBUTE pathArg(size_t i) const;
      |                                                                 ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:439:5: warning: 'header' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  439 |     const String& header(const String& name) const { return header(name.c_str()); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:445:33: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
  445 |     const String& header(size_t i) const;     // get request header value by number
      |                                 ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:446:37: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
  446 |     const String& headerName(size_t i) const; // get request header name by number
      |                                     ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:452:5: warning: 'hasHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  452 |     bool hasHeader(const String& name) const { return hasHeader(name.c_str()); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:458:5: warning: 'getHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  458 |     const AsyncWebHeader* getHeader(const String& name) const { return getHeader(name.c_str()); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:465:5: warning: 'getHeaders' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  465 |     const std::list<AsyncWebHeader>& getHeaders() const { return _headers; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:473:5: warning: 'removeHeaders' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  473 |     void removeHeaders() { _headers.clear(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:477:5: warning: 'hasParam' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  477 |     bool hasParam(const String& name, bool post = false, bool file = false) const { return hasParam(name.c_str(), post, file); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:484:5: warning: 'setAttribute' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  484 |     void setAttribute(const char* name, const char* value) { _attributes[name] = value; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:485:5: warning: 'setAttribute' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  485 |     void setAttribute(const char* name, bool value) { _attributes[name] = value ? "1" : emptyString; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:486:5: warning: 'setAttribute' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  486 |     void setAttribute(const char* name, long value) { _attributes[name] = String(value); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:487:5: warning: 'setAttribute' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  487 |     void setAttribute(const char* name, float value, unsigned int decimalPlaces = 2) { _attributes[name] = String(value, decimalPlaces); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:488:5: warning: 'setAttribute' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  488 |     void setAttribute(const char* name, double value, unsigned int decimalPlaces = 2) { _attributes[name] = String(value, decimalPlaces); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:490:5: warning: 'hasAttribute' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  490 |     bool hasAttribute(const char* name) const { return _attributes.find(name) != _attributes.end(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:507:6: warning: invalid case style for function 'ON_STA_FILTER' [readability-identifier-naming]
  507 | bool ON_STA_FILTER(AsyncWebServerRequest* request);
      |      ^~~~~~~~~~~~~
      |      onStaFilter
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:509:6: warning: invalid case style for function 'ON_AP_FILTER' [readability-identifier-naming]
  509 | bool ON_AP_FILTER(AsyncWebServerRequest* request);
      |      ^~~~~~~~~~~~
      |      onApFilter
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:521:7: warning: class 'AsyncMiddleware' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  521 | class AsyncMiddleware {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:523:5: warning: '~AsyncMiddleware' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  523 |     virtual ~AsyncMiddleware() {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:523:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
  523 |     virtual ~AsyncMiddleware() {}
      |             ^                  ~~
      |                                = default;
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:524:5: warning: 'run' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  524 |     virtual void run(__unused AsyncWebServerRequest* request, __unused ArMiddlewareNext next) { return next(); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:536:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  536 |     AsyncMiddlewareFunction(ArMiddlewareCallback fn) : _fn(fn) {}
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:536:5: warning: 'AsyncMiddlewareFunction' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  536 |     AsyncMiddlewareFunction(ArMiddlewareCallback fn) : _fn(fn) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:536:50: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  536 |     AsyncMiddlewareFunction(ArMiddlewareCallback fn) : _fn(fn) {}
      |                                                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:537:5: warning: 'run' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  537 |     void run(AsyncWebServerRequest* request, ArMiddlewareNext next) override { return _fn(request, next); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:544:7: warning: class 'AsyncMiddlewareChain' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  544 | class AsyncMiddlewareChain {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:548:45: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  548 |     void addMiddleware(ArMiddlewareCallback fn);
      |                                             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:554:10: warning: invalid case style for function '_runChain' [readability-identifier-naming]
  554 |     void _runChain(AsyncWebServerRequest* request, ArMiddlewareNext finalizer);
      |          ^~~~~~~~~
      |          runChain
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:557:33: warning: member variable '_middlewares' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  557 |     std::list<AsyncMiddleware*> _middlewares;
      |                                 ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:567:5: warning: 'setRealm' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  567 |     void setRealm(const char* realm) { _realm = realm; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:567:47: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  567 |     void setRealm(const char* realm) { _realm = realm; }
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:568:5: warning: 'setAuthFailureMessage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  568 |     void setAuthFailureMessage(const char* message) { _authFailMsg = message; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:568:68: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  568 |     void setAuthFailureMessage(const char* message) { _authFailMsg = message; }
      |                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:578:5: warning: 'setAuthType' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  578 |     void setAuthType(AsyncAuthType authMethod) { _authMethod = authMethod; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:586:5: warning: 'hasCredentials' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  586 |     bool hasCredentials() const { return _hasCreds; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:607:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  607 |     AsyncAuthorizationMiddleware(ArAuthorizeFunction authorizeConnectHandler) : _code(403), _authz(authorizeConnectHandler) {}
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:607:5: warning: 'AsyncAuthorizationMiddleware' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  607 |     AsyncAuthorizationMiddleware(ArAuthorizeFunction authorizeConnectHandler) : _code(403), _authz(authorizeConnectHandler) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:608:5: warning: 'AsyncAuthorizationMiddleware' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  608 |     AsyncAuthorizationMiddleware(int code, ArAuthorizeFunction authorizeConnectHandler) : _code(code), _authz(authorizeConnectHandler) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:610:5: warning: 'run' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  610 |     void run(AsyncWebServerRequest* request, ArMiddlewareNext next) { return _authz && !_authz(request) ? request->send(_code) : next(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:620:5: warning: 'keep' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  620 |     void keep(const char* name) { _toKeep.push_back(name); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:621:5: warning: 'unKeep' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  621 |     void unKeep(const char* name) { _toKeep.erase(std::remove(_toKeep.begin(), _toKeep.end(), name), _toKeep.end()); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:632:5: warning: 'filter' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  632 |     void filter(const char* name) { _toRemove.push_back(name); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:633:5: warning: 'unFilter' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  633 |     void unFilter(const char* name) { _toRemove.erase(std::remove(_toRemove.begin(), _toRemove.end(), name), _toRemove.end()); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:644:5: warning: 'setOutput' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  644 |     void setOutput(Print& output) { _out = &output; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:645:5: warning: 'setEnabled' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  645 |     void setEnabled(bool enabled) { _enabled = enabled; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:646:5: warning: 'isEnabled' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  646 |     bool isEnabled() const { return _enabled && _out; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:646:49: warning: implicit conversion 'Print *' -> 'bool' [readability-implicit-bool-conversion]
  646 |     bool isEnabled() const { return _enabled && _out; }
      |                                                 ^   
      |                                                 (    != nullptr)
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:658:5: warning: 'setOrigin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  658 |     void setOrigin(const char* origin) { _origin = origin; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:658:50: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  658 |     void setOrigin(const char* origin) { _origin = origin; }
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:659:5: warning: 'setMethods' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  659 |     void setMethods(const char* methods) { _methods = methods; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:659:53: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  659 |     void setMethods(const char* methods) { _methods = methods; }
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:660:5: warning: 'setHeaders' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  660 |     void setHeaders(const char* headers) { _headers = headers; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:660:53: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  660 |     void setHeaders(const char* headers) { _headers = headers; }
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:661:5: warning: 'setAllowCredentials' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  661 |     void setAllowCredentials(bool credentials) { _credentials = credentials; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:662:5: warning: 'setMaxAge' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  662 |     void setMaxAge(uint32_t seconds) { _maxAge = seconds; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:679:5: warning: 'setMaxRequests' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  679 |     void setMaxRequests(size_t maxRequests) { _maxRequests = maxRequests; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:680:5: warning: 'setWindowSize' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  680 |     void setWindowSize(uint32_t seconds) { _windowSizeMillis = seconds * 1000; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:696:7: warning: class 'AsyncWebRewrite' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  696 | class AsyncWebRewrite {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:698:12: warning: member variable '_from' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  698 |     String _from;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:699:12: warning: member variable '_toUrl' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  699 |     String _toUrl;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:700:12: warning: member variable '_params' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  700 |     String _params;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:701:29: warning: member variable '_filter' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  701 |     ArRequestFilterFunction _filter{nullptr};
      |                             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:704:5: warning: 'AsyncWebRewrite' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  704 |     AsyncWebRewrite(const char* from, const char* to) : _from(from), _toUrl(to) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:704:51: warning: parameter name 'to' is too short, expected at least 3 characters [readability-identifier-length]
  704 |     AsyncWebRewrite(const char* from, const char* to) : _from(from), _toUrl(to) {
      |                                                   ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:705:7: warning: variable 'index' of type 'int' can be declared 'const' [misc-const-correctness]
  705 |       int index = _toUrl.indexOf('?');
      |       ^
      |           const 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:707:17: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  707 |         _params = _toUrl.substring(index + 1);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:708:16: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  708 |         _toUrl = _toUrl.substring(0, index);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:711:5: warning: '~AsyncWebRewrite' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  711 |     virtual ~AsyncWebRewrite() {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:711:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
  711 |     virtual ~AsyncWebRewrite() {}
      |             ^                  ~~
      |                                = default;
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:712:5: warning: 'setFilter' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  712 |     AsyncWebRewrite& setFilter(ArRequestFilterFunction fn) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:712:56: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  712 |     AsyncWebRewrite& setFilter(ArRequestFilterFunction fn) {
      |                                                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:716:5: warning: 'filter' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  716 |     bool filter(AsyncWebServerRequest* request) const { return _filter == NULL || _filter(request); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:717:5: warning: 'from' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  717 |     const String& from(void) const { return _from; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:717:24: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  717 |     const String& from(void) const { return _from; }
      |                        ^~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:718:5: warning: 'toUrl' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  718 |     const String& toUrl(void) const { return _toUrl; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:718:25: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  718 |     const String& toUrl(void) const { return _toUrl; }
      |                         ^~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:719:5: warning: 'params' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  719 |     const String& params(void) const { return _params; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:719:26: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  719 |     const String& params(void) const { return _params; }
      |                          ^~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:720:5: warning: 'match' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  720 |     virtual bool match(AsyncWebServerRequest* request) { return from() == request->url() && filter(request); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:720:72: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  720 |     virtual bool match(AsyncWebServerRequest* request) { return from() == request->url() && filter(request); }
      |                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:205:14: note: resolves to this declaration
  205 |         bool operator ==(const String &rhs) const {
      |              ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:727:7: warning: class 'AsyncWebHandler' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  727 | class AsyncWebHandler : public AsyncMiddlewareChain {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:729:29: warning: member variable '_filter' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  729 |     ArRequestFilterFunction _filter = nullptr;
      |                             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:730:36: warning: member variable '_authMiddleware' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  730 |     AsyncAuthenticationMiddleware* _authMiddleware = nullptr;
      |                                    ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:733:5: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
  733 |     AsyncWebHandler() {}
      |     ^                 ~~
      |                       = default;
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:733:5: warning: 'AsyncWebHandler' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  733 |     AsyncWebHandler() {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:734:5: warning: '~AsyncWebHandler' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  734 |     virtual ~AsyncWebHandler() {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:734:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
  734 |     virtual ~AsyncWebHandler() {}
      |             ^                  ~~
      |                                = default;
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:735:56: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  735 |     AsyncWebHandler& setFilter(ArRequestFilterFunction fn);
      |                                                        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:737:5: warning: 'setAuthentication' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  737 |     AsyncWebHandler& setAuthentication(const String& username, const String& password, AsyncAuthType authMethod = AsyncAuthType::AUTH_DIGEST) { return setAuthentication(username.c_str(), password.c_str(), authMethod); };
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:738:5: warning: 'filter' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  738 |     bool filter(AsyncWebServerRequest* request) { return _filter == NULL || _filter(request); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:739:5: warning: 'canHandle' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  739 |     virtual bool canHandle(AsyncWebServerRequest* request __attribute__((unused))) const { return false; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:740:5: warning: 'handleRequest' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  740 |     virtual void handleRequest(__unused AsyncWebServerRequest* request) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:741:5: warning: 'handleUpload' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  741 |     virtual void handleUpload(__unused AsyncWebServerRequest* request, __unused const String& filename, __unused size_t index, __unused uint8_t* data, __unused size_t len, __unused bool final) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:742:5: warning: 'handleBody' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  742 |     virtual void handleBody(__unused AsyncWebServerRequest* request, __unused uint8_t* data, __unused size_t len, __unused size_t index, __unused size_t total) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:743:5: warning: 'isRequestHandlerTrivial' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  743 |     virtual bool isRequestHandlerTrivial() const { return true; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:750:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  750 | typedef enum {
      | ^~~~~~~~~~~~~~
  751 |   RESPONSE_SETUP,
      |   ~~~~~~~~~~~~~~~
  752 |   RESPONSE_HEADERS,
      |   ~~~~~~~~~~~~~~~~~
  753 |   RESPONSE_CONTENT,
      |   ~~~~~~~~~~~~~~~~~
  754 |   RESPONSE_WAIT_ACK,
      |   ~~~~~~~~~~~~~~~~~~
  755 |   RESPONSE_END,
      |   ~~~~~~~~~~~~~
  756 |   RESPONSE_FAILED
      |   ~~~~~~~~~~~~~~~
  757 | } WebResponseState;
      | ~~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:750:9: warning: enum 'WebResponseState' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  750 | typedef enum {
      |         ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:759:7: warning: class 'AsyncWebServerResponse' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  759 | class AsyncWebServerResponse {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:761:9: warning: member variable '_code' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  761 |     int _code;
      |         ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:762:31: warning: member variable '_headers' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  762 |     std::list<AsyncWebHeader> _headers;
      |                               ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:763:12: warning: member variable '_contentType' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  763 |     String _contentType;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:764:12: warning: member variable '_contentLength' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  764 |     size_t _contentLength;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:765:10: warning: member variable '_sendContentLength' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  765 |     bool _sendContentLength;
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:766:10: warning: member variable '_chunked' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  766 |     bool _chunked;
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:767:12: warning: member variable '_headLength' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  767 |     size_t _headLength;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:768:12: warning: member variable '_sentLength' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  768 |     size_t _sentLength;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:769:12: warning: member variable '_ackedLength' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  769 |     size_t _ackedLength;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:770:12: warning: member variable '_writtenLength' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  770 |     size_t _writtenLength;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:771:22: warning: member variable '_state' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  771 |     WebResponseState _state;
      |                      ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:776:3: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  776 |   public:
      |   ^~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:773:3: note: previously declared here
  773 |   public:
      |   ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:778:5: warning: '~AsyncWebServerResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  778 |     virtual ~AsyncWebServerResponse() {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:778:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
  778 |     virtual ~AsyncWebServerResponse() {}
      |             ^                         ~~
      |                                       = default;
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:780:5: warning: 'code' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  780 |     int code() const { return _code; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:782:5: warning: 'setContentType' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  782 |     void setContentType(const String& type) { setContentType(type.c_str()); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:785:5: warning: 'addHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  785 |     bool addHeader(const String& name, const String& value, bool replaceExisting = true) { return addHeader(name.c_str(), value.c_str(), replaceExisting); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:786:5: warning: 'addHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  786 |     bool addHeader(const char* name, long value, bool replaceExisting = true) { return addHeader(name, String(value), replaceExisting); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:787:5: warning: 'addHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  787 |     bool addHeader(const String& name, long value, bool replaceExisting = true) { return addHeader(name.c_str(), value, replaceExisting); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:790:5: warning: 'getHeaders' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  790 |     const std::list<AsyncWebHeader>& getHeaders() const { return _headers; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:795:5: warning: '_assembleHead' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  795 |     String _assembleHead(uint8_t version) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:795:12: warning: invalid case style for function '_assembleHead' [readability-identifier-naming]
  795 |     String _assembleHead(uint8_t version) {
      |            ^~~~~~~~~~~~~
      |            assembleHead
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:800:10: warning: invalid case style for function '_assembleHead' [readability-identifier-naming]
  797 |       _assembleHead(buffer, version);
      |       ~~~~~~~~~~~~~
      |       assembleHead
  798 |       return buffer;
  799 |     }
  800 |     void _assembleHead(String& buffer, uint8_t version);
      |          ^~~~~~~~~~~~~
      |          assembleHead
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:802:18: warning: invalid case style for function '_started' [readability-identifier-naming]
  802 |     virtual bool _started() const;
      |                  ^~~~~~~~
      |                  started
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:803:18: warning: invalid case style for function '_finished' [readability-identifier-naming]
  803 |     virtual bool _finished() const;
      |                  ^~~~~~~~~
      |                  finished
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:804:18: warning: invalid case style for function '_failed' [readability-identifier-naming]
  804 |     virtual bool _failed() const;
      |                  ^~~~~~~
      |                  failed
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:805:18: warning: invalid case style for function '_sourceValid' [readability-identifier-naming]
  805 |     virtual bool _sourceValid() const;
      |                  ^~~~~~~~~~~~
      |                  sourceValid
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:806:18: warning: invalid case style for function '_respond' [readability-identifier-naming]
  806 |     virtual void _respond(AsyncWebServerRequest* request);
      |                  ^~~~~~~~
      |                  respond
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:807:20: warning: invalid case style for function '_ack' [readability-identifier-naming]
  807 |     virtual size_t _ack(AsyncWebServerRequest* request, size_t len, uint32_t time);
      |                    ^~~~
      |                    ack
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:814:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  814 | typedef std::function<void(AsyncWebServerRequest* request)> ArRequestHandlerFunction;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ArRequestHandlerFunction = std::function<void(AsyncWebServerRequest* request)>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:815:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  815 | typedef std::function<void(AsyncWebServerRequest* request, const String& filename, size_t index, uint8_t* data, size_t len, bool final)> ArUploadHandlerFunction;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ArUploadHandlerFunction = std::function<void(AsyncWebServerRequest* request, const String& filename, size_t index, uint8_t* data, size_t len, bool final)>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:816:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  816 | typedef std::function<void(AsyncWebServerRequest* request, uint8_t* data, size_t len, size_t index, size_t total)> ArBodyHandlerFunction;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ArBodyHandlerFunction = std::function<void(AsyncWebServerRequest* request, uint8_t* data, size_t len, size_t index, size_t total)>
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:818:7: warning: class 'AsyncWebServer' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  818 | class AsyncWebServer : public AsyncMiddlewareChain {
      |       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:820:17: warning: member variable '_server' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  820 |     AsyncServer _server;
      |                 ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:821:49: warning: member variable '_rewrites' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  821 |     std::list<std::shared_ptr<AsyncWebRewrite>> _rewrites;
      |                                                 ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:822:49: warning: member variable '_handlers' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  822 |     std::list<std::unique_ptr<AsyncWebHandler>> _handlers;
      |                                                 ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:823:30: warning: member variable '_catchAllHandler' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  823 |     AsyncCallbackWebHandler* _catchAllHandler;
      |                              ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:826:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  826 |     AsyncWebServer(uint16_t port);
      |     ^
      |     explicit 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:856:60: warning: parameter name 'to' is too short, expected at least 3 characters [readability-identifier-length]
  856 |     AsyncWebRewrite& rewrite(const char* from, const char* to);
      |                                                            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:876:54: warning: parameter name 'to' is too short, expected at least 3 characters [readability-identifier-length]
  876 |     bool removeRewrite(const char* from, const char* to);
      |                                                      ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:881:5: warning: 'on' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  881 |     AsyncCallbackWebHandler& on(const char* uri, ArRequestHandlerFunction onRequest) { return on(uri, HTTP_ANY, onRequest); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:881:30: warning: method 'on' can be made static [readability-convert-member-functions-to-static]
  881 |     AsyncCallbackWebHandler& on(const char* uri, ArRequestHandlerFunction onRequest) { return on(uri, HTTP_ANY, onRequest); }
      |                              ^
      |     static 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:884:65: warning: parameter name 'fs' is too short, expected at least 3 characters [readability-identifier-length]
  884 |     AsyncStaticWebHandler& serveStatic(const char* uri, fs::FS& fs, const char* path, const char* cache_control = NULL);
      |                                                                 ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:884:115: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  884 |     AsyncStaticWebHandler& serveStatic(const char* uri, fs::FS& fs, const char* path, const char* cache_control = NULL);
      |                                                                                                                   ^~~~
      |                                                                                                                   nullptr
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:886:46: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  886 |     void onNotFound(ArRequestHandlerFunction fn);  // called when handler is not assigned
      |                                              ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:887:47: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  887 |     void onFileUpload(ArUploadHandlerFunction fn); // handle file uploads
      |                                               ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:888:46: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  888 |     void onRequestBody(ArBodyHandlerFunction fn);  // handle posts with plain body content (JSON often transmitted this way as a request)
      |                                              ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:892:10: warning: invalid case style for function '_handleDisconnect' [readability-identifier-naming]
  892 |     void _handleDisconnect(AsyncWebServerRequest* request);
      |          ^~~~~~~~~~~~~~~~~
      |          handleDisconnect
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:893:10: warning: invalid case style for function '_attachHandler' [readability-identifier-naming]
  893 |     void _attachHandler(AsyncWebServerRequest* request);
      |          ^~~~~~~~~~~~~~
      |          attachHandler
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:894:10: warning: invalid case style for function '_rewriteRequest' [readability-identifier-naming]
  894 |     void _rewriteRequest(AsyncWebServerRequest* request);
      |          ^~~~~~~~~~~~~~~
      |          rewriteRequest
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:897:7: warning: constructor does not initialize these fields: _headers [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  897 | class DefaultHeaders {
      |       ^
  898 |     using headers_t = std::list<AsyncWebHeader>;
  899 |     headers_t _headers;
      |                       
      |                       {}
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:897:7: warning: class 'DefaultHeaders' defines a copy constructor and a copy assignment operator but does not define a destructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:902:5: warning: 'DefaultHeaders' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  902 |     DefaultHeaders() = default;
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:906:5: warning: 'addHeader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  906 |     void addHeader(const String& name, const String& value) {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:910:5: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  910 |     ConstIterator begin() const { return _headers.begin(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:911:5: warning: 'end' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  911 |     ConstIterator end() const { return _headers.end(); }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:916:5: warning: 'Instance' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  916 |     static DefaultHeaders& Instance() {
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:916:28: warning: invalid case style for function 'Instance' [readability-identifier-naming]
  916 |     static DefaultHeaders& Instance() {
      |                            ^~~~~~~~
      |                            instance
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:24:1: warning: system include string not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h [llvmlibc-restrict-system-libc-headers]
   24 | #include <string>
      | ^~~~~~~~~~~~~~~~~
   25 | #ifdef ASYNCWEBSERVER_REGEX
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:37:10: warning: invalid case style for function '_getFile' [readability-identifier-naming]
   37 |     bool _getFile(AsyncWebServerRequest* request) const;
      |          ^~~~~~~~
      |          getFile
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:38:10: warning: invalid case style for function '_searchFile' [readability-identifier-naming]
   38 |     bool _searchFile(AsyncWebServerRequest* request, const String& path);
      |          ^~~~~~~~~~~
      |          searchFile
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:39:13: warning: invalid case style for function '_countBits' [readability-identifier-naming]
   39 |     uint8_t _countBits(const uint8_t value) const;
      |             ^~~~~~~~~~
      |             countBits
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:39:24: warning: parameter 'value' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   39 |     uint8_t _countBits(const uint8_t value) const;
      |                        ^~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:39:38: warning: invalid case style for constant 'value' [readability-identifier-naming]
   39 |     uint8_t _countBits(const uint8_t value) const;
      |                                      ^~~~~
      |                                      VALUE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:42:8: warning: member variable '_fs' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   42 |     FS _fs;
      |        ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:43:12: warning: member variable '_uri' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   43 |     String _uri;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:44:12: warning: member variable '_path' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   44 |     String _path;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:45:12: warning: member variable '_default_file' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   45 |     String _default_file;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:46:12: warning: member variable '_cache_control' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   46 |     String _cache_control;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:47:12: warning: member variable '_last_modified' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   47 |     String _last_modified;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:48:26: warning: member variable '_callback' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   48 |     AwsTemplateProcessor _callback;
      |                          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:49:10: warning: member variable '_isDir' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   49 |     bool _isDir;
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:50:10: warning: member variable '_tryGzipFirst' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   50 |     bool _tryGzipFirst = true;
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:53:48: warning: parameter name 'fs' is too short, expected at least 3 characters [readability-identifier-length]
   53 |     AsyncStaticWebHandler(const char* uri, FS& fs, const char* path, const char* cache_control);
      |                                                ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:54:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   54 |     bool canHandle(AsyncWebServerRequest* request) const override final;
      |          ^                                               ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:55:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   55 |     void handleRequest(AsyncWebServerRequest* request) override final;
      |          ^                                             ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:79:12: warning: member variable '_uri' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   79 |     String _uri;
      |            ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:80:31: warning: member variable '_method' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   80 |     WebRequestMethodComposite _method;
      |                               ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:80:31: warning: use default member initializer for '_method' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   80 |     WebRequestMethodComposite _method;
      |                               ^      
      |                                      {HTTP_ANY}
   81 |     ArRequestHandlerFunction _onRequest;
   82 |     ArUploadHandlerFunction _onUpload;
   83 |     ArBodyHandlerFunction _onBody;
   84 |     bool _isRegex;
   85 | 
   86 |   public:
   87 |     AsyncCallbackWebHandler() : _uri(), _method(HTTP_ANY), _onRequest(NULL), _onUpload(NULL), _onBody(NULL), _isRegex(false) {}
      |                                         ~~~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:81:30: warning: member variable '_onRequest' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   81 |     ArRequestHandlerFunction _onRequest;
      |                              ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:82:29: warning: member variable '_onUpload' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   82 |     ArUploadHandlerFunction _onUpload;
      |                             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:83:27: warning: member variable '_onBody' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   83 |     ArBodyHandlerFunction _onBody;
      |                           ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:84:10: warning: member variable '_isRegex' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   84 |     bool _isRegex;
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:84:10: warning: use default member initializer for '_isRegex' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   84 |     bool _isRegex;
      |          ^       
      |                  {false}
   85 | 
   86 |   public:
   87 |     AsyncCallbackWebHandler() : _uri(), _method(HTTP_ANY), _onRequest(NULL), _onUpload(NULL), _onBody(NULL), _isRegex(false) {}
      |                                                                                                              ~~~~~~~~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:87:5: warning: 'AsyncCallbackWebHandler' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   87 |     AsyncCallbackWebHandler() : _uri(), _method(HTTP_ANY), _onRequest(NULL), _onUpload(NULL), _onBody(NULL), _isRegex(false) {}
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:87:33: warning: initializer for member '_uri' is redundant [readability-redundant-member-init]
   87 |     AsyncCallbackWebHandler() : _uri(), _method(HTTP_ANY), _onRequest(NULL), _onUpload(NULL), _onBody(NULL), _isRegex(false) {}
      |                                 ^~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:89:5: warning: 'setMethod' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   89 |     void setMethod(WebRequestMethodComposite method) { _method = method; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:90:5: warning: 'onRequest' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   90 |     void onRequest(ArRequestHandlerFunction fn) { _onRequest = fn; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:90:45: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
   90 |     void onRequest(ArRequestHandlerFunction fn) { _onRequest = fn; }
      |                                             ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:91:5: warning: 'onUpload' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   91 |     void onUpload(ArUploadHandlerFunction fn) { _onUpload = fn; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:91:43: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
   91 |     void onUpload(ArUploadHandlerFunction fn) { _onUpload = fn; }
      |                                           ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:92:5: warning: 'onBody' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   92 |     void onBody(ArBodyHandlerFunction fn) { _onBody = fn; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:92:39: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
   92 |     void onBody(ArBodyHandlerFunction fn) { _onBody = fn; }
      |                                       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:94:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   94 |     bool canHandle(AsyncWebServerRequest* request) const override final;
      |          ^                                               ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:95:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   95 |     void handleRequest(AsyncWebServerRequest* request) override final;
      |          ^                                             ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:96:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   96 |     void handleUpload(AsyncWebServerRequest* request, const String& filename, size_t index, uint8_t* data, size_t len, bool final) override final;
      |          ^                                                                                                                         ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:97:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   97 |     void handleBody(AsyncWebServerRequest* request, uint8_t* data, size_t len, size_t index, size_t total) override final;
      |          ^                                                                                                 ~~~~~~~~
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:98:5: warning: 'isRequestHandlerTrivial' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   98 |     bool isRequestHandlerTrivial() const override final { return !_onRequest; }
      |     ^
      |     LIBC_INLINE 
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebHandlerImpl.h:98:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   98 |     bool isRequestHandlerTrivial() const override final { return !_onRequest; }
      |          ^                               ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:31:1: warning: system include memory not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h [llvmlibc-restrict-system-libc-headers]
   31 | #include <memory>
      | ^~~~~~~~~~~~~~~~~
   32 | #include <vector>
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:32:1: warning: system include vector not allowed, transitively included from .pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h [llvmlibc-restrict-system-libc-headers]
   32 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
   33 | 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:42:5: warning: 'AsyncBasicResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   42 |     AsyncBasicResponse(int code, const String& contentType, const String& content = emptyString) : AsyncBasicResponse(code, contentType.c_str(), content.c_str()) {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:43:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   43 |     void _respond(AsyncWebServerRequest* request) override final;
      |          ^                                        ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:44:12: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   44 |     size_t _ack(AsyncWebServerRequest* request, size_t len, uint32_t time) override final;
      |            ^                                                               ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:45:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   45 |     bool _sourceValid() const override final { return true; }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:45:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   45 |     bool _sourceValid() const override final { return true; }
      |          ^                    ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:48:7: warning: class 'AsyncAbstractResponse' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   48 | class AsyncAbstractResponse : public AsyncWebServerResponse {
      |       ^
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:60:12: warning: invalid case style for function '_readDataFromCacheOrContent' [readability-identifier-naming]
   60 |     size_t _readDataFromCacheOrContent(uint8_t* data, const size_t len);
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |            readDataFromCacheOrContent
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:60:55: warning: parameter 'len' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   60 |     size_t _readDataFromCacheOrContent(uint8_t* data, const size_t len);
      |                                                       ^~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:60:68: warning: invalid case style for constant 'len' [readability-identifier-naming]
   60 |     size_t _readDataFromCacheOrContent(uint8_t* data, const size_t len);
      |                                                                    ^~~
      |                                                                    LEN
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:61:12: warning: invalid case style for function '_fillBufferAndProcessTemplates' [readability-identifier-naming]
   61 |     size_t _fillBufferAndProcessTemplates(uint8_t* buf, size_t maxLen);
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |            fillBufferAndProcessTemplates
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:64:26: warning: member variable '_callback' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   64 |     AwsTemplateProcessor _callback;
      |                          ^
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:67:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   67 |     AsyncAbstractResponse(AwsTemplateProcessor callback = nullptr);
      |     ^
      |     explicit 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:68:5: warning: '~AsyncAbstractResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   68 |     virtual ~AsyncAbstractResponse() {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:68:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   68 |     virtual ~AsyncAbstractResponse() {}
      |     ~~~~~~~ ^
      |                                      override
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:68:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
   68 |     virtual ~AsyncAbstractResponse() {}
      |             ^                        ~~
      |                                      = default;
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:69:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   69 |     void _respond(AsyncWebServerRequest* request) override final;
      |          ^                                        ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:70:12: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   70 |     size_t _ack(AsyncWebServerRequest* request, size_t len, uint32_t time) override final;
      |            ^                                                               ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:71:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   71 |     virtual bool _sourceValid() const { return false; }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:71:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   71 |     virtual bool _sourceValid() const { return false; }
      |     ~~~~~~~      ^
      |                                       override
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:72:5: warning: '_fillBuffer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   72 |     virtual size_t _fillBuffer(uint8_t* buf __attribute__((unused)), size_t maxLen __attribute__((unused))) { return 0; }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:72:20: warning: invalid case style for function '_fillBuffer' [readability-identifier-naming]
   72 |     virtual size_t _fillBuffer(uint8_t* buf __attribute__((unused)), size_t maxLen __attribute__((unused))) { return 0; }
      |                    ^~~~~~~~~~~
      |                    fillBuffer
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:80:7: warning: class 'AsyncFileResponse' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   80 | class AsyncFileResponse : public AsyncAbstractResponse {
      |       ^
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:87:10: warning: invalid case style for function '_setContentTypeFromPath' [readability-identifier-naming]
   87 |     void _setContentTypeFromPath(const String& path);
      |          ^~~~~~~~~~~~~~~~~~~~~~~
      |          setContentTypeFromPath
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:90:27: warning: parameter name 'fs' is too short, expected at least 3 characters [readability-identifier-length]
   90 |     AsyncFileResponse(FS& fs, const String& path, const char* contentType = asyncsrv::empty, bool download = false, AwsTemplateProcessor callback = nullptr);
      |                           ^
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:91:5: warning: 'AsyncFileResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   91 |     AsyncFileResponse(FS& fs, const String& path, const String& contentType, bool download = false, AwsTemplateProcessor callback = nullptr) : AsyncFileResponse(fs, path, contentType.c_str(), download, callback) {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:91:27: warning: parameter name 'fs' is too short, expected at least 3 characters [readability-identifier-length]
   91 |     AsyncFileResponse(FS& fs, const String& path, const String& contentType, bool download = false, AwsTemplateProcessor callback = nullptr) : AsyncFileResponse(fs, path, contentType.c_str(), download, callback) {}
      |                           ^
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:93:5: warning: 'AsyncFileResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   93 |     AsyncFileResponse(File content, const String& path, const String& contentType, bool download = false, AwsTemplateProcessor callack = nullptr) : AsyncFileResponse(content, path, contentType.c_str(), download, callack) {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:94:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   94 |     ~AsyncFileResponse() { _content.close(); }
      |     ^
      |                          override
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:94:5: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:94:5: warning: '~AsyncFileResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   94 |     ~AsyncFileResponse() { _content.close(); }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:95:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   95 |     bool _sourceValid() const override final { return !!(_content); }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:95:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   95 |     bool _sourceValid() const override final { return !!(_content); }
      |          ^                    ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:96:12: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   96 |     size_t _fillBuffer(uint8_t* buf, size_t maxLen) override final;
      |            ^                                        ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:105:5: warning: 'AsyncStreamResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  105 |     AsyncStreamResponse(Stream& stream, const String& contentType, size_t len, AwsTemplateProcessor callback = nullptr) : AsyncStreamResponse(stream, contentType.c_str(), len, callback) {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:106:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  106 |     bool _sourceValid() const override final { return !!(_content); }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:106:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  106 |     bool _sourceValid() const override final { return !!(_content); }
      |          ^                    ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:106:57: warning: implicit conversion 'Stream *' -> 'bool' [readability-implicit-bool-conversion]
  106 |     bool _sourceValid() const override final { return !!(_content); }
      |                                                        ~^         
      |                                                        (           == nullptr)
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:107:12: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  107 |     size_t _fillBuffer(uint8_t* buf, size_t maxLen) override final;
      |            ^                                        ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:117:5: warning: 'AsyncCallbackResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  117 |     AsyncCallbackResponse(const String& contentType, size_t len, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) : AsyncCallbackResponse(contentType.c_str(), len, callback, templateCallback) {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:118:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  118 |     bool _sourceValid() const override final { return !!(_content); }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:118:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  118 |     bool _sourceValid() const override final { return !!(_content); }
      |          ^                    ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:119:12: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  119 |     size_t _fillBuffer(uint8_t* buf, size_t maxLen) override final;
      |            ^                                        ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:129:5: warning: 'AsyncChunkedResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  129 |     AsyncChunkedResponse(const String& contentType, AwsResponseFiller callback, AwsTemplateProcessor templateCallback = nullptr) : AsyncChunkedResponse(contentType.c_str(), callback, templateCallback) {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:130:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  130 |     bool _sourceValid() const override final { return !!(_content); }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:130:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  130 |     bool _sourceValid() const override final { return !!(_content); }
      |          ^                    ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:131:12: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  131 |     size_t _fillBuffer(uint8_t* buf, size_t maxLen) override final;
      |            ^                                        ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:141:5: warning: 'AsyncProgmemResponse' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  141 |     AsyncProgmemResponse(int code, const String& contentType, const uint8_t* content, size_t len, AwsTemplateProcessor callback = nullptr) : AsyncProgmemResponse(code, contentType.c_str(), content, len, callback) {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:142:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  142 |     bool _sourceValid() const override final { return true; }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:142:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  142 |     bool _sourceValid() const override final { return true; }
      |          ^                    ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:143:12: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  143 |     size_t _fillBuffer(uint8_t* buf, size_t maxLen) override final;
      |            ^                                        ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:152:5: warning: 'AsyncResponseStream' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  152 |     AsyncResponseStream(const String& contentType, size_t bufferSize) : AsyncResponseStream(contentType.c_str(), bufferSize) {}
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:153:5: warning: '_sourceValid' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  153 |     bool _sourceValid() const override final { return (_state < RESPONSE_END); }
      |     ^
      |     LIBC_INLINE 
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:153:10: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  153 |     bool _sourceValid() const override final { return (_state < RESPONSE_END); }
      |          ^                    ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:154:12: warning: 'override' is redundant since the function is already declared 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  154 |     size_t _fillBuffer(uint8_t* buf, size_t maxLen) override final;
      |            ^                                        ~~~~~~~~
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:155:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  155 |     size_t write(const uint8_t* data, size_t len);
      |            ^                                     
      |                                                   override
G:\finalcolorwithcalibration\.pio\libdeps\um_pros3\ESPAsyncWebServer\src\WebResponseImpl.h:156:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  156 |     size_t write(uint8_t data);
      |            ^                  
      |                                override
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:5:32: warning: invalid case style for constant 'empty' [readability-identifier-naming]
    5 |   static constexpr const char* empty = "";
      |                                ^~~~~
      |                                EMPTY
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:7:32: warning: declaration uses identifier 'T__opaque', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    7 |   static constexpr const char* T__opaque = "\", opaque=\"";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:7:32: warning: invalid case style for constant 'T__opaque' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:11:32: warning: invalid case style for constant 'T_Accept_Ranges' [readability-identifier-naming]
   11 |   static constexpr const char* T_Accept_Ranges = "accept-ranges";
      |                                ^~~~~~~~~~~~~~~
      |                                T_ACCEPT_RANGES
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:12:32: warning: invalid case style for constant 'T_app_xform_urlencoded' [readability-identifier-naming]
   12 |   static constexpr const char* T_app_xform_urlencoded = "application/x-www-form-urlencoded";
      |                                ^~~~~~~~~~~~~~~~~~~~~~
      |                                T_APP_XFORM_URLENCODED
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:14:32: warning: invalid case style for constant 'T_auth_nonce' [readability-identifier-naming]
   14 |   static constexpr const char* T_auth_nonce = "\", qop=\"auth\", nonce=\"";
      |                                ^~~~~~~~~~~~
      |                                T_AUTH_NONCE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:14:47: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
   14 |   static constexpr const char* T_auth_nonce = "\", qop=\"auth\", nonce=\"";
      |                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                               R"(", qop="auth", nonce=")"
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:19:32: warning: invalid case style for constant 'T_Cache_Control' [readability-identifier-naming]
   19 |   static constexpr const char* T_Cache_Control = "cache-control";
      |                                ^~~~~~~~~~~~~~~
      |                                T_CACHE_CONTROL
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:20:32: warning: invalid case style for constant 'T_chunked' [readability-identifier-naming]
   20 |   static constexpr const char* T_chunked = "chunked";
      |                                ^~~~~~~~~
      |                                T_CHUNKED
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:21:32: warning: invalid case style for constant 'T_close' [readability-identifier-naming]
   21 |   static constexpr const char* T_close = "close";
      |                                ^~~~~~~
      |                                T_CLOSE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:22:32: warning: invalid case style for constant 'T_cnonce' [readability-identifier-naming]
   22 |   static constexpr const char* T_cnonce = "cnonce";
      |                                ^~~~~~~~
      |                                T_CNONCE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:23:32: warning: invalid case style for constant 'T_Connection' [readability-identifier-naming]
   23 |   static constexpr const char* T_Connection = "connection";
      |                                ^~~~~~~~~~~~
      |                                T_CONNECTION
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:24:32: warning: invalid case style for constant 'T_Content_Disposition' [readability-identifier-naming]
   24 |   static constexpr const char* T_Content_Disposition = "content-disposition";
      |                                ^~~~~~~~~~~~~~~~~~~~~
      |                                T_CONTENT_DISPOSITION
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:25:32: warning: invalid case style for constant 'T_Content_Encoding' [readability-identifier-naming]
   25 |   static constexpr const char* T_Content_Encoding = "content-encoding";
      |                                ^~~~~~~~~~~~~~~~~~
      |                                T_CONTENT_ENCODING
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:26:32: warning: invalid case style for constant 'T_Content_Length' [readability-identifier-naming]
   26 |   static constexpr const char* T_Content_Length = "content-length";
      |                                ^~~~~~~~~~~~~~~~
      |                                T_CONTENT_LENGTH
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:27:32: warning: invalid case style for constant 'T_Content_Type' [readability-identifier-naming]
   27 |   static constexpr const char* T_Content_Type = "content-type";
      |                                ^~~~~~~~~~~~~~
      |                                T_CONTENT_TYPE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:28:32: warning: invalid case style for constant 'T_Cookie' [readability-identifier-naming]
   28 |   static constexpr const char* T_Cookie = "cookie";
      |                                ^~~~~~~~
      |                                T_COOKIE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:35:32: warning: invalid case style for constant 'T_data_' [readability-identifier-naming]
   35 |   static constexpr const char* T_data_ = "data: ";
      |                                ^~~~~~~
      |                                T_DATA
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:37:32: warning: invalid case style for constant 'T_DIGEST_' [readability-identifier-naming]
   37 |   static constexpr const char* T_DIGEST_ = "digest ";
      |                                ^~~~~~~~~
      |                                T_DIGEST
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:38:32: warning: invalid case style for constant 'T_ETag' [readability-identifier-naming]
   38 |   static constexpr const char* T_ETag = "etag";
      |                                ^~~~~~
      |                                T_E_TAG
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:39:32: warning: invalid case style for constant 'T_event_' [readability-identifier-naming]
   39 |   static constexpr const char* T_event_ = "event: ";
      |                                ^~~~~~~~
      |                                T_EVENT
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:42:32: warning: invalid case style for constant 'T_filename' [readability-identifier-naming]
   42 |   static constexpr const char* T_filename = "filename";
      |                                ^~~~~~~~~~
      |                                T_FILENAME
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:43:32: warning: invalid case style for constant 'T_gzip' [readability-identifier-naming]
   43 |   static constexpr const char* T_gzip = "gzip";
      |                                ^~~~~~
      |                                T_GZIP
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:44:32: warning: invalid case style for constant 'T_Host' [readability-identifier-naming]
   44 |   static constexpr const char* T_Host = "host";
      |                                ^~~~~~
      |                                T_HOST
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:47:32: warning: declaration uses identifier 'T_id__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   47 |   static constexpr const char* T_id__ = "id: ";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:47:32: warning: invalid case style for constant 'T_id__' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:50:32: warning: invalid case style for constant 'T_keep_alive' [readability-identifier-naming]
   50 |   static constexpr const char* T_keep_alive = "keep-alive";
      |                                ^~~~~~~~~~~~
      |                                T_KEEP_ALIVE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:51:32: warning: invalid case style for constant 'T_Last_Event_ID' [readability-identifier-naming]
   51 |   static constexpr const char* T_Last_Event_ID = "last-event-id";
      |                                ^~~~~~~~~~~~~~~
      |                                T_LAST_EVENT_ID
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:52:32: warning: invalid case style for constant 'T_Last_Modified' [readability-identifier-naming]
   52 |   static constexpr const char* T_Last_Modified = "last-modified";
      |                                ^~~~~~~~~~~~~~~
      |                                T_LAST_MODIFIED
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:55:32: warning: invalid case style for constant 'T_MULTIPART_' [readability-identifier-naming]
   55 |   static constexpr const char* T_MULTIPART_ = "multipart/";
      |                                ^~~~~~~~~~~~
      |                                T_MULTIPART
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:56:32: warning: invalid case style for constant 'T_name' [readability-identifier-naming]
   56 |   static constexpr const char* T_name = "name";
      |                                ^~~~~~
      |                                T_NAME
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:57:32: warning: invalid case style for constant 'T_nc' [readability-identifier-naming]
   57 |   static constexpr const char* T_nc = "nc";
      |                                ^~~~
      |                                T_NC
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:58:32: warning: invalid case style for constant 'T_no_cache' [readability-identifier-naming]
   58 |   static constexpr const char* T_no_cache = "no-cache";
      |                                ^~~~~~~~~~
      |                                T_NO_CACHE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:59:32: warning: invalid case style for constant 'T_nonce' [readability-identifier-naming]
   59 |   static constexpr const char* T_nonce = "nonce";
      |                                ^~~~~~~
      |                                T_NONCE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:60:32: warning: invalid case style for constant 'T_none' [readability-identifier-naming]
   60 |   static constexpr const char* T_none = "none";
      |                                ^~~~~~
      |                                T_NONE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:61:32: warning: invalid case style for constant 'T_opaque' [readability-identifier-naming]
   61 |   static constexpr const char* T_opaque = "opaque";
      |                                ^~~~~~~~
      |                                T_OPAQUE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:62:32: warning: invalid case style for constant 'T_qop' [readability-identifier-naming]
   62 |   static constexpr const char* T_qop = "qop";
      |                                ^~~~~
      |                                T_QOP
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:63:32: warning: invalid case style for constant 'T_realm' [readability-identifier-naming]
   63 |   static constexpr const char* T_realm = "realm";
      |                                ^~~~~~~
      |                                T_REALM
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:64:32: warning: declaration uses identifier 'T_realm__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   64 |   static constexpr const char* T_realm__ = "realm=\"";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:64:32: warning: invalid case style for constant 'T_realm__' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:65:32: warning: invalid case style for constant 'T_response' [readability-identifier-naming]
   65 |   static constexpr const char* T_response = "response";
      |                                ^~~~~~~~~~
      |                                T_RESPONSE
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:66:32: warning: invalid case style for constant 'T_retry_' [readability-identifier-naming]
   66 |   static constexpr const char* T_retry_ = "retry: ";
      |                                ^~~~~~~~
      |                                T_RETRY
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:67:32: warning: invalid case style for constant 'T_retry_after' [readability-identifier-naming]
   67 |   static constexpr const char* T_retry_after = "retry-after";
      |                                ^~~~~~~~~~~~~
      |                                T_RETRY_AFTER
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:68:32: warning: invalid case style for constant 'T_nn' [readability-identifier-naming]
   68 |   static constexpr const char* T_nn = "\n\n";
      |                                ^~~~
      |                                T_NN
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:69:32: warning: invalid case style for constant 'T_rn' [readability-identifier-naming]
   69 |   static constexpr const char* T_rn = "\r\n";
      |                                ^~~~
      |                                T_RN
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:70:32: warning: invalid case style for constant 'T_rnrn' [readability-identifier-naming]
   70 |   static constexpr const char* T_rnrn = "\r\n\r\n";
      |                                ^~~~~~
      |                                T_RNRN
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:71:32: warning: invalid case style for constant 'T_Transfer_Encoding' [readability-identifier-naming]
   71 |   static constexpr const char* T_Transfer_Encoding = "transfer-encoding";
      |                                ^~~~~~~~~~~~~~~~~~~
      |                                T_TRANSFER_ENCODING
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:74:32: warning: invalid case style for constant 'T_uri' [readability-identifier-naming]
   74 |   static constexpr const char* T_uri = "uri";
      |                                ^~~~~
      |                                T_URI
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:75:32: warning: invalid case style for constant 'T_username' [readability-identifier-naming]
   75 |   static constexpr const char* T_username = "username";
      |                                ^~~~~~~~~~
      |                                T_USERNAME
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:100:32: warning: declaration uses identifier 'T__css', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  100 |   static constexpr const char* T__css = ".css";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:100:32: warning: invalid case style for constant 'T__css' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:101:32: warning: declaration uses identifier 'T__eot', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  101 |   static constexpr const char* T__eot = ".eot";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:101:32: warning: invalid case style for constant 'T__eot' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:102:32: warning: declaration uses identifier 'T__gif', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  102 |   static constexpr const char* T__gif = ".gif";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:102:32: warning: invalid case style for constant 'T__gif' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:103:32: warning: declaration uses identifier 'T__gz', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  103 |   static constexpr const char* T__gz = ".gz";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:103:32: warning: invalid case style for constant 'T__gz' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:104:32: warning: declaration uses identifier 'T__htm', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  104 |   static constexpr const char* T__htm = ".htm";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:104:32: warning: invalid case style for constant 'T__htm' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:105:32: warning: declaration uses identifier 'T__html', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  105 |   static constexpr const char* T__html = ".html";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:105:32: warning: invalid case style for constant 'T__html' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:106:32: warning: declaration uses identifier 'T__ico', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  106 |   static constexpr const char* T__ico = ".ico";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:106:32: warning: invalid case style for constant 'T__ico' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:107:32: warning: declaration uses identifier 'T__jpg', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  107 |   static constexpr const char* T__jpg = ".jpg";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:107:32: warning: invalid case style for constant 'T__jpg' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:108:32: warning: declaration uses identifier 'T__js', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  108 |   static constexpr const char* T__js = ".js";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:108:32: warning: invalid case style for constant 'T__js' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:109:32: warning: declaration uses identifier 'T__json', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  109 |   static constexpr const char* T__json = ".json";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:109:32: warning: invalid case style for constant 'T__json' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:110:32: warning: declaration uses identifier 'T__pdf', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  110 |   static constexpr const char* T__pdf = ".pdf";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:110:32: warning: invalid case style for constant 'T__pdf' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:111:32: warning: declaration uses identifier 'T__png', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  111 |   static constexpr const char* T__png = ".png";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:111:32: warning: invalid case style for constant 'T__png' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:112:32: warning: declaration uses identifier 'T__svg', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  112 |   static constexpr const char* T__svg = ".svg";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:112:32: warning: invalid case style for constant 'T__svg' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:113:32: warning: declaration uses identifier 'T__ttf', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  113 |   static constexpr const char* T__ttf = ".ttf";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:113:32: warning: invalid case style for constant 'T__ttf' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:114:32: warning: declaration uses identifier 'T__woff', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  114 |   static constexpr const char* T__woff = ".woff";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:114:32: warning: invalid case style for constant 'T__woff' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:115:32: warning: declaration uses identifier 'T__woff2', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  115 |   static constexpr const char* T__woff2 = ".woff2";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:115:32: warning: invalid case style for constant 'T__woff2' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:116:32: warning: declaration uses identifier 'T__xml', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  116 |   static constexpr const char* T__xml = ".xml";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:116:32: warning: invalid case style for constant 'T__xml' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:117:32: warning: declaration uses identifier 'T__zip', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  117 |   static constexpr const char* T__zip = ".zip";
      |                                ^
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:117:32: warning: invalid case style for constant 'T__zip' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:118:32: warning: invalid case style for constant 'T_application_javascript' [readability-identifier-naming]
  118 |   static constexpr const char* T_application_javascript = "application/javascript";
      |                                ^~~~~~~~~~~~~~~~~~~~~~~~
      |                                T_APPLICATION_JAVASCRIPT
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:119:32: warning: invalid case style for constant 'T_application_json' [readability-identifier-naming]
  119 |   static constexpr const char* T_application_json = "application/json";
      |                                ^~~~~~~~~~~~~~~~~~
      |                                T_APPLICATION_JSON
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:120:32: warning: invalid case style for constant 'T_application_msgpack' [readability-identifier-naming]
  120 |   static constexpr const char* T_application_msgpack = "application/msgpack";
      |                                ^~~~~~~~~~~~~~~~~~~~~
      |                                T_APPLICATION_MSGPACK
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:121:32: warning: invalid case style for constant 'T_application_pdf' [readability-identifier-naming]
  121 |   static constexpr const char* T_application_pdf = "application/pdf";
      |                                ^~~~~~~~~~~~~~~~~
      |                                T_APPLICATION_PDF
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:122:32: warning: invalid case style for constant 'T_application_x_gzip' [readability-identifier-naming]
  122 |   static constexpr const char* T_application_x_gzip = "application/x-gzip";
      |                                ^~~~~~~~~~~~~~~~~~~~
      |                                T_APPLICATION_X_GZIP
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:123:32: warning: invalid case style for constant 'T_application_zip' [readability-identifier-naming]
  123 |   static constexpr const char* T_application_zip = "application/zip";
      |                                ^~~~~~~~~~~~~~~~~
      |                                T_APPLICATION_ZIP
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:124:32: warning: invalid case style for constant 'T_font_eot' [readability-identifier-naming]
  124 |   static constexpr const char* T_font_eot = "font/eot";
      |                                ^~~~~~~~~~
      |                                T_FONT_EOT
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:125:32: warning: invalid case style for constant 'T_font_ttf' [readability-identifier-naming]
  125 |   static constexpr const char* T_font_ttf = "font/ttf";
      |                                ^~~~~~~~~~
      |                                T_FONT_TTF
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:126:32: warning: invalid case style for constant 'T_font_woff' [readability-identifier-naming]
  126 |   static constexpr const char* T_font_woff = "font/woff";
      |                                ^~~~~~~~~~~
      |                                T_FONT_WOFF
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:127:32: warning: invalid case style for constant 'T_font_woff2' [readability-identifier-naming]
  127 |   static constexpr const char* T_font_woff2 = "font/woff2";
      |                                ^~~~~~~~~~~~
      |                                T_FONT_WOFF2
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:128:32: warning: invalid case style for constant 'T_image_gif' [readability-identifier-naming]
  128 |   static constexpr const char* T_image_gif = "image/gif";
      |                                ^~~~~~~~~~~
      |                                T_IMAGE_GIF
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:129:32: warning: invalid case style for constant 'T_image_jpeg' [readability-identifier-naming]
  129 |   static constexpr const char* T_image_jpeg = "image/jpeg";
      |                                ^~~~~~~~~~~~
      |                                T_IMAGE_JPEG
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:130:32: warning: invalid case style for constant 'T_image_png' [readability-identifier-naming]
  130 |   static constexpr const char* T_image_png = "image/png";
      |                                ^~~~~~~~~~~
      |                                T_IMAGE_PNG
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:131:32: warning: invalid case style for constant 'T_image_svg_xml' [readability-identifier-naming]
  131 |   static constexpr const char* T_image_svg_xml = "image/svg+xml";
      |                                ^~~~~~~~~~~~~~~
      |                                T_IMAGE_SVG_XML
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:132:32: warning: invalid case style for constant 'T_image_x_icon' [readability-identifier-naming]
  132 |   static constexpr const char* T_image_x_icon = "image/x-icon";
      |                                ^~~~~~~~~~~~~~
      |                                T_IMAGE_X_ICON
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:133:32: warning: invalid case style for constant 'T_text_css' [readability-identifier-naming]
  133 |   static constexpr const char* T_text_css = "text/css";
      |                                ^~~~~~~~~~
      |                                T_TEXT_CSS
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:134:32: warning: invalid case style for constant 'T_text_event_stream' [readability-identifier-naming]
  134 |   static constexpr const char* T_text_event_stream = "text/event-stream";
      |                                ^~~~~~~~~~~~~~~~~~~
      |                                T_TEXT_EVENT_STREAM
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:135:32: warning: invalid case style for constant 'T_text_html' [readability-identifier-naming]
  135 |   static constexpr const char* T_text_html = "text/html";
      |                                ^~~~~~~~~~~
      |                                T_TEXT_HTML
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:136:32: warning: invalid case style for constant 'T_text_plain' [readability-identifier-naming]
  136 |   static constexpr const char* T_text_plain = "text/plain";
      |                                ^~~~~~~~~~~~
      |                                T_TEXT_PLAIN
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\literals.h:137:32: warning: invalid case style for constant 'T_text_xml' [readability-identifier-naming]
  137 |   static constexpr const char* T_text_xml = "text/xml";
      |                                ^~~~~~~~~~
      |                                T_TEXT_XML
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:8:9: warning: declaration uses identifier '_UMS3_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define _UMS3_H
      |         ^~~~~~~
      |         UMS3_H
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:55:2: warning: constructor does not initialize these fields: rmt, rmt_data, next_rmt_write, pixel_color, adc_cal [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   55 |         UMS3() : brightness(255) {}
      |         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:55:2: warning: 'UMS3' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   55 |         UMS3() : brightness(255) {}
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:57:2: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   57 |         void begin()
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:60:3: warning: 'pinMode' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   60 |                 pinMode(RGB_PWR, OUTPUT);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-gpio.h:74:6: note: resolves to this declaration
   74 | void pinMode(uint8_t pin, uint8_t mode);
      |      ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:63:9: warning: 'rmtInit' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |                 rmt = rmtInit(RGB_DATA, RMT_TX_MODE, RMT_MEM_64);
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:71:12: note: resolves to this declaration
   71 | rmt_obj_t* rmtInit(int pin, bool tx_not_rx, rmt_reserve_memsize_t memsize);
      |            ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:64:3: warning: 'rmtSetTick' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   64 |                 rmtSetTick(rmt, 25);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:77:7: note: resolves to this declaration
   77 | float rmtSetTick(rmt_obj_t* rmt, float tick);
      |       ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:75:3: warning: 'esp_adc_cal_characterize' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   75 |                 esp_adc_cal_characterize(ADC_UNIT_1, ADC_ATTEN_DB_2_5, ADC_WIDTH_BIT_12, 0,
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_adc_cal\include\esp_adc_cal.h:88:21: note: resolves to this declaration
   88 | esp_adc_cal_value_t esp_adc_cal_characterize(adc_unit_t adc_num,
      |                     ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:77:3: warning: 'adc1_config_channel_atten' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   77 |                 adc1_config_channel_atten(VBAT_ADC_CHANNEL, ADC_ATTEN_DB_2_5);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:209:11: note: resolves to this declaration
  209 | esp_err_t adc1_config_channel_atten(adc1_channel_t channel, adc_atten_t atten);
      |           ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:92:3: warning: 'pinMode' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   92 |                 pinMode(VBUS_SENSE, INPUT);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-gpio.h:74:6: note: resolves to this declaration
   74 | void pinMode(uint8_t pin, uint8_t mode);
      |      ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:97:2: warning: 'setLDO2Power' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   97 |         void setLDO2Power(bool on) { digitalWrite(LDO2, on); }
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:97:7: warning: method 'setLDO2Power' can be made static [readability-convert-member-functions-to-static]
   97 |         void setLDO2Power(bool on) { digitalWrite(LDO2, on); }
      |              ^
      |         static 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:97:25: warning: parameter name 'on' is too short, expected at least 3 characters [readability-identifier-length]
   97 |         void setLDO2Power(bool on) { digitalWrite(LDO2, on); }
      |                                ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:97:31: warning: 'digitalWrite' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   97 |         void setLDO2Power(bool on) { digitalWrite(LDO2, on); }
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-gpio.h:75:6: note: resolves to this declaration
   75 | void digitalWrite(uint8_t pin, uint8_t val);
      |      ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:97:50: warning: implicit conversion 'bool' -> 'uint8_t' (aka 'unsigned char') [readability-implicit-bool-conversion]
   97 |         void setLDO2Power(bool on) { digitalWrite(LDO2, on); }
      |                                                         ^ 
      |                                                         static_cast<uint8_t>( )
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:104:2: warning: 'setPixelPower' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  104 |         void setPixelPower(bool on) { digitalWrite(RGB_PWR, on); }
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:104:7: warning: method 'setPixelPower' can be made static [readability-convert-member-functions-to-static]
  104 |         void setPixelPower(bool on) { digitalWrite(RGB_PWR, on); }
      |              ^
      |         static 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:104:26: warning: parameter name 'on' is too short, expected at least 3 characters [readability-identifier-length]
  104 |         void setPixelPower(bool on) { digitalWrite(RGB_PWR, on); }
      |                                 ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:104:32: warning: 'digitalWrite' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  104 |         void setPixelPower(bool on) { digitalWrite(RGB_PWR, on); }
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-gpio.h:75:6: note: resolves to this declaration
   75 | void digitalWrite(uint8_t pin, uint8_t val);
      |      ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:104:54: warning: implicit conversion 'bool' -> 'uint8_t' (aka 'unsigned char') [readability-implicit-bool-conversion]
  104 |         void setPixelPower(bool on) { digitalWrite(RGB_PWR, on); }
      |                                                             ^ 
      |                                                             static_cast<uint8_t>( )
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:106:2: warning: 'setPixelColor' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  106 |         void setPixelColor(uint8_t r, uint8_t g, uint8_t b)
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:106:29: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  106 |         void setPixelColor(uint8_t r, uint8_t g, uint8_t b)
      |                                    ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:106:40: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
  106 |         void setPixelColor(uint8_t r, uint8_t g, uint8_t b)
      |                                               ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:106:51: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  106 |         void setPixelColor(uint8_t r, uint8_t g, uint8_t b)
      |                                                          ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:114:2: warning: 'setPixelColor' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  114 |         void setPixelColor(uint32_t rgb) { setPixelColor(rgb >> 16, rgb >> 8, rgb); }
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:116:2: warning: 'setPixelBrightness' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  116 |         void setPixelBrightness(uint8_t brightness)
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:122:2: warning: 'writePixel' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  122 |         void writePixel()
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:125:10: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  125 |                 while (micros() - next_rmt_write < 350)
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:127:4: warning: 'yield' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  127 |                         yield();
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:74:6: note: resolves to this declaration
   74 | void yield(void);
      |      ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:132:4: warning: variable 'value' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
  132 |                         uint8_t value = chan * (brightness + 1) >> 8;
      |                         ^
      |                                 const 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:135:9: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  135 |                                 if ((value >> bit) & 1)
      |                                     ^                 
      |                                     (                 ) != 0
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:138:6: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  138 |                                         rmt_data[index].level0 = 1;
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:138:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  138 |                                         rmt_data[index].level0 = 1;
      |                                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:139:6: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  139 |                                         rmt_data[index].duration0 = 32; // 800ns
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:139:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  139 |                                         rmt_data[index].duration0 = 32; // 800ns
      |                                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:140:6: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  140 |                                         rmt_data[index].level1 = 0;
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:140:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  140 |                                         rmt_data[index].level1 = 0;
      |                                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:141:6: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  141 |                                         rmt_data[index].duration1 = 18; // 450ns
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:141:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  141 |                                         rmt_data[index].duration1 = 18; // 450ns
      |                                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:145:6: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  145 |                                         rmt_data[index].level0 = 1;
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:145:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  145 |                                         rmt_data[index].level0 = 1;
      |                                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:146:6: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  146 |                                         rmt_data[index].duration0 = 16; // 400ns
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:146:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  146 |                                         rmt_data[index].duration0 = 16; // 400ns
      |                                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:147:6: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  147 |                                         rmt_data[index].level1 = 0;
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:147:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  147 |                                         rmt_data[index].level1 = 0;
      |                                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:148:6: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  148 |                                         rmt_data[index].duration1 = 34; // 850ns
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:148:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  148 |                                         rmt_data[index].duration1 = 34; // 850ns
      |                                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:167:3: warning: 'rmtWrite' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  167 |                 rmtWrite(rmt, rmt_data, 3 * 8);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:84:6: note: resolves to this declaration
   84 | bool rmtWrite(rmt_obj_t* rmt, rmt_data_t* data, size_t size);
      |      ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:167:17: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  167 |                 rmtWrite(rmt, rmt_data, 3 * 8);
      |                               ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:167:27: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  167 |                 rmtWrite(rmt, rmt_data, 3 * 8);
      |                                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:167:27: note: make conversion explicit to silence this warning
   13 |                 rmtWrite(rmt, rmt_data, 3 * 8);
      |                                         ^~~~~
      |                                         static_cast<size_t>( )
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:167:27: note: perform multiplication in a wider type
  167 |                 rmtWrite(rmt, rmt_data, 3 * 8);
      |                                         ^
      |                                         static_cast<long long>( )
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:171:20: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  171 |                 next_rmt_write = micros();
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:174:2: warning: 'color' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  174 |         static uint32_t color(uint8_t r, uint8_t g, uint8_t b)
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:174:32: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  174 |         static uint32_t color(uint8_t r, uint8_t g, uint8_t b)
      |                                       ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:174:43: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
  174 |         static uint32_t color(uint8_t r, uint8_t g, uint8_t b)
      |                                                  ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:174:54: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  174 |         static uint32_t color(uint8_t r, uint8_t g, uint8_t b)
      |                                                             ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:179:2: warning: 'colorWheel' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  179 |         static uint32_t colorWheel(uint8_t pos)
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:183:11: warning: 'color' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  183 |                         return color(255 - pos * 3, pos * 3, 0);
      |                                ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:174:18: note: resolves to this declaration
  174 |         static uint32_t color(uint8_t r, uint8_t g, uint8_t b)
      |                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:183:23: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  183 |                         return color(255 - pos * 3, pos * 3, 0);
      |                                            ^~~~~~~~
      |                                            (      )
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:185:3: warning: do not use 'else' after 'return' [readability-else-after-return]
  185 |                 else if (pos < 170)
      |                 ^~~~~~~~~~~~~~~~~~~
  186 |                 {
      |                 ~
  187 |                         pos -= 85;
      |                         ~~~~~~~~~~
  188 |                         return color(0, 255 - pos * 3, pos * 3);
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  189 |                 }
      |                 ~
  190 |                 else
      |                 ~~~~
  191 |                 {
      |                 ~
  192 |                         pos -= 170;
      |                         ~~~~~~~~~~~
  193 |                         return color(pos * 3, 0, 255 - pos * 3);
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  194 |                 }
      |                 ~
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:188:11: warning: 'color' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  188 |                         return color(0, 255 - pos * 3, pos * 3);
      |                                ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:174:18: note: resolves to this declaration
  174 |         static uint32_t color(uint8_t r, uint8_t g, uint8_t b)
      |                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:188:26: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  188 |                         return color(0, 255 - pos * 3, pos * 3);
      |                                               ^~~~~~~~
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:193:11: warning: 'color' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  193 |                         return color(pos * 3, 0, 255 - pos * 3);
      |                                ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:174:18: note: resolves to this declaration
  174 |         static uint32_t color(uint8_t r, uint8_t g, uint8_t b)
      |                         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:193:35: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  193 |                         return color(pos * 3, 0, 255 - pos * 3);
      |                                                        ^~~~~~~~
note: this fix will not be applied because it overlaps with another fix
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:204:2: warning: 'getBatteryVoltage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  204 |         float getBatteryVoltage()
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:207:3: warning: variable 'raw' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  207 |                 uint32_t raw = adc1_get_raw(VBAT_ADC_CHANNEL);
      |                 ^
      |                          const 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:207:18: warning: 'adc1_get_raw' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  207 |                 uint32_t raw = adc1_get_raw(VBAT_ADC_CHANNEL);
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:245:5: note: resolves to this declaration
  245 | int adc1_get_raw(adc1_channel_t channel);
      |     ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:208:3: warning: variable 'millivolts' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  208 |                 uint32_t millivolts = esp_adc_cal_raw_to_voltage(raw, &adc_cal);
      |                 ^
      |                          const 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:208:25: warning: 'esp_adc_cal_raw_to_voltage' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  208 |                 uint32_t millivolts = esp_adc_cal_raw_to_voltage(raw, &adc_cal);
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_adc_cal\include\esp_adc_cal.h:108:10: note: resolves to this declaration
  108 | uint32_t esp_adc_cal_raw_to_voltage(uint32_t adc_reading, const esp_adc_cal_characteristics_t *chars);
      |          ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:212:18: warning: invalid case style for constant 'upper_divider' [readability-identifier-naming]
  212 |                 const uint32_t upper_divider = 442;
      |                                ^~~~~~~~~~~~~
      |                                UPPER_DIVIDER
  213 |                 const uint32_t lower_divider = 160;
  214 |                 return (float)(upper_divider + lower_divider) / lower_divider / 1000 *
      |                                ~~~~~~~~~~~~~
      |                                UPPER_DIVIDER
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:213:18: warning: invalid case style for constant 'lower_divider' [readability-identifier-naming]
  213 |                 const uint32_t lower_divider = 160;
      |                                ^~~~~~~~~~~~~
      |                                LOWER_DIVIDER
  214 |                 return (float)(upper_divider + lower_divider) / lower_divider / 1000 *
      |                                                ~~~~~~~~~~~~~    ~~~~~~~~~~~~~
      |                                                LOWER_DIVIDER    LOWER_DIVIDER
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:215:7: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  215 |                            millivolts;
      |                            ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:218:2: warning: 'getVbusPresent' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  218 |         bool getVbusPresent() { return digitalRead(VBUS_SENSE); }
      |         ^
      |         LIBC_INLINE 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:218:7: warning: method 'getVbusPresent' can be made static [readability-convert-member-functions-to-static]
  218 |         bool getVbusPresent() { return digitalRead(VBUS_SENSE); }
      |              ^
      |         static 
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:218:33: warning: 'digitalRead' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  218 |         bool getVbusPresent() { return digitalRead(VBUS_SENSE); }
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-gpio.h:76:5: note: resolves to this declaration
   76 | int digitalRead(uint8_t pin);
      |     ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:218:33: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  218 |         bool getVbusPresent() { return digitalRead(VBUS_SENSE); }
      |                                        ^                      
      |                                                                != 0
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:253:2: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  253 |         rmt_data_t rmt_data[3 * 8];
      |         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:255:2: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  255 |         uint8_t pixel_color[3];
      |         ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:256:10: warning: use default member initializer for 'brightness' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   55 |         uint8_t brightness;
      |                 ^         
      |                           {255}
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:450:62: warning: function 'atof' has 1 other declaration with different parameter names [readability-inconsistent-declaration-parameter-name]
  450 | _Check_return_                    _ACRTIMP double    __cdecl atof   (_In_z_ char const* _String);
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:32:8: note: the 1st inconsistent declaration seen here
   32 | double atof(const char* s);
      |        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:32:8: note: differing parameters are named here: ('s'), in the other declaration: ('_String')
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:451:62: warning: function 'atoi' has 1 other declaration with different parameter names [readability-inconsistent-declaration-parameter-name]
  451 | _Check_return_ _CRT_JIT_INTRINSIC _ACRTIMP int       __cdecl atoi   (_In_z_ char const* _String);
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:28:5: note: the 1st inconsistent declaration seen here
   28 | int atoi(const char *s);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:28:5: note: differing parameters are named here: ('s'), in the other declaration: ('_String')
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:452:62: warning: function 'atol' has 1 other declaration with different parameter names [readability-inconsistent-declaration-parameter-name]
  452 | _Check_return_                    _ACRTIMP long      __cdecl atol   (_In_z_ char const* _String);
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:30:6: note: the 1st inconsistent declaration seen here
   30 | long atol(const char* s);
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:30:6: note: differing parameters are named here: ('s'), in the other declaration: ('_String')
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:27:1: warning: system include stdio.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h [llvmlibc-restrict-system-libc-headers]
   27 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   28 | #include <stdlib.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:28:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h [llvmlibc-restrict-system-libc-headers]
   28 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   29 | #include <string.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:29:1: warning: system include string.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h [llvmlibc-restrict-system-libc-headers]
   29 | #include <string.h>
      | ^~~~~~~~~~~~~~~~~~~
   30 | #include <inttypes.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:69:9: warning: declaration uses identifier '__STRINGIFY', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   69 | #define __STRINGIFY(a) #a
      |         ^~~~~~~~~~~
      |         STRINGIFY
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:103:9: warning: declaration uses identifier '_NOP', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  103 | #define _NOP() do { __asm__ volatile ("nop"); } while (0)
      |         ^~~~
      |         NOP
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:107:9: warning: declaration uses identifier '_BV', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  107 | #define _BV(b) (1UL << (b))
      |         ^~~
      |         BV
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:127:19: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  127 | #define NOT_A_PIN -1
      |                   ^ 
      |                   ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:128:20: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  128 | #define NOT_A_PORT -1
      |                    ^ 
      |                    ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:129:26: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  129 | #define NOT_AN_INTERRUPT -1
      |                          ^ 
      |                          ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:144:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  144 | typedef bool boolean;
      | ^~~~~~~~~~~~~~~~~~~~
      | using boolean = bool
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:145:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  145 | typedef uint8_t byte;
      | ^~~~~~~~~~~~~~~~~~~~
      | using byte = uint8_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:146:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  146 | typedef unsigned int word;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
      | using word = unsigned int
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:149:12: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  149 | void setup(void);
      |            ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:150:11: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  150 | void loop(void);
      |           ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:184:1: warning: system include algorithm not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h [llvmlibc-restrict-system-libc-headers]
  184 | #include <algorithm>
      | ^~~~~~~~~~~~~~~~~~~~
  185 | #include <cmath>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:185:1: warning: system include cmath not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h [llvmlibc-restrict-system-libc-headers]
  185 | #include <cmath>
      | ^~~~~~~~~~~~~~~~
  186 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:208:28: warning: parameter name 'w' is too short, expected at least 3 characters [readability-identifier-length]
  208 | uint16_t makeWord(uint16_t w);
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:209:27: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  209 | uint16_t makeWord(uint8_t h, uint8_t l);
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:209:38: warning: parameter name 'l' is too short, expected at least 3 characters [readability-identifier-length]
  209 | uint16_t makeWord(uint8_t h, uint8_t l);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:213:36: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  213 | size_t getArduinoLoopTaskStackSize(void);
      |                                    ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:219:15: warning: redundant 'pulseIn' declaration [readability-redundant-declaration]
  219 | unsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);
      | ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:175:15: note: previously declared here
  175 | unsigned long pulseIn(uint8_t pin, uint8_t state, unsigned long timeout);
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:220:15: warning: redundant 'pulseInLong' declaration [readability-redundant-declaration]
  220 | unsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout = 1000000L);
      | ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:176:15: note: previously declared here
  176 | unsigned long pulseInLong(uint8_t pin, uint8_t state, unsigned long timeout);
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:222:57: warning: parameter name 'ms' is too short, expected at least 3 characters [readability-identifier-length]
  222 | extern "C" bool getLocalTime(struct tm * info, uint32_t ms = 5000);
      |                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:225:42: warning: parameter name 'tz' is too short, expected at least 3 characters [readability-identifier-length]
  225 | extern "C" void configTzTime(const char* tz,
      |                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:29:35: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   29 |     virtual int connect(IPAddress ip, uint16_t port) =0;
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:31:20: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   31 |     virtual size_t write(uint8_t) =0;
      |     ~~~~~~~        ^
      |                                   override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:31:33: warning: all parameters should be named in a function [hicpp-named-parameter]
   31 |     virtual size_t write(uint8_t) =0;
      |                                 ^
      |                                  /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:32:20: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   32 |     virtual size_t write(const uint8_t *buf, size_t size) =0;
      |     ~~~~~~~        ^
      |                                                           override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:33:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   33 |     virtual int available() = 0;
      |     ~~~~~~~     ^
      |                             override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:34:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   34 |     virtual int read() = 0;
      |     ~~~~~~~     ^
      |                        override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:36:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   36 |     virtual int peek() = 0;
      |     ~~~~~~~     ^
      |                        override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:37:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   37 |     virtual void flush() = 0;
      |     ~~~~~~~      ^
      |                          override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:40:13: warning: 'operator bool' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   40 |     virtual operator bool() = 0;
      |             ^
      |             explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:42:5: warning: 'rawIPAddress' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   42 |     uint8_t* rawIPAddress(IPAddress& addr)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Client.h:42:14: warning: method 'rawIPAddress' can be made static [readability-convert-member-functions-to-static]
   42 |     uint8_t* rawIPAddress(IPAddress& addr)
      |              ^
      |     static 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:23:10: warning: circular header file dependency detected while including 'Arduino.h', please check the include path [misc-header-include-cycle]
   23 | #include <Arduino.h>
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:197:10: note: 'Esp.h' included from here
  197 | #include "Esp.h"
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:24:10: note: 'Arduino.h' included from here
   24 | #include "Arduino.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:30:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   30 | typedef enum {
      | ^~~~~~~~~~~~~~
   31 |     WDTO_0MS    = 0,   //!< WDTO_0MS
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   32 |     WDTO_15MS   = 15,  //!< WDTO_15MS
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   33 |     WDTO_30MS   = 30,  //!< WDTO_30MS
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |     WDTO_60MS   = 60,  //!< WDTO_60MS
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   35 |     WDTO_120MS  = 120, //!< WDTO_120MS
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   36 |     WDTO_250MS  = 250, //!< WDTO_250MS
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     WDTO_500MS  = 500, //!< WDTO_500MS
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     WDTO_1S     = 1000,//!< WDTO_1S
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     WDTO_2S     = 2000,//!< WDTO_2S
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     WDTO_4S     = 4000,//!< WDTO_4S
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     WDTO_8S     = 8000 //!< WDTO_8S
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 | } WDTO_t;
      | ~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:30:9: warning: enum 'WDTO_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint16_t' (2 bytes) as the base type to reduce its size [performance-enum-size]
   30 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:45:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   45 | typedef enum {
      | ^~~~~~~~~~~~~~
   46 |     FM_QIO = 0x00,
      |     ~~~~~~~~~~~~~~
   47 |     FM_QOUT = 0x01,
      |     ~~~~~~~~~~~~~~~
   48 |     FM_DIO = 0x02,
      |     ~~~~~~~~~~~~~~
   49 |     FM_DOUT = 0x03,
      |     ~~~~~~~~~~~~~~~
   50 |     FM_FAST_READ = 0x04,
      |     ~~~~~~~~~~~~~~~~~~~~
   51 |     FM_SLOW_READ = 0x05,
      |     ~~~~~~~~~~~~~~~~~~~~
   52 |     FM_UNKNOWN = 0xff
      |     ~~~~~~~~~~~~~~~~~
   53 | } FlashMode_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:45:9: warning: enum 'FlashMode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   45 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:55:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   55 | typedef enum {
      | ^~~~~~~~~~~~~~
   56 |     SKETCH_SIZE_TOTAL = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~
   57 |     SKETCH_SIZE_FREE = 1
      |     ~~~~~~~~~~~~~~~~~~~~
   58 | } sketchSize_t;
      | ~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:55:9: warning: enum 'sketchSize_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   55 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:60:7: warning: class 'EspClass' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   60 | class EspClass
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:63:5: warning: use '= default' to define a trivial default constructor [hicpp-use-equals-default,modernize-use-equals-default]
   63 |     EspClass() {}
      |     ^          ~~
      |                = default;
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:63:5: warning: 'EspClass' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   63 |     EspClass() {}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:64:5: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
   64 |     ~EspClass() {}
      |     ^           ~~
      |                 = default;
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:64:5: warning: '~EspClass' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   64 |     ~EspClass() {}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:82:5: warning: 'getCpuFreqMHz' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   82 |     uint32_t getCpuFreqMHz(){ return getCpuFrequencyMhz(); }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:82:14: warning: method 'getCpuFreqMHz' can be made static [readability-convert-member-functions-to-static]
   82 |     uint32_t getCpuFreqMHz(){ return getCpuFrequencyMhz(); }
      |              ^
      |     static 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:82:38: warning: 'getCpuFrequencyMhz' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   82 |     uint32_t getCpuFreqMHz(){ return getCpuFrequencyMhz(); }
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h:40:10: note: resolves to this declaration
   40 | uint32_t getCpuFrequencyMhz();  // In MHz
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:83:5: warning: 'getCycleCount' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   83 |     inline uint32_t getCycleCount() __attribute__((always_inline));
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:112:1: warning: 'getCycleCount' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  112 | uint32_t ARDUINO_ISR_ATTR EspClass::getCycleCount()
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:112:37: warning: method 'getCycleCount' can be made static [readability-convert-member-functions-to-static]
   83 | uint32_t ARDUINO_ISR_ATTR EspClass::getCycleCount()
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:114:12: warning: 'cpu_ll_get_cycle_count' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  114 |     return cpu_hal_get_cycle_count();
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:42:41: note: expanded from macro 'cpu_hal_get_cycle_count'
   42 | #define cpu_hal_get_cycle_count()       cpu_ll_get_cycle_count()
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:41:34: note: resolves to this declaration
   41 | static inline uint32_t IRAM_ATTR cpu_ll_get_cycle_count(void)
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Esp.h:117:17: warning: variable 'ESP' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  117 | extern EspClass ESP;
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:23:24: warning: variable 'ARDUINO_HW_CDC_EVENTS' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   23 | ESP_EVENT_DECLARE_BASE(ARDUINO_HW_CDC_EVENTS);
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:25:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   25 | typedef enum {
      | ^~~~~~~~~~~~~~
   26 |     ARDUINO_HW_CDC_ANY_EVENT = ESP_EVENT_ANY_ID,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   27 |     ARDUINO_HW_CDC_CONNECTED_EVENT = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   28 |     ARDUINO_HW_CDC_BUS_RESET_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 |     ARDUINO_HW_CDC_RX_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   30 |     ARDUINO_HW_CDC_TX_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   31 |     ARDUINO_HW_CDC_MAX_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   32 | } arduino_hw_cdc_event_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:25:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   25 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:25:9: warning: enum 'arduino_hw_cdc_event_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:34:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   34 | typedef union {
      | ^~~~~~~~~~~~~~~
   35 |     struct {
      |     ~~~~~~~~
   36 |             size_t len;
      |             ~~~~~~~~~~~
   37 |     } rx;
      |     ~~~~~
   38 |     struct {
      |     ~~~~~~~~
   39 |             size_t len;
      |             ~~~~~~~~~~~
   40 |     } tx;
      |     ~~~~~
   41 | } arduino_hw_cdc_event_data_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:43:7: warning: class 'HWCDC' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   43 | class HWCDC: public Stream
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:51:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   51 |     ~HWCDC();
      |     ^       
      |              override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:62:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   62 |     int available(void);
      |         ^              
      |                         override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:62:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   62 |     int available(void);
      |                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:63:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   63 |     int availableForWrite(void);
      |         ^                      
      |                                 override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:63:27: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   63 |     int availableForWrite(void);
      |                           ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:64:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   64 |     int peek(void);
      |         ^         
      |                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:64:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   64 |     int peek(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:65:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   65 |     int read(void);
      |         ^         
      |                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:65:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   65 |     int read(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:67:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   67 |     size_t write(uint8_t);
      |            ^             
      |                           override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:67:25: warning: all parameters should be named in a function [hicpp-named-parameter]
   67 |     size_t write(uint8_t);
      |                         ^
      |                          /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:68:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   68 |     size_t write(const uint8_t *buffer, size_t size);
      |            ^                                        
      |                                                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:69:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   69 |     void flush(void);
      |          ^          
      |                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:69:16: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   69 |     void flush(void);
      |                ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:71:27: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   71 |     static bool isPlugged(void);
      |                           ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:72:5: warning: 'isConnected' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   72 |     inline static bool isConnected(void)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:72:5: warning: function 'isConnected' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   72 |     inline static bool isConnected(void)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:72:36: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   72 |     inline static bool isConnected(void)
      |                                    ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:74:16: warning: 'isCDC_Connected' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   74 |         return isCDC_Connected();
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:47:17: note: resolves to this declaration
   47 |     static bool isCDC_Connected();
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:76:5: warning: 'read' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   76 |     inline size_t read(char * buffer, size_t size)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:76:5: warning: function 'read' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   76 |     inline size_t read(char * buffer, size_t size)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:78:21: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   78 |         return read((uint8_t*) buffer, size);
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:80:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   80 |     inline size_t write(const char * buffer, size_t size)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:80:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   80 |     inline size_t write(const char * buffer, size_t size)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:82:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   82 |         return write((uint8_t*) buffer, size);
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:84:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   84 |     inline size_t write(const char * s)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:84:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   84 |     inline size_t write(const char * s)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:84:38: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   84 |     inline size_t write(const char * s)
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:86:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   86 |         return write((uint8_t*) s, strlen(s));
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:88:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   88 |     inline size_t write(unsigned long n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:88:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   88 |     inline size_t write(unsigned long n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:92:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   92 |     inline size_t write(long n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:92:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   92 |     inline size_t write(long n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:96:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   96 |     inline size_t write(unsigned int n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:96:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   96 |     inline size_t write(unsigned int n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:100:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  100 |     inline size_t write(int n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:100:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  100 |     inline size_t write(int n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:104:5: warning: 'operator bool' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  104 |     operator bool() const;
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:106:5: warning: 'baudRate' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  106 |     uint32_t baudRate(){return 115200;}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:106:14: warning: method 'baudRate' can be made static [readability-convert-member-functions-to-static]
  106 |     uint32_t baudRate(){return 115200;}
      |              ^
      |     static 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HWCDC.h:112:14: warning: variable 'Serial' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  112 | extern HWCDC Serial;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:49:1: warning: system include functional not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h [llvmlibc-restrict-system-libc-headers]
   49 | #include <functional>
      | ^~~~~~~~~~~~~~~~~~~~~
   50 | #include "Stream.h"
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   88 | typedef uart_mode_t SerialMode;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using SerialMode = uart_mode_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   89 | typedef uart_hw_flowcontrol_t SerialHwFlowCtrl;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using SerialHwFlowCtrl = uart_hw_flowcontrol_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:91:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   91 | typedef enum {
      | ^~~~~~~~~~~~~~
   92 |     UART_NO_ERROR,
      |     ~~~~~~~~~~~~~~
   93 |     UART_BREAK_ERROR,
      |     ~~~~~~~~~~~~~~~~~
   94 |     UART_BUFFER_FULL_ERROR,
      |     ~~~~~~~~~~~~~~~~~~~~~~~
   95 |     UART_FIFO_OVF_ERROR,
      |     ~~~~~~~~~~~~~~~~~~~~
   96 |     UART_FRAME_ERROR,
      |     ~~~~~~~~~~~~~~~~~
   97 |     UART_PARITY_ERROR
      |     ~~~~~~~~~~~~~~~~~
   98 | } hardwareSerial_error_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:91:9: warning: enum 'hardwareSerial_error_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   91 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:110:50: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  110 |   #define ARDUINO_SERIAL_EVENT_TASK_RUNNING_CORE -1
      |                                                  ^ 
      |                                                  ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:184:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  184 | typedef std::function<void(void)> OnReceiveCb;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using OnReceiveCb = std::function<void(void)>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:185:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  185 | typedef std::function<void(hardwareSerial_error_t)> OnReceiveErrorCb;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using OnReceiveErrorCb = std::function<void(hardwareSerial_error_t)>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:187:7: warning: class 'HardwareSerial' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
  187 | class HardwareSerial: public Stream
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:190:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  190 |     HardwareSerial(uint8_t uart_nr);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:191:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  191 |     ~HardwareSerial();
      |     ^                
      |                       override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:231:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  231 |     void end(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:233:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  233 |     int available(void);
      |         ^              
      |                         override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:233:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  233 |     int available(void);
      |                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:234:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  234 |     int availableForWrite(void);
      |         ^                      
      |                                 override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:234:27: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  234 |     int availableForWrite(void);
      |                           ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:235:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  235 |     int peek(void);
      |         ^         
      |                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:235:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  235 |     int peek(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:236:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  236 |     int read(void);
      |         ^         
      |                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:236:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  236 |     int read(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:238:5: warning: 'read' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  238 |     inline size_t read(char * buffer, size_t size)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:238:5: warning: function 'read' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  238 |     inline size_t read(char * buffer, size_t size)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:240:21: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  240 |         return read((uint8_t*) buffer, size);
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:243:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  243 |     size_t readBytes(uint8_t *buffer, size_t length);
      |            ^                                        
      |                                                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:244:5: warning: 'readBytes' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  244 |     size_t readBytes(char *buffer, size_t length)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:244:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  244 |     size_t readBytes(char *buffer, size_t length)
      |            ^                                     
      |                                                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:246:26: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  246 |         return readBytes((uint8_t *) buffer, length);
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:248:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  248 |     void flush(void);
      |          ^          
      |                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:248:16: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  248 |     void flush(void);
      |                ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:250:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  250 |     size_t write(uint8_t);
      |            ^             
      |                           override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:250:25: warning: all parameters should be named in a function [hicpp-named-parameter]
  250 |     size_t write(uint8_t);
      |                         ^
      |                          /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:251:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  251 |     size_t write(const uint8_t *buffer, size_t size);
      |            ^                                        
      |                                                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:252:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  252 |     inline size_t write(const char * buffer, size_t size)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:252:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  252 |     inline size_t write(const char * buffer, size_t size)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:254:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  254 |         return write((uint8_t*) buffer, size);
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:256:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  256 |     inline size_t write(const char * s)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:256:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  256 |     inline size_t write(const char * s)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:256:38: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  256 |     inline size_t write(const char * s)
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:258:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  258 |         return write((uint8_t*) s, strlen(s));
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:260:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  260 |     inline size_t write(unsigned long n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:260:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  260 |     inline size_t write(unsigned long n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:264:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  264 |     inline size_t write(long n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:264:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  264 |     inline size_t write(long n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:268:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  268 |     inline size_t write(unsigned int n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:268:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  268 |     inline size_t write(unsigned int n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:272:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  272 |     inline size_t write(int n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:272:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  272 |     inline size_t write(int n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:277:5: warning: 'operator bool' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  277 |     operator bool() const;
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:304:13: warning: member variable '_uart_nr' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  304 |     uint8_t _uart_nr;
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:305:13: warning: member variable '_uart' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  305 |     uart_t* _uart;
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:306:12: warning: member variable '_rxBufferSize' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  306 |     size_t _rxBufferSize;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:307:12: warning: member variable '_txBufferSize' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  307 |     size_t _txBufferSize;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:308:17: warning: member variable '_onReceiveCB' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  308 |     OnReceiveCb _onReceiveCB;
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:309:22: warning: member variable '_onReceiveErrorCB' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  309 |     OnReceiveErrorCb _onReceiveErrorCB;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:311:10: warning: member variable '_onReceiveTimeout' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  311 |     bool _onReceiveTimeout;
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:312:13: warning: member variable '_rxTimeout' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  312 |     uint8_t _rxTimeout, _rxFIFOFull;
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:312:25: warning: member variable '_rxFIFOFull' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  312 |     uint8_t _rxTimeout, _rxFIFOFull;
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:313:18: warning: member variable '_eventTask' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  313 |     TaskHandle_t _eventTask;
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:315:23: warning: member variable '_lock' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  315 |     SemaphoreHandle_t _lock;
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:319:28: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  319 |     void _destroyEventTask(void);
      |                            ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:323:28: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  323 | extern void serialEventRun(void) __attribute__((weak));
      |                            ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:330:23: warning: variable 'Serial0' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  330 | extern HardwareSerial Serial0;
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:335:23: warning: variable 'Serial1' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  335 | extern HardwareSerial Serial1;
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\HardwareSerial.h:338:23: warning: variable 'Serial2' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  338 | extern HardwareSerial Serial2;
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:29:7: warning: class 'IPAddress' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   29 | class IPAddress: public Printable
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:33:9: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   33 |         uint8_t bytes[4];  // IPv4 address
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:41:5: warning: 'raw_address' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   41 |     uint8_t* raw_address()
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:43:16: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
   43 |         return _address.bytes;
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:43:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   43 |         return _address.bytes;
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:50:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   50 |     IPAddress(uint32_t address);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:51:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   51 |     IPAddress(const uint8_t *address);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:52:5: warning: '~IPAddress' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   52 |     virtual ~IPAddress() {}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:52:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   52 |     virtual ~IPAddress() {}
      |     ~~~~~~~ ^
      |                          override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:52:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
   52 |     virtual ~IPAddress() {}
      |             ^            ~~
      |                          = default;
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:55:5: warning: 'fromString' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   55 |     bool fromString(const String &address) { return fromString(address.c_str()); }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:59:5: warning: 'operator unsigned int' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   59 |     operator uint32_t() const
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:59:5: warning: 'operator unsigned int' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   59 |     operator uint32_t() const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:61:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   61 |         return _address.dword;
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:63:5: warning: 'operator==' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   63 |     bool operator==(const IPAddress& addr) const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:65:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   65 |         return _address.dword == addr._address.dword;
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:65:48: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   65 |         return _address.dword == addr._address.dword;
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:70:5: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   70 |     uint8_t operator[](int index) const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:72:16: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   72 |         return _address.bytes[index];
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:72:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   72 |         return _address.bytes[index];
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:74:5: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   74 |     uint8_t& operator[](int index)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:76:16: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   76 |         return _address.bytes[index];
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:76:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   76 |         return _address.bytes[index];
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:83:20: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   83 |     virtual size_t printTo(Print& p) const;
      |     ~~~~~~~        ^                      
      |                                            override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:83:35: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   83 |     virtual size_t printTo(Print& p) const;
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:95:18: warning: variable 'INADDR_NONE' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   95 | extern IPAddress INADDR_NONE;
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:29:7: warning: class 'IPv6Address' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   29 | class IPv6Address: public Printable
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:33:9: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   33 |         uint8_t bytes[16];  // IPv4 address
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:34:9: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   34 |         uint32_t dword[4];
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:41:5: warning: 'raw_address' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   41 |     uint8_t* raw_address()
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:43:16: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
   43 |         return _address.bytes;
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:43:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   43 |         return _address.bytes;
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:49:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   49 |     IPv6Address(const uint8_t *address);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:50:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   50 |     IPv6Address(const uint32_t *address);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:51:5: warning: '~IPv6Address' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   51 |     virtual ~IPv6Address() {}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:51:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   51 |     virtual ~IPv6Address() {}
      |     ~~~~~~~ ^
      |                            override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:51:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
   51 |     virtual ~IPv6Address() {}
      |             ^              ~~
      |                            = default;
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:54:5: warning: 'fromString' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   54 |     bool fromString(const String &address) { return fromString(address.c_str()); }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:56:5: warning: 'operator const unsigned char *' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   56 |     operator const uint8_t*() const
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:56:5: warning: 'operator const unsigned char *' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   56 |     operator const uint8_t*() const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:58:16: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
   58 |         return _address.bytes;
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:58:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   58 |         return _address.bytes;
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:60:5: warning: 'operator const unsigned int *' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   60 |     operator const uint32_t*() const
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:60:5: warning: 'operator const unsigned int *' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   60 |     operator const uint32_t*() const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:62:16: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
   62 |         return _address.dword;
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:62:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   62 |         return _address.dword;
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:64:5: warning: 'operator==' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   64 |     bool operator==(const IPv6Address& addr) const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:66:26: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   66 |         return (_address.dword[0] == addr._address.dword[0])
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:66:52: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   66 |         return (_address.dword[0] == addr._address.dword[0])
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:67:26: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   67 |             && (_address.dword[1] == addr._address.dword[1])
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:67:52: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   67 |             && (_address.dword[1] == addr._address.dword[1])
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:68:26: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   68 |             && (_address.dword[2] == addr._address.dword[2])
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:68:52: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   68 |             && (_address.dword[2] == addr._address.dword[2])
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:69:26: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   69 |             && (_address.dword[3] == addr._address.dword[3]);
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:69:52: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   69 |             && (_address.dword[3] == addr._address.dword[3]);
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:74:5: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   74 |     uint8_t operator[](int index) const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:76:16: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   76 |         return _address.bytes[index];
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:76:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   76 |         return _address.bytes[index];
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:78:5: warning: 'operator[]' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   78 |     uint8_t& operator[](int index)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:80:16: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
   80 |         return _address.bytes[index];
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:80:25: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
   80 |         return _address.bytes[index];
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:86:20: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   86 |     virtual size_t printTo(Print& p) const;
      |     ~~~~~~~        ^                      
      |                                            override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPv6Address.h:86:35: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   86 |     virtual size_t printTo(Print& p) const;
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:34:7: warning: class 'Print' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   34 | class Print
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:37:9: warning: use default member initializer for 'write_error' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   37 |     int write_error;
      |         ^          
      |                    {0}
   38 |     size_t printNumber(unsigned long, uint8_t);
   39 |     size_t printNumber(unsigned long long, uint8_t);
   40 |     size_t printFloat(double, uint8_t);
   41 | protected:
   42 |     void setWriteError(int err = 1)
   43 |     {
   44 |         write_error = err;
   45 |     }
   46 | public:
   47 |     Print() :
   48 |         write_error(0)
      |         ~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:42:5: warning: 'setWriteError' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   42 |     void setWriteError(int err = 1)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:47:5: warning: 'Print' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   47 |     Print() :
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:51:5: warning: '~Print' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   51 |     virtual ~Print() {}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:51:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
   51 |     virtual ~Print() {}
      |             ^        ~~
      |                      = default;
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:52:5: warning: 'getWriteError' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   52 |     int getWriteError()
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:52:9: warning: method 'getWriteError' can be made const [readability-make-member-function-const]
   52 |     int getWriteError()
      |         ^              
      |                         const
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:56:5: warning: 'clearWriteError' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   56 |     void clearWriteError()
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:62:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   62 |     size_t write(const char *str)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:64:19: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   64 |         if(str == NULL) {
      |                   ^~~~
      |                   nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:67:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   67 |         return write((const uint8_t *) str, strlen(str));
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:70:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   70 |     size_t write(const char *buffer, size_t size)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:72:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   72 |         return write((const uint8_t *) buffer, size);
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:80:5: warning: 'availableForWrite' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   80 |     virtual int availableForWrite() { return 0; }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:81:5: warning: 'print' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   81 |     size_t print(const __FlashStringHelper *ifsh) { return print(reinterpret_cast<const char *>(ifsh)); }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:81:66: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
   81 |     size_t print(const __FlashStringHelper *ifsh) { return print(reinterpret_cast<const char *>(ifsh)); }
      |                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:83:24: warning: do not declare C-style arrays, use 'std::array' or 'std::vector' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   83 |     size_t print(const char[]);
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:94:62: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   94 |     size_t print(struct tm * timeinfo, const char * format = NULL);
      |                                                              ^~~~
      |                                                              nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:96:5: warning: 'println' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   96 |     size_t println(const __FlashStringHelper *ifsh) { return println(reinterpret_cast<const char *>(ifsh)); }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:96:70: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
   96 |     size_t println(const __FlashStringHelper *ifsh) { return println(reinterpret_cast<const char *>(ifsh)); }
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:97:34: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   97 |     size_t println(const String &s);
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:98:26: warning: do not declare C-style arrays, use 'std::array' or 'std::vector' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   98 |     size_t println(const char[]);
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:109:64: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  109 |     size_t println(struct tm * timeinfo, const char * format = NULL);
      |                                                                ^~~~
      |                                                                nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:110:20: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  110 |     size_t println(void);
      |                    ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Print.h:112:5: warning: 'flush' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  112 |     virtual void flush() { /* Empty implementation for backward compatibility */ }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Printable.h:23:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Printable.h [llvmlibc-restrict-system-libc-headers]
   23 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   24 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Printable.h:33:7: warning: class 'Printable' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   33 | class Printable
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Printable.h:36:5: warning: '~Printable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   36 |     virtual ~Printable() {}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Printable.h:36:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
   36 |     virtual ~Printable() {}
      |             ^            ~~
      |                          = default;
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Printable.h:37:35: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   37 |     virtual size_t printTo(Print& p) const = 0;
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:38:7: warning: class 'Stream' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   38 | class Stream: public Print
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:41:19: warning: member variable '_timeout' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   41 |     unsigned long _timeout;      // number of milliseconds to wait for the next char before aborting timed read
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:42:19: warning: member variable '_startMillis' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   42 |     unsigned long _startMillis;  // used for timeout measurement
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:42:19: warning: use default member initializer for '_startMillis' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   42 |     unsigned long _startMillis;  // used for timeout measurement
      |                   ^           
      |                               {0}
   43 |     int timedRead();    // private method to read stream with timeout
   44 |     int timedPeek();    // private method to peek stream with timeout
   45 |     int peekNextDigit(); // returns the next numeric digit in the stream or -1 if timeout
   46 | 
   47 | public:
   48 |     virtual int available() = 0;
   49 |     virtual int read() = 0;
   50 |     virtual int peek() = 0;
   51 | 
   52 |     Stream():_startMillis(0)
      |              ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:52:5: warning: 'Stream' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   52 |     Stream():_startMillis(0)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:54:9: warning: '_timeout' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   52 |     Stream():_startMillis(0)
      |              
      |              _timeout(1000), 
   53 |     {
   54 |         _timeout = 1000;
      |         ^~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:56:5: warning: '~Stream' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   56 |     virtual ~Stream() {}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:56:13: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   56 |     virtual ~Stream() {}
      |     ~~~~~~~ ^
      |                       override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:56:13: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default,modernize-use-equals-default]
   56 |     virtual ~Stream() {}
      |             ^         ~~
      |                       = default;
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:61:30: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   61 |     unsigned long getTimeout(void);
      |                              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:64:5: warning: 'find' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   64 |     bool find(uint8_t *target)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:66:21: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   66 |         return find((char *) target);
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:71:5: warning: 'find' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   71 |     bool find(const uint8_t *target, size_t length)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:73:21: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   73 |         return find((char *) target, length);
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:77:5: warning: 'find' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   77 |     bool find(char target)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:83:5: warning: 'findUntil' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   83 |     bool findUntil(const uint8_t *target, const char *terminator)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:85:26: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   85 |         return findUntil((char *) target, terminator);
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:89:5: warning: 'findUntil' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   89 |     bool findUntil(const uint8_t *target, size_t targetLen, const char *terminate, size_t termLen)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:91:26: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   91 |         return findUntil((char *) target, targetLen, terminate, termLen);
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:101:5: warning: 'readBytes' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  101 |     virtual size_t readBytes(uint8_t *buffer, size_t length)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:103:26: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  103 |         return readBytes((char *) buffer, length);
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:109:5: warning: 'readBytesUntil' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  109 |     size_t readBytesUntil(char terminator, uint8_t *buffer, size_t length)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Stream.h:111:43: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  111 |         return readBytesUntil(terminator, (char *) buffer, length);
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:26:24: warning: variable 'ARDUINO_USB_CDC_EVENTS' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   26 | ESP_EVENT_DECLARE_BASE(ARDUINO_USB_CDC_EVENTS);
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   28 | typedef enum {
      | ^~~~~~~~~~~~~~
   29 |     ARDUINO_USB_CDC_ANY_EVENT = ESP_EVENT_ANY_ID,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   30 |     ARDUINO_USB_CDC_CONNECTED_EVENT = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |     ARDUINO_USB_CDC_DISCONNECTED_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   32 |     ARDUINO_USB_CDC_LINE_STATE_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   33 |     ARDUINO_USB_CDC_LINE_CODING_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |     ARDUINO_USB_CDC_RX_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   35 |     ARDUINO_USB_CDC_TX_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   36 |     ARDUINO_USB_CDC_RX_OVERFLOW_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     ARDUINO_USB_CDC_MAX_EVENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 | } arduino_usb_cdc_event_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:28:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   28 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:28:9: warning: enum 'arduino_usb_cdc_event_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:40:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   40 | typedef union {
      | ^~~~~~~~~~~~~~~
   41 |     struct {
      |     ~~~~~~~~
   42 |             bool dtr;
      |             ~~~~~~~~~
   43 |             bool rts;
      |             ~~~~~~~~~
   44 |     } line_state;
      |     ~~~~~~~~~~~~~
   45 |     struct {
      |     ~~~~~~~~
   46 |             uint32_t bit_rate;
      |             ~~~~~~~~~~~~~~~~~~
   47 |             uint8_t  stop_bits; ///< 0: 1 stop bit - 1: 1.5 stop bits - 2: 2 stop bits
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 |             uint8_t  parity;    ///< 0: None - 1: Odd - 2: Even - 3: Mark - 4: Space
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |             uint8_t  data_bits; ///< can be 5, 6, 7, 8 or 16
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     } line_coding;
      |     ~~~~~~~~~~~~~~
   51 |     struct {
      |     ~~~~~~~~
   52 |             size_t len;
      |             ~~~~~~~~~~~
   53 |     } rx;
      |     ~~~~~
   54 |     struct {
      |     ~~~~~~~~
   55 |             size_t dropped_bytes;
      |             ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:59:7: warning: class 'USBCDC' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   59 | class USBCDC: public Stream
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:62:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   62 |     USBCDC(uint8_t itf=0);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:63:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   63 |     ~USBCDC();
      |     ^        
      |               override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:73:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   73 |     int available(void);
      |         ^              
      |                         override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:73:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   73 |     int available(void);
      |                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:74:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   74 |     int availableForWrite(void);
      |         ^                      
      |                                 override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:74:27: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   74 |     int availableForWrite(void);
      |                           ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:75:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   75 |     int peek(void);
      |         ^         
      |                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:75:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   75 |     int peek(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:76:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   76 |     int read(void);
      |         ^         
      |                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:76:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   76 |     int read(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:78:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   78 |     size_t write(uint8_t);
      |            ^             
      |                           override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:78:25: warning: all parameters should be named in a function [hicpp-named-parameter]
   78 |     size_t write(uint8_t);
      |                         ^
      |                          /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:79:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   79 |     size_t write(const uint8_t *buffer, size_t size);
      |            ^                                        
      |                                                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:80:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   80 |     void flush(void);
      |          ^          
      |                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:80:16: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   80 |     void flush(void);
      |                ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:82:5: warning: 'read' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   82 |     inline size_t read(char * buffer, size_t size)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:82:5: warning: function 'read' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   82 |     inline size_t read(char * buffer, size_t size)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:84:21: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   84 |         return read((uint8_t*) buffer, size);
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:86:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   86 |     inline size_t write(const char * buffer, size_t size)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:86:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   86 |     inline size_t write(const char * buffer, size_t size)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:88:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   88 |         return write((uint8_t*) buffer, size);
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:90:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   90 |     inline size_t write(const char * s)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:90:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   90 |     inline size_t write(const char * s)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:90:38: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   90 |     inline size_t write(const char * s)
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:92:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   92 |         return write((uint8_t*) s, strlen(s));
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:94:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   94 |     inline size_t write(unsigned long n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:94:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   94 |     inline size_t write(unsigned long n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:98:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   98 |     inline size_t write(long n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:98:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   98 |     inline size_t write(long n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:102:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  102 |     inline size_t write(unsigned int n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:102:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  102 |     inline size_t write(unsigned int n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:106:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  106 |     inline size_t write(int n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:106:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  106 |     inline size_t write(int n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:112:5: warning: 'operator bool' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  112 |     operator bool() const;
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:115:24: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  115 |     bool rebootEnabled(void);
      |                        ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:118:17: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  118 |     void _onDFU(void);
      |                 ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:121:16: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  121 |     void _onRX(void);
      |                ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:122:16: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  122 |     void _onTX(void);
      |                ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:123:23: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  123 |     void _onUnplugged(void);
      |                       ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:126:14: warning: member variable 'itf' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  126 |     uint8_t  itf;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:127:14: warning: member variable 'bit_rate' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  127 |     uint32_t bit_rate;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:128:14: warning: member variable 'stop_bits' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  128 |     uint8_t  stop_bits; ///< 0: 1 stop bit - 1: 1.5 stop bits - 2: 2 stop bits
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:129:14: warning: member variable 'parity' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  129 |     uint8_t  parity;    ///< 0: None - 1: Odd - 2: Even - 3: Mark - 4: Space
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:130:14: warning: member variable 'data_bits' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  130 |     uint8_t  data_bits; ///< can be 5, 6, 7, 8 or 16
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:131:14: warning: member variable 'dtr' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  131 |     bool     dtr;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:132:14: warning: member variable 'rts' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  132 |     bool     rts;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:133:14: warning: member variable 'connected' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  133 |     bool     connected;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:134:14: warning: member variable 'reboot_enable' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  134 |     bool     reboot_enable;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:135:18: warning: member variable 'rx_queue' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  135 |     xQueueHandle rx_queue;
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:136:22: warning: member variable 'tx_lock' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  136 |     xSemaphoreHandle tx_lock;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\USBCDC.h:137:14: warning: member variable 'tx_timeout_ms' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  137 |     uint32_t tx_timeout_ms;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:46:5: warning: 'beginMulticast' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   46 |     virtual uint8_t beginMulticast(IPAddress, uint16_t) { return 0; }  // initialize, start listening on specified multicast IP address and port. Returns 1 if successful, 0 on failure
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:46:45: warning: all parameters should be named in a function [hicpp-named-parameter]
   46 |     virtual uint8_t beginMulticast(IPAddress, uint16_t) { return 0; }  // initialize, start listening on specified multicast IP address and port. Returns 1 if successful, 0 on failure
      |                                             ^         
      |                                              /*unused*/  /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:46:45: warning: the parameter #1 is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:53:39: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   53 |     virtual int beginPacket(IPAddress ip, uint16_t port) =0;
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:61:20: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   61 |     virtual size_t write(uint8_t) =0;
      |     ~~~~~~~        ^
      |                                   override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:61:33: warning: all parameters should be named in a function [hicpp-named-parameter]
   61 |     virtual size_t write(uint8_t) =0;
      |                                 ^
      |                                  /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:63:20: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   63 |     virtual size_t write(const uint8_t *buffer, size_t size) =0;
      |     ~~~~~~~        ^
      |                                                              override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:69:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   69 |     virtual int available() =0;
      |     ~~~~~~~     ^
      |                             override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:71:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   71 |     virtual int read() =0;
      |     ~~~~~~~     ^
      |                        override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:79:17: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   79 |     virtual int peek() =0;
      |     ~~~~~~~     ^
      |                        override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:80:18: warning: prefer using 'override' or (rarely) 'final' instead of 'virtual' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   80 |     virtual void flush() =0;    // Finish reading the current packet
      |     ~~~~~~~      ^
      |                          override 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:87:5: warning: 'rawIPAddress' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   87 |     uint8_t* rawIPAddress(IPAddress& addr)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Udp.h:87:14: warning: method 'rawIPAddress' can be made static [readability-convert-member-functions-to-static]
   87 |     uint8_t* rawIPAddress(IPAddress& addr)
      |              ^
      |     static 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:23:1: warning: system include ctype.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h [llvmlibc-restrict-system-libc-headers]
   23 | #include <ctype.h>
      | ^~~~~~~~~~~~~~~~~~
   24 | #define isascii(__c) ((unsigned)(__c)<=0177)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:28:1: warning: 'isAlphaNumeric' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   28 | inline boolean isAlphaNumeric(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:28:35: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   28 | inline boolean isAlphaNumeric(int c) __attribute__((always_inline));
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:29:1: warning: 'isAlpha' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   29 | inline boolean isAlpha(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:29:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   29 | inline boolean isAlpha(int c) __attribute__((always_inline));
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:30:1: warning: 'isAscii' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   30 | inline boolean isAscii(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:30:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   30 | inline boolean isAscii(int c) __attribute__((always_inline));
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:31:1: warning: 'isWhitespace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   31 | inline boolean isWhitespace(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:31:33: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   31 | inline boolean isWhitespace(int c) __attribute__((always_inline));
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:32:1: warning: 'isControl' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   32 | inline boolean isControl(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:32:30: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   32 | inline boolean isControl(int c) __attribute__((always_inline));
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:33:1: warning: 'isDigit' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   33 | inline boolean isDigit(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:33:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   33 | inline boolean isDigit(int c) __attribute__((always_inline));
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:34:1: warning: 'isGraph' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   34 | inline boolean isGraph(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:34:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   34 | inline boolean isGraph(int c) __attribute__((always_inline));
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:35:1: warning: 'isLowerCase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   35 | inline boolean isLowerCase(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:35:32: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   35 | inline boolean isLowerCase(int c) __attribute__((always_inline));
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:36:1: warning: 'isPrintable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   36 | inline boolean isPrintable(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:36:32: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   36 | inline boolean isPrintable(int c) __attribute__((always_inline));
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:37:1: warning: 'isPunct' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   37 | inline boolean isPunct(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:37:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   37 | inline boolean isPunct(int c) __attribute__((always_inline));
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:38:1: warning: 'isSpace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   38 | inline boolean isSpace(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:38:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   38 | inline boolean isSpace(int c) __attribute__((always_inline));
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:39:1: warning: 'isUpperCase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   39 | inline boolean isUpperCase(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:39:32: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   39 | inline boolean isUpperCase(int c) __attribute__((always_inline));
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:40:1: warning: 'isHexadecimalDigit' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   40 | inline boolean isHexadecimalDigit(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:40:39: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   40 | inline boolean isHexadecimalDigit(int c) __attribute__((always_inline));
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:41:1: warning: 'toAscii' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   41 | inline int toAscii(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:41:24: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   41 | inline int toAscii(int c) __attribute__((always_inline));
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:42:1: warning: 'toLowerCase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   42 | inline int toLowerCase(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:42:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   42 | inline int toLowerCase(int c) __attribute__((always_inline));
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:43:1: warning: 'toUpperCase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   43 | inline int toUpperCase(int c) __attribute__((always_inline));
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:43:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   43 | inline int toUpperCase(int c) __attribute__((always_inline));
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:47:1: warning: 'isAlphaNumeric' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   47 | inline boolean isAlphaNumeric(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:47:35: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   47 | inline boolean isAlphaNumeric(int c)
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:49:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   49 |     return (isalnum(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isalnum(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:54:1: warning: 'isAlpha' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   54 | inline boolean isAlpha(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:54:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   54 | inline boolean isAlpha(int c)
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:56:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   56 |     return (isalpha(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isalpha(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:61:1: warning: 'isAscii' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   61 | inline boolean isAscii(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:61:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   61 | inline boolean isAscii(int c)
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:63:33: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   63 |     return ( isascii (c) == 0 ? false : true);
      |              ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |              isascii (c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:67:1: warning: 'isWhitespace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   67 | inline boolean isWhitespace(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:67:33: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   67 | inline boolean isWhitespace(int c)
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:69:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   69 |     return (isblank(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isblank(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:73:1: warning: 'isControl' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   73 | inline boolean isControl(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:73:30: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   73 | inline boolean isControl(int c)
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:75:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   75 |     return (iscntrl(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             iscntrl(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:79:1: warning: 'isDigit' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   79 | inline boolean isDigit(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:79:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   79 | inline boolean isDigit(int c)
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:81:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   81 |     return (isdigit(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isdigit(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:85:1: warning: 'isGraph' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   85 | inline boolean isGraph(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:85:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   85 | inline boolean isGraph(int c)
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:87:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   87 |     return (isgraph(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isgraph(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:91:1: warning: 'isLowerCase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   91 | inline boolean isLowerCase(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:91:32: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   91 | inline boolean isLowerCase(int c)
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:93:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   93 |     return (islower(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             islower(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:97:1: warning: 'isPrintable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   97 | inline boolean isPrintable(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:97:32: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   97 | inline boolean isPrintable(int c)
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:99:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
   99 |     return (isprint(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isprint(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:104:1: warning: 'isPunct' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  104 | inline boolean isPunct(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:104:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  104 | inline boolean isPunct(int c)
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:106:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  106 |     return (ispunct(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             ispunct(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:112:1: warning: 'isSpace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  112 | inline boolean isSpace(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:112:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  112 | inline boolean isSpace(int c)
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:114:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  114 |     return (isspace(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isspace(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:118:1: warning: 'isUpperCase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  118 | inline boolean isUpperCase(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:118:32: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  118 | inline boolean isUpperCase(int c)
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:120:31: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  120 |     return (isupper(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isupper(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:125:1: warning: 'isHexadecimalDigit' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  125 | inline boolean isHexadecimalDigit(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:125:39: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  125 | inline boolean isHexadecimalDigit(int c)
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:127:32: warning: redundant boolean literal in ternary expression result [readability-simplify-boolean-expr]
  127 |     return (isxdigit(c) == 0 ? false : true);
      |             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
      |             isxdigit(c) != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:132:1: warning: 'toAscii' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  132 | inline int toAscii(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:132:24: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  132 | inline int toAscii(int c)
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:143:1: warning: 'toLowerCase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  143 | inline int toLowerCase(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:143:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  143 | inline int toLowerCase(int c)
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:149:1: warning: 'toUpperCase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  149 | inline int toUpperCase(int c)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WCharacter.h:149:28: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  149 | inline int toUpperCase(int c)
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:28:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h [llvmlibc-restrict-system-libc-headers]
   28 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   29 | #include <stdint.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:30:1: warning: system include string.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h [llvmlibc-restrict-system-libc-headers]
   30 | #include <string.h>
      | ^~~~~~~~~~~~~~~~~~~
   31 | #include <ctype.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:31:1: warning: system include ctype.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h [llvmlibc-restrict-system-libc-headers]
   31 | #include <ctype.h>
      | ^~~~~~~~~~~~~~~~~~
   32 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:36:7: warning: declaration uses identifier '__FlashStringHelper', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   36 | class __FlashStringHelper;
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:45:7: warning: class 'String' defines a destructor, a copy constructor and a copy assignment operator but does not define a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   45 | class String {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:49:9: warning: use 'using' instead of 'typedef' [modernize-use-using]
   49 |         typedef void (String::*StringIfHelperType)() const;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         using StringIfHelperType = void (String::*)() const
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:50:9: warning: 'StringIfHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   50 |         void StringIfHelper() const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:59:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   59 |         String(const char *cstr = "");
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:65:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   65 |         String(const __FlashStringHelper *str) : String(reinterpret_cast<const char*>(str)) {}
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:65:9: warning: 'String' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   65 |         String(const __FlashStringHelper *str) : String(reinterpret_cast<const char*>(str)) {}
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:65:57: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
   65 |         String(const __FlashStringHelper *str) : String(reinterpret_cast<const char*>(str)) {}
      |                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:70:30: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   70 |         explicit String(char c);
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:80:17: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   80 |         ~String(void);
      |                 ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:87:9: warning: 'length' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   87 |         inline unsigned int length(void) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:87:9: warning: function 'length' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   87 |         inline unsigned int length(void) const {
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:87:36: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   87 |         inline unsigned int length(void) const {
      |                                    ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:88:16: warning: implicit conversion 'const char *' -> 'bool' [readability-implicit-bool-conversion]
   88 |             if(buffer()) {
      |                ^       
      |                         != nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:90:15: warning: do not use 'else' after 'return' [readability-else-after-return]
   90 |             } else {
      |               ^~~~~~
   91 |                 return 0;
      |                 ~~~~~~~~~
   92 |             }
      |             ~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:94:9: warning: 'clear' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   94 |         inline void clear(void) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:94:9: warning: function 'clear' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   94 |         inline void clear(void) {
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:94:27: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   94 |         inline void clear(void) {
      |                           ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:97:9: warning: 'isEmpty' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   97 |         inline bool isEmpty(void) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:97:9: warning: function 'isEmpty' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   97 |         inline bool isEmpty(void) const {
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:97:29: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   97 |         inline bool isEmpty(void) const {
      |                             ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:106:9: warning: 'operator=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  106 |         String & operator = (const __FlashStringHelper *str) {return *this = reinterpret_cast<const char*>(str);}
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:106:76: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  106 |         String & operator = (const __FlashStringHelper *str) {return *this = reinterpret_cast<const char*>(str);}
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:106:78: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  106 |         String & operator = (const __FlashStringHelper *str) {return *this = reinterpret_cast<const char*>(str);}
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:120:9: warning: 'concat' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  120 |         bool concat(const uint8_t *cstr, unsigned int length) {return concat(reinterpret_cast<const char*>(cstr), length);}
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:120:78: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  120 |         bool concat(const uint8_t *cstr, unsigned int length) {return concat(reinterpret_cast<const char*>(cstr), length);}
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:121:26: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  121 |         bool concat(char c);
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:122:35: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  122 |         bool concat(unsigned char c);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:131:9: warning: 'concat' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  131 |         bool concat(const __FlashStringHelper * str) {return concat(reinterpret_cast<const char*>(str));}
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:131:69: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  131 |         bool concat(const __FlashStringHelper * str) {return concat(reinterpret_cast<const char*>(str));}
      |                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  135 |         String & operator +=(const String &rhs) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:139:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  139 |         String & operator +=(const char *cstr) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:143:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  143 |         String & operator +=(char c) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:143:35: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  143 |         String & operator +=(char c) {
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:147:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  147 |         String & operator +=(unsigned char num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:151:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  151 |         String & operator +=(int num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:155:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  155 |         String & operator +=(unsigned int num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:159:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  159 |         String & operator +=(long num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:163:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  163 |         String & operator +=(unsigned long num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:167:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  167 |         String & operator +=(float num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:171:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  171 |         String & operator +=(double num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:175:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  175 |         String & operator +=(long long num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:179:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  179 |         String & operator +=(unsigned long long num) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:183:9: warning: 'operator+=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  183 |         String & operator += (const __FlashStringHelper *str) {return *this += reinterpret_cast<const char*>(str);}
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:183:77: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  183 |         String & operator += (const __FlashStringHelper *str) {return *this += reinterpret_cast<const char*>(str);}
      |                                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:139:18: note: resolves to this declaration
  139 |         String & operator +=(const char *cstr) {
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:183:80: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  183 |         String & operator += (const __FlashStringHelper *str) {return *this += reinterpret_cast<const char*>(str);}
      |                                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:187:78: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  187 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, char c);
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:199:9: warning: 'operator void (String::*)() const' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  199 |         operator StringIfHelperType() const {
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:199:9: warning: 'operator void (String::*)() const' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  199 |         operator StringIfHelperType() const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:200:20: warning: implicit conversion 'const char *' -> 'bool' [readability-implicit-bool-conversion]
  200 |             return buffer() ? &String::StringIfHelper : 0;
      |                    ^
      |                    (        != nullptr)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:200:32: warning: 'StringIfHelper' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  200 |             return buffer() ? &String::StringIfHelper : 0;
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:50:14: note: resolves to this declaration
   50 |         void StringIfHelper() const {
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:200:57: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  200 |             return buffer() ? &String::StringIfHelper : 0;
      |                                                         ^
      |                                                         nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:202:37: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  202 |         int compareTo(const String &s) const;
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:203:35: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  203 |         bool equals(const String &s) const;
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:205:9: warning: 'operator==' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  205 |         bool operator ==(const String &rhs) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:208:9: warning: 'operator==' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  208 |         bool operator ==(const char *cstr) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:211:9: warning: 'operator!=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  211 |         bool operator !=(const String &rhs) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:214:9: warning: 'operator!=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  214 |         bool operator !=(const char *cstr) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:221:45: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  221 |         bool equalsIgnoreCase(const String &s) const;
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:222:56: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  222 |         unsigned char equalsConstantTime(const String &s) const;
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:224:9: warning: 'startsWith' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  224 |         bool startsWith(const char *prefix) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:227:9: warning: 'startsWith' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  227 |         bool startsWith(const __FlashStringHelper *prefix) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:228:37: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  228 |             return this->startsWith(reinterpret_cast<const char*>(prefix));
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:232:9: warning: 'endsWith' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  232 |         bool endsWith(const char *suffix) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:235:9: warning: 'endsWith' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  235 |         bool endsWith(const __FlashStringHelper * suffix) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:236:35: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  236 |             return this->endsWith(reinterpret_cast<const char*>(suffix));
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:241:49: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  241 |         void setCharAt(unsigned int index, char c);
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:245:9: warning: 'toCharArray' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  245 |         void toCharArray(char *buf, unsigned int bufsize, unsigned int index = 0) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:246:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  246 |             getBytes((unsigned char *) buf, bufsize, index);
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:248:9: warning: 'c_str' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  248 |         const char* c_str() const { return buffer(); }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:249:9: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  249 |         char* begin() { return wbuffer(); }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:250:9: warning: 'end' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  250 |         char* end() { return wbuffer() + length(); }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:250:40: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  250 |         char* end() { return wbuffer() + length(); }
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:251:9: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  251 |         const char* begin() const { return c_str(); }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:252:9: warning: 'end' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  252 |         const char* end() const { return c_str() + length(); }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:252:50: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  252 |         const char* end() const { return c_str() + length(); }
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:255:26: warning: parameter name 'ch' is too short, expected at least 3 characters [readability-identifier-length]
  255 |         int indexOf(char ch) const;
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:256:26: warning: parameter name 'ch' is too short, expected at least 3 characters [readability-identifier-length]
  256 |         int indexOf(char ch, unsigned int fromIndex) const;
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:259:30: warning: parameter name 'ch' is too short, expected at least 3 characters [readability-identifier-length]
  259 |         int lastIndexOf(char ch) const;
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:260:30: warning: parameter name 'ch' is too short, expected at least 3 characters [readability-identifier-length]
  260 |         int lastIndexOf(char ch, unsigned int fromIndex) const;
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:263:9: warning: 'substring' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  263 |         String substring(unsigned int beginIndex) const {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:271:9: warning: 'replace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  271 |         void replace(const char *find, const String &replace) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:274:9: warning: 'replace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  274 |         void replace(const __FlashStringHelper *find, const String &replace) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:275:27: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  275 |             this->replace(reinterpret_cast<const char*>(find), replace);
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:277:9: warning: 'replace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  277 |         void replace(const char *find, const char *replace) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:280:9: warning: 'replace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  280 |         void replace(const __FlashStringHelper *find, const char *replace) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:281:27: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  281 |             this->replace(reinterpret_cast<const char*>(find), String(replace));
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:283:9: warning: 'replace' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  283 |         void replace(const __FlashStringHelper *find, const __FlashStringHelper *replace) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:284:27: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  284 |             this->replace(reinterpret_cast<const char*>(find), reinterpret_cast<const char*>(replace));
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:284:64: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  284 |             this->replace(reinterpret_cast<const char*>(find), reinterpret_cast<const char*>(replace));
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:288:26: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  288 |         void toLowerCase(void);
      |                          ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:289:26: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  289 |         void toUpperCase(void);
      |                          ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:290:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  290 |         void trim(void);
      |                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:293:20: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  293 |         long toInt(void) const;
      |                    ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:294:23: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  294 |         float toFloat(void) const;
      |                       ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:295:18: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  295 |         double toDouble(void) const;
      |                         ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:305:9: warning: enum '(unnamed enum at C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:305:9)' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  305 |         enum { SSOSIZE = sizeof(struct _ptr) + 4 - 1 }; // Characters to allocate space for SSO, must be 12 or more
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:307:13: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  307 |             char     buff[SSOSIZE];
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:316:9: warning: member variable 'String::(anonymous union at C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:316:9)' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  316 |         union {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:321:9: warning: 'isSSO' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  321 |         inline bool isSSO() const { return sso.isSSO; }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:321:9: warning: function 'isSSO' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  321 |         inline bool isSSO() const { return sso.isSSO; }
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:321:44: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  321 |         inline bool isSSO() const { return sso.isSSO; }
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:322:9: warning: 'len' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  322 |         inline unsigned int len() const { return isSSO() ? sso.len : ptr.len; }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:322:9: warning: function 'len' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  322 |         inline unsigned int len() const { return isSSO() ? sso.len : ptr.len; }
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:322:60: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  322 |         inline unsigned int len() const { return isSSO() ? sso.len : ptr.len; }
      |                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:322:70: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  322 |         inline unsigned int len() const { return isSSO() ? sso.len : ptr.len; }
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:323:9: warning: 'capacity' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  323 |         inline unsigned int capacity() const { return isSSO() ? (unsigned int)SSOSIZE - 1 : ptr.cap; } // Size of max string not including terminal NUL
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:323:9: warning: function 'capacity' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  323 |         inline unsigned int capacity() const { return isSSO() ? (unsigned int)SSOSIZE - 1 : ptr.cap; } // Size of max string not including terminal NUL
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:323:93: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  323 |         inline unsigned int capacity() const { return isSSO() ? (unsigned int)SSOSIZE - 1 : ptr.cap; } // Size of max string not including terminal NUL
      |                                                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:324:9: warning: 'setSSO' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  324 |         inline void setSSO(bool set) { sso.isSSO = set; }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:324:9: warning: function 'setSSO' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  324 |         inline void setSSO(bool set) { sso.isSSO = set; }
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:324:40: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  324 |         inline void setSSO(bool set) { sso.isSSO = set; }
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:325:9: warning: 'setLen' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  325 |         inline void setLen(int len) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:325:9: warning: function 'setLen' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  325 |         inline void setLen(int len) {
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:327:17: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  327 |                 sso.len = len;
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:328:17: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  328 |                 sso.buff[len] = 0;
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:328:17: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:330:17: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  330 |                 ptr.len = len;
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:331:21: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  331 |                 if (ptr.buff) {
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:331:21: warning: implicit conversion 'char *' -> 'bool' [readability-implicit-bool-conversion]
  331 |                 if (ptr.buff) {
      |                     ^       
      |                              != nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:332:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  332 |                     ptr.buff[len] = 0;
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:332:21: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:336:9: warning: 'setCapacity' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  336 |         inline void setCapacity(int cap) { if (!isSSO()) ptr.cap = cap; }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:336:9: warning: function 'setCapacity' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  336 |         inline void setCapacity(int cap) { if (!isSSO()) ptr.cap = cap; }
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:336:57: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  336 |         inline void setCapacity(int cap) { if (!isSSO()) ptr.cap = cap; }
      |                                                         ^
      |                                                          {
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:336:58: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  336 |         inline void setCapacity(int cap) { if (!isSSO()) ptr.cap = cap; }
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:337:9: warning: 'setBuffer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  337 |         inline void setBuffer(char *buff) { if (!isSSO()) ptr.buff = buff; }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:337:9: warning: function 'setBuffer' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  337 |         inline void setBuffer(char *buff) { if (!isSSO()) ptr.buff = buff; }
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:337:58: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  337 |         inline void setBuffer(char *buff) { if (!isSSO()) ptr.buff = buff; }
      |                                                          ^
      |                                                           {
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:337:59: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  337 |         inline void setBuffer(char *buff) { if (!isSSO()) ptr.buff = buff; }
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:339:9: warning: 'buffer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  339 |         inline const char *buffer() const { return reinterpret_cast<const char *>(isSSO() ? sso.buff : ptr.buff); }
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:339:9: warning: function 'buffer' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  339 |         inline const char *buffer() const { return reinterpret_cast<const char *>(isSSO() ? sso.buff : ptr.buff); }
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:339:52: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  339 |         inline const char *buffer() const { return reinterpret_cast<const char *>(isSSO() ? sso.buff : ptr.buff); }
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:339:52: warning: redundant explicit casting to the same type 'const char *' as the sub-expression, remove this casting [readability-redundant-casting]
  339 |         inline const char *buffer() const { return reinterpret_cast<const char *>(isSSO() ? sso.buff : ptr.buff); }
      |                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                             ~
      |                                                    (                                                           )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:339:93: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  339 |         inline const char *buffer() const { return reinterpret_cast<const char *>(isSSO() ? sso.buff : ptr.buff); }
      |                                                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:339:93: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:339:104: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  339 |         inline const char *buffer() const { return reinterpret_cast<const char *>(isSSO() ? sso.buff : ptr.buff); }
      |                                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:340:9: warning: 'wbuffer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  340 |         inline char *wbuffer() const { return isSSO() ? const_cast<char *>(sso.buff) : ptr.buff; } // Writable version of buffer
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:340:9: warning: function 'wbuffer' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  340 |         inline char *wbuffer() const { return isSSO() ? const_cast<char *>(sso.buff) : ptr.buff; } // Writable version of buffer
      |         ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:340:57: warning: do not use const_cast to remove const qualifier [cppcoreguidelines-pro-type-const-cast]
  340 |         inline char *wbuffer() const { return isSSO() ? const_cast<char *>(sso.buff) : ptr.buff; } // Writable version of buffer
      |                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:340:76: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  340 |         inline char *wbuffer() const { return isSSO() ? const_cast<char *>(sso.buff) : ptr.buff; } // Writable version of buffer
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:340:88: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  340 |         inline char *wbuffer() const { return isSSO() ? const_cast<char *>(sso.buff) : ptr.buff; } // Writable version of buffer
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:342:5: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
  342 |     protected:
      |     ^~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:297:5: note: previously declared here
  297 |     protected:
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:343:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  343 |         void init(void);
      |                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:344:25: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  344 |         void invalidate(void);
      |                         ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:349:9: warning: 'copy' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  349 |         String & copy(const __FlashStringHelper *pstr, unsigned int length) {
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:350:29: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  350 |                 return copy(reinterpret_cast<const char*>(pstr), length);
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:359:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  359 |         StringSumHelper(const String &s) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:359:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  359 |         StringSumHelper(const String &s) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:359:39: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  359 |         StringSumHelper(const String &s) :
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:362:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  362 |         StringSumHelper(const char *p) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:362:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  362 |         StringSumHelper(const char *p) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:362:37: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  362 |         StringSumHelper(const char *p) :
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:365:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  365 |         StringSumHelper(char c) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:365:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  365 |         StringSumHelper(char c) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:365:30: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  365 |         StringSumHelper(char c) :
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:368:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  368 |         StringSumHelper(unsigned char num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:368:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  368 |         StringSumHelper(unsigned char num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:371:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  371 |         StringSumHelper(int num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:371:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  371 |         StringSumHelper(int num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:374:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  374 |         StringSumHelper(unsigned int num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:374:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  374 |         StringSumHelper(unsigned int num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:377:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  377 |         StringSumHelper(long num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:377:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  377 |         StringSumHelper(long num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:380:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  380 |         StringSumHelper(unsigned long num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:380:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  380 |         StringSumHelper(unsigned long num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:383:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  383 |         StringSumHelper(float num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:383:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  383 |         StringSumHelper(float num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:386:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  386 |         StringSumHelper(double num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:386:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  386 |         StringSumHelper(double num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:389:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  389 |         StringSumHelper(long long num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:389:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  389 |         StringSumHelper(long long num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:392:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
  392 |         StringSumHelper(unsigned long long num) :
      |         ^
      |         explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:392:9: warning: 'StringSumHelper' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  392 |         StringSumHelper(unsigned long long num) :
      |         ^
      |         LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:397:1: warning: 'operator+' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  397 | inline StringSumHelper & operator +(const StringSumHelper &lhs, const __FlashStringHelper *rhs) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:398:20: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  398 |         return lhs + reinterpret_cast<const char*>(rhs);
      |                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:398:22: warning: do not use reinterpret_cast [cppcoreguidelines-pro-type-reinterpret-cast]
  398 |         return lhs + reinterpret_cast<const char*>(rhs);
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:22:9: warning: declaration uses identifier '__cbuf_h', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   22 | #define __cbuf_h
      |         ^~~~~~~~
      |         _cbuf_h
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:26:1: warning: system include string.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h [llvmlibc-restrict-system-libc-headers]
   26 | #include <string.h>
      | ^~~~~~~~~~~~~~~~~~~
   27 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:28:7: warning: class 'cbuf' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   28 | class cbuf
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:31:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   31 |     cbuf(size_t size);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:41:5: warning: 'empty' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   41 |     inline bool empty() const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:41:5: warning: function 'empty' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   41 |     inline bool empty() const
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:46:5: warning: 'full' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   46 |     inline bool full() const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:46:5: warning: function 'full' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   46 |     inline bool full() const
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:48:36: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   48 |         return wrap_if_bufend(_end + 1) == _begin;
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:57:23: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   57 |     size_t write(char c);
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:63:11: warning: member variable 'next' has public visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   63 |     cbuf *next;
      |           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:66:5: warning: 'wrap_if_bufend' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   66 |     inline char* wrap_if_bufend(char* ptr) const
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:66:5: warning: function 'wrap_if_bufend' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   66 |     inline char* wrap_if_bufend(char* ptr) const
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:71:12: warning: member variable '_size' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   71 |     size_t _size;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:72:11: warning: member variable '_buf' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   72 |     char* _buf;
      |           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:73:17: warning: member variable '_bufend' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   73 |     const char* _bufend;
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:74:11: warning: member variable '_begin' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   74 |     char* _begin;
      |           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\cbuf.h:75:11: warning: member variable '_end' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   75 |     char* _end;
      |           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-adc.h:27:10: warning: circular header file dependency detected while including 'esp32-hal.h', please check the include path [misc-header-include-cycle]
   27 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:86:10: note: 'esp32-hal-adc.h' included from here
   86 | #include "esp32-hal-adc.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:36:10: note: 'esp32-hal.h' included from here
   36 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-adc.h:29:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   29 | typedef enum {
      | ^~~~~~~~~~~~~~
   30 |     ADC_0db,
      |     ~~~~~~~~
   31 |     ADC_2_5db,
      |     ~~~~~~~~~~
   32 |     ADC_6db,
      |     ~~~~~~~~
   33 |     ADC_11db,
      |     ~~~~~~~~~
   34 |     ADC_ATTENDB_MAX
      |     ~~~~~~~~~~~~~~~
   35 | } adc_attenuation_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-adc.h:29:9: warning: enum 'adc_attenuation_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   29 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-bt.h:16:9: warning: declaration uses identifier '_ESP32_ESP32_HAL_BT_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP32_ESP32_HAL_BT_H_
      |         ^~~~~~~~~~~~~~~~~~~~~~
      |         ESP32_ESP32_HAL_BT_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-bt.h:18:10: warning: circular header file dependency detected while including 'esp32-hal.h', please check the include path [misc-header-include-cycle]
   18 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:93:10: note: 'esp32-hal-bt.h' included from here
   93 | #include "esp32-hal-bt.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:36:10: note: 'esp32-hal.h' included from here
   36 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h:16:9: warning: declaration uses identifier '_ESP32_HAL_CPU_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP32_HAL_CPU_H_
      |         ^~~~~~~~~~~~~~~~~
      |         ESP32_HAL_CPU_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h:24:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h [llvmlibc-restrict-system-libc-headers]
   24 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   25 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h:26:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   26 | typedef enum { APB_BEFORE_CHANGE, APB_AFTER_CHANGE } apb_change_ev_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using apb_change_ev_t = enum { APB_BEFORE_CHANGE, APB_AFTER_CHANGE }
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h:26:9: warning: enum 'apb_change_ev_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   26 | typedef enum { APB_BEFORE_CHANGE, APB_AFTER_CHANGE } apb_change_ev_t;
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   28 | typedef void (* apb_change_cb_t)(void * arg, apb_change_ev_t ev_type, uint32_t old_apb, uint32_t new_apb);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using apb_change_cb_t = void (* )(void * arg, apb_change_ev_t ev_type, uint32_t old_apb, uint32_t new_apb)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h:30:55: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
   30 | bool addApbChangeCallback(void * arg, apb_change_cb_t cb);
      |                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-cpu.h:31:58: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
   31 | bool removeApbChangeCallback(void * arg, apb_change_cb_t cb);
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-dac.h:27:10: warning: circular header file dependency detected while including 'esp32-hal.h', please check the include path [misc-header-include-cycle]
   27 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:85:10: note: 'esp32-hal-dac.h' included from here
   85 | #include "esp32-hal-dac.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:36:10: note: 'esp32-hal.h' included from here
   36 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-gpio.h:27:10: warning: circular header file dependency detected while including 'esp32-hal.h', please check the include path [misc-header-include-cycle]
   27 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:83:10: note: 'esp32-hal-gpio.h' included from here
   83 | #include "esp32-hal-gpio.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:36:10: note: 'esp32-hal.h' included from here
   36 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-gpio.h:78:44: warning: redundant void argument list in variable declaration [modernize-redundant-void-arg]
   78 | void attachInterrupt(uint8_t pin, void (*)(void), int mode);
      |                                            ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-i2c.h:18:9: warning: declaration uses identifier '_ESP32_HAL_I2C_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   18 | #define _ESP32_HAL_I2C_H_
      |         ^~~~~~~~~~~~~~~~~
      |         ESP32_HAL_I2C_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-ledc.h:16:9: warning: declaration uses identifier '_ESP32_HAL_LEDC_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP32_HAL_LEDC_H_
      |         ^~~~~~~~~~~~~~~~~~
      |         ESP32_HAL_LEDC_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-ledc.h:25:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   25 | typedef enum {
      | ^~~~~~~~~~~~~~
   26 |     NOTE_C, NOTE_Cs, NOTE_D, NOTE_Eb, NOTE_E, NOTE_F, NOTE_Fs, NOTE_G, NOTE_Gs, NOTE_A, NOTE_Bb, NOTE_B, NOTE_MAX
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   27 | } note_t;
      | ~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-ledc.h:25:9: warning: enum 'note_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   25 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-log.h:15:9: warning: declaration uses identifier '__ARDUHAL_LOG_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define __ARDUHAL_LOG_H__
      |         ^~~~~~~~~~~~~~~~~
      |         ARDUHAL_LOG_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-log.h:88:35: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   88 | void log_print_buf(const uint8_t *b, size_t len);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-matrix.h:16:9: warning: declaration uses identifier '_ESP32_HAL_MATRIX_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP32_HAL_MATRIX_H_
      |         ^~~~~~~~~~~~~~~~~~~~
      |         ESP32_HAL_MATRIX_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-matrix.h:23:10: warning: circular header file dependency detected while including 'esp32-hal.h', please check the include path [misc-header-include-cycle]
   23 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:81:10: note: 'esp32-hal-matrix.h' included from here
   81 | #include "esp32-hal-matrix.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:36:10: note: 'esp32-hal.h' included from here
   36 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-psram.h:16:9: warning: declaration uses identifier '_ESP32_HAL_PSRAM_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP32_HAL_PSRAM_H_
      |         ^~~~~~~~~~~~~~~~~~~
      |         ESP32_HAL_PSRAM_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rgb-led.h:8:10: warning: circular header file dependency detected while including 'esp32-hal.h', please check the include path [misc-header-include-cycle]
    8 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:95:10: note: 'esp32-hal-rgb-led.h' included from here
   95 | #include "esp32-hal-rgb-led.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:36:10: note: 'esp32-hal.h' included from here
   36 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:33:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   33 | typedef enum {
      | ^~~~~~~~~~~~~~
   34 |     RMT_MEM_64 =  1,
      |     ~~~~~~~~~~~~~~~~
   35 |     RMT_MEM_128 = 2,
      |     ~~~~~~~~~~~~~~~~
   36 |     RMT_MEM_192 = 3,
      |     ~~~~~~~~~~~~~~~~
   37 |     RMT_MEM_256 = 4,
      |     ~~~~~~~~~~~~~~~~
   38 |     RMT_MEM_320 = 5,
      |     ~~~~~~~~~~~~~~~~
   39 |     RMT_MEM_384 = 6,
      |     ~~~~~~~~~~~~~~~~
   40 |     RMT_MEM_448 = 7,
      |     ~~~~~~~~~~~~~~~~
   41 |     RMT_MEM_512 = 8,
      |     ~~~~~~~~~~~~~~~~
   42 | } rmt_reserve_memsize_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:33:9: warning: enum 'rmt_reserve_memsize_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   33 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:44:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   44 | typedef struct rmt_obj_s rmt_obj_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using rmt_obj_t = struct rmt_obj_s
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   46 | typedef void (*rmt_rx_data_cb_t)(uint32_t *data, size_t len, void *arg);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using rmt_rx_data_cb_t = void (*)(uint32_t *data, size_t len, void *arg)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   48 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   49 |     union {
      |     ~~~~~~~
   50 |         struct {
      |         ~~~~~~~~
   51 |             uint32_t duration0 :15;
      |             ~~~~~~~~~~~~~~~~~~~~~~~
   52 |             uint32_t level0 :1;
      |             ~~~~~~~~~~~~~~~~~~~
   53 |             uint32_t duration1 :15;
      |             ~~~~~~~~~~~~~~~~~~~~~~~
   54 |             uint32_t level1 :1;
      |             ~~~~~~~~~~~~~~~~~~~
   55 |         };
      |         ~~
   56 |         uint32_t val;
      |         ~~~~~~~~~~~~~
   57 |     };
      |     ~~
   58 | } rmt_data_t;
      | ~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-rmt.h:110:47: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  110 | bool rmtRead(rmt_obj_t* rmt, rmt_rx_data_cb_t cb, void * arg);
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-sigmadelta.h:16:9: warning: declaration uses identifier '_ESP32_HAL_SD_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP32_HAL_SD_H_
      |         ^~~~~~~~~~~~~~~~
      |         ESP32_HAL_SD_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-spi.h:63:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   63 | typedef struct spi_struct_t spi_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_t = struct spi_struct_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-spi.h:77:54: warning: parameter name 'ss' is too short, expected at least 3 characters [readability-identifier-length]
   77 | void spiAttachSS(spi_t * spi, uint8_t cs_num, int8_t ss);
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-spi.h:78:38: warning: parameter name 'ss' is too short, expected at least 3 characters [readability-identifier-length]
   78 | void spiDetachSS(spi_t * spi, int8_t ss);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-timer.h:23:10: warning: circular header file dependency detected while including 'esp32-hal.h', please check the include path [misc-header-include-cycle]
   23 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:92:10: note: 'esp32-hal-timer.h' included from here
   92 | #include "esp32-hal-timer.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:36:10: note: 'esp32-hal.h' included from here
   36 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-timer.h:31:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   31 | typedef struct hw_timer_s hw_timer_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using hw_timer_t = struct hw_timer_s
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-timer.h:39:57: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
   39 | void timerAttachInterruptFlag(hw_timer_t *timer, void (*fn)(void), bool edge, int intr_alloc_flags);
      |                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-timer.h:39:61: warning: redundant void argument list in variable declaration [modernize-redundant-void-arg]
   39 | void timerAttachInterruptFlag(hw_timer_t *timer, void (*fn)(void), bool edge, int intr_alloc_flags);
      |                                                             ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-timer.h:40:53: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
   40 | void timerAttachInterrupt(hw_timer_t *timer, void (*fn)(void), bool edge);
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-timer.h:40:57: warning: redundant void argument list in variable declaration [modernize-redundant-void-arg]
   40 | void timerAttachInterrupt(hw_timer_t *timer, void (*fn)(void), bool edge);
      |                                                         ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-touch.h:28:10: warning: circular header file dependency detected while including 'esp32-hal.h', please check the include path [misc-header-include-cycle]
   28 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:84:10: note: 'esp32-hal-touch.h' included from here
   84 | #include "esp32-hal-touch.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:36:10: note: 'esp32-hal.h' included from here
   36 | #include "esp32-hal.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-touch.h:39:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   39 | typedef uint32_t touch_value_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using touch_value_t = uint32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-touch.h:64:57: warning: redundant void argument list in variable declaration [modernize-redundant-void-arg]
   64 | void touchAttachInterrupt(uint8_t pin, void (*userFunc)(void), touch_value_t threshold);
      |                                                         ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-uart.h:24:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-uart.h [llvmlibc-restrict-system-libc-headers]
   24 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   25 | #include "freertos/FreeRTOS.h"
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-uart.h:30:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   30 | typedef struct uart_struct_t uart_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using uart_t = struct uart_struct_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-uart.h:37:53: warning: parameter name 'q' is too short, expected at least 3 characters [readability-identifier-length]
   37 | void uartGetEventQueue(uart_t* uart, QueueHandle_t *q); 
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-uart.h:45:38: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   45 | void uartWrite(uart_t* uart, uint8_t c);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:25:1: warning: system include stdio.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h [llvmlibc-restrict-system-libc-headers]
   25 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   26 | #include <stdlib.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:26:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h [llvmlibc-restrict-system-libc-headers]
   26 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   27 | #include <stdarg.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:29:1: warning: system include string.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h [llvmlibc-restrict-system-libc-headers]
   29 | #include <string.h>
      | ^~~~~~~~~~~~~~~~~~~
   30 | #include <math.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:30:1: warning: system include math.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h [llvmlibc-restrict-system-libc-headers]
   30 | #include <math.h>
      | ^~~~~~~~~~~~~~~~~
   31 | #include "sdkconfig.h"
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:73:6: warning: redundant 'vPortYield' declaration [readability-redundant-declaration]
   73 | void vPortYield(void);
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:312:6: note: previously declared here
  312 | void vPortYield( void );
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:129:38: warning: parameter 'pcName' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  129 |                         const char * const pcName,
      |                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:130:25: warning: parameter 'usStackDepth' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  130 |                         const uint32_t usStackDepth,
      |                         ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:131:32: warning: parameter 'pvParameters' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  131 |                         void * const pvParameters,
      |                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:133:40: warning: parameter 'pxCreatedTask' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  133 |                         TaskHandle_t * const pxCreatedTask,
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:134:25: warning: parameter 'xCoreID' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  134 |                         const BaseType_t xCoreID );
      |                         ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:139:33: warning: parameter name 'us' is too short, expected at least 3 characters [readability-identifier-length]
  139 | void delayMicroseconds(uint32_t us);
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp8266-compat.h:18:9: warning: declaration uses identifier '_ESP8266_COMPAT_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   18 | #define _ESP8266_COMPAT_H_
      |         ^~~~~~~~~~~~~~~~~~
      |         ESP8266_COMPAT_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp_arduino_version.h:33:56: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   33 | #define ESP_ARDUINO_VERSION_VAL(major, minor, patch) ((major << 16) | (minor << 8) | (patch))
      |                                                        ^
      |                                                        (    )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp_arduino_version.h:33:72: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   33 | #define ESP_ARDUINO_VERSION_VAL(major, minor, patch) ((major << 16) | (minor << 8) | (patch))
      |                                                                        ^
      |                                                                        (    )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\io_pin_remap.h:2:9: warning: declaration uses identifier '__IO_PIN_REMAP_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    2 | #define __IO_PIN_REMAP_H__
      |         ^~~~~~~~~~~~~~~~~~
      |         IO_PIN_REMAP_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\io_pin_remap.h:4:10: warning: circular header file dependency detected while including 'Arduino.h', please check the include path [misc-header-include-cycle]
    4 | #include "Arduino.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:235:10: note: 'io_pin_remap.h' included from here
  235 | #include "io_pin_remap.h"
      |          ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:24:10: note: 'Arduino.h' included from here
   24 | #include "Arduino.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:22:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   22 | typedef void prog_void;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using prog_void = void
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:23:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   23 | typedef char prog_char;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using prog_char = char
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:24:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   24 | typedef unsigned char prog_uchar;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using prog_uchar = unsigned char
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:25:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   25 | typedef char prog_int8_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~
      | using prog_int8_t = char
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:26:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   26 | typedef unsigned char prog_uint8_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using prog_uint8_t = unsigned char
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:27:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   27 | typedef short prog_int16_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
      | using prog_int16_t = short
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   28 | typedef unsigned short prog_uint16_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using prog_uint16_t = unsigned short
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:29:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   29 | typedef long prog_int32_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
      | using prog_int32_t = long
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:30:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   30 | typedef unsigned long prog_uint32_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using prog_uint32_t = unsigned long
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\pgmspace.h:36:9: warning: declaration uses identifier '_SFR_BYTE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   36 | #define _SFR_BYTE(n)  (n)
      |         ^~~~~~~~~
      |         SFR_BYTE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:28:5: warning: redundant 'atoi' declaration [readability-redundant-declaration]
   28 | int atoi(const char *s);
      |     ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:451:62: note: previously declared here
  451 | _Check_return_ _CRT_JIT_INTRINSIC _ACRTIMP int       __cdecl atoi   (_In_z_ char const* _String);
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:28:22: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   28 | int atoi(const char *s);
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:30:6: warning: redundant 'atol' declaration [readability-redundant-declaration]
   30 | long atol(const char* s);
      |      ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:452:62: note: previously declared here
  452 | _Check_return_                    _ACRTIMP long      __cdecl atol   (_In_z_ char const* _String);
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:30:23: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   30 | long atol(const char* s);
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:32:8: warning: redundant 'atof' declaration [readability-redundant-declaration]
   32 | double atof(const char* s);
      |        ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h:496:48: note: previously declared here
  496 |     _Check_return_ _ACRTIMP  double    __cdecl atof(_In_z_ char const* _String);
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:32:25: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   32 | double atof(const char* s);
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:34:7: warning: redundant 'itoa' declaration [readability-redundant-declaration]
   34 | char* itoa (int val, char *s, int radix);
      |       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:1316:28: note: previously declared here
 1316 |     _ACRTIMP char* __cdecl itoa(
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:34:28: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   34 | char* itoa (int val, char *s, int radix);
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:36:7: warning: redundant 'ltoa' declaration [readability-redundant-declaration]
   36 | char* ltoa (long val, char *s, int radix);
      |       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:1323:28: note: previously declared here
 1323 |     _ACRTIMP char* __cdecl ltoa(
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:36:29: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   36 | char* ltoa (long val, char *s, int radix);
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:38:35: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   38 | char* lltoa (long long val, char* s, int radix);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:40:37: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   40 | char* utoa (unsigned int val, char *s, int radix);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:42:7: warning: redundant 'ultoa' declaration [readability-redundant-declaration]
   42 | char* ultoa (unsigned long val, char *s, int radix);
      |       ^
C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h:1338:28: note: previously declared here
 1338 |     _ACRTIMP char* __cdecl ultoa(
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:42:39: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   42 | char* ultoa (unsigned long val, char *s, int radix);
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:44:45: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   44 | char* ulltoa (unsigned long long val, char* s, int radix);
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\stdlib_noniso.h:46:71: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   46 | char* dtostrf (double val, signed int width, unsigned int prec, char *s);
      |                                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:24:1: warning: system include memory not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h [llvmlibc-restrict-system-libc-headers]
   24 | #include <memory>
      | ^~~~~~~~~~~~~~~~~
   25 | #include <Arduino.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   37 | typedef std::shared_ptr<FileImpl> FileImplPtr;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using FileImplPtr = std::shared_ptr<FileImpl>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:39:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   39 | typedef std::shared_ptr<FSImpl> FSImplPtr;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using FSImplPtr = std::shared_ptr<FSImpl>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:41:6: warning: enum 'SeekMode' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   41 | enum SeekMode {
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:50:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   50 |     File(FileImplPtr p = FileImplPtr()) : _p(p) {
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:50:5: warning: 'File' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   50 |     File(FileImplPtr p = FileImplPtr()) : _p(p) {
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:50:22: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   50 |     File(FileImplPtr p = FileImplPtr()) : _p(p) {
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:54:25: warning: all parameters should be named in a function [hicpp-named-parameter]
   54 |     size_t write(uint8_t) override;
      |                         ^
      |                          /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:61:5: warning: 'readBytes' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   61 |     size_t readBytes(char *buffer, size_t length)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:61:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   61 |     size_t readBytes(char *buffer, size_t length)
      |            ^                                     
      |                                                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:63:21: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   63 |         return read((uint8_t*)buffer, length);
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:67:5: warning: 'seek' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   67 |     bool seek(uint32_t pos)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:75:5: warning: 'operator bool' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   75 |     operator bool() const;
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:80:25: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   80 |     boolean isDirectory(void);
      |                         ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:83:28: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   83 |     String getNextFileName(void);
      |                            ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:85:26: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   85 |     void rewindDirectory(void);
      |                          ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:88:17: warning: member variable '_p' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   88 |     FileImplPtr _p;
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:94:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   94 |     FS(FSImplPtr impl) : _impl(impl) { }
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:94:5: warning: 'FS' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   94 |     FS(FSImplPtr impl) : _impl(impl) { }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:96:63: warning: parameter 'create' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   96 |     File open(const char* path, const char* mode = FILE_READ, const bool create = false);
      |                                                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:97:65: warning: parameter 'create' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   97 |     File open(const String& path, const char* mode = FILE_READ, const bool create = false);
      |                                                                 ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:116:15: warning: member variable '_impl' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
  116 |     FSImplPtr _impl;
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\LittleFS\src\LittleFS.h:15:9: warning: declaration uses identifier '_LITTLEFS_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define _LITTLEFS_H_
      |         ^~~~~~~~~~~~
      |         LITTLEFS_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\LittleFS\src\LittleFS.h:22:7: warning: class 'LittleFSFS' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   22 | class LittleFSFS : public FS
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\LittleFS\src\LittleFS.h:39:23: warning: variable 'LittleFS' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   39 | extern fs::LittleFSFS LittleFS;
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFi.h:46:5: warning: 'WiFiClass' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   46 |     WiFiClass()
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFi.h:48:9: warning: 'prov_enable' should be initialized in a member initializer of the constructor [cppcoreguidelines-prefer-member-initializer]
   46 |     WiFiClass()
      |                
      |                 : prov_enable(false)
   47 |     {
   48 |         prov_enable = false;
      |         ^~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFi.h:64:1: warning: redundant access specifier has the same accessibility as the previous access specifier [readability-redundant-access-specifiers]
   64 | public:  
      | ^~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFi.h:45:1: note: previously declared here
   45 | public:
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFi.h:73:18: warning: variable 'WiFi' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   73 | extern WiFiClass WiFi;
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiAP.h:40:60: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   40 |     bool softAP(const char* ssid, const char* passphrase = NULL, int channel = 1, int ssid_hidden = 0, int max_connection = 4, bool ftm_responder = false);
      |                                                            ^~~~
      |                                                            nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiAP.h:41:5: warning: 'softAP' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   41 |     bool softAP(const String& ssid, const String& passphrase = emptyString, int channel = 1, int ssid_hidden = 0, int max_connection = 4, bool ftm_responder = false) {
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiAP.h:64:29: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   64 |     String softAPmacAddress(void);
      |                             ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiAP.h:66:23: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   66 |     String softAPSSID(void) const;
      |                       ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:21:9: warning: declaration uses identifier '_WIFICLIENT_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   21 | #define _WIFICLIENT_H_
      |         ^~~~~~~~~~~~~~
      |         WIFICLIENT_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:26:1: warning: system include memory not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h [llvmlibc-restrict-system-libc-headers]
   26 | #include <memory>
      | ^~~~~~~~~~~~~~~~~
   27 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:34:39: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   34 |         virtual int connect(IPAddress ip, uint16_t port, int32_t timeout) = 0;
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:39:7: warning: class 'WiFiClient' defines a destructor and a copy assignment operator but does not define a copy constructor, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   39 | class WiFiClient : public ESPLwIPClient
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:42:45: warning: member variable 'clientSocketHandle' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   42 |     std::shared_ptr<WiFiClientSocketHandle> clientSocketHandle;
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:43:41: warning: member variable '_rxBuffer' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   43 |     std::shared_ptr<WiFiClientRxBuffer> _rxBuffer;
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:44:10: warning: member variable '_connected' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   44 |     bool _connected;
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:45:9: warning: member variable '_timeout' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   45 |     int _timeout;
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:48:17: warning: member variable 'next' has public visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   48 |     WiFiClient *next;
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:50:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   50 |     WiFiClient(int fd);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:50:20: warning: parameter name 'fd' is too short, expected at least 3 characters [readability-identifier-length]
   50 |     WiFiClient(int fd);
      |                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:51:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   51 |     ~WiFiClient();
      |     ^            
      |                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:52:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   52 |     int connect(IPAddress ip, uint16_t port);
      |         ^                                   
      |                                              override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:52:27: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   52 |     int connect(IPAddress ip, uint16_t port);
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:53:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   53 |     int connect(IPAddress ip, uint16_t port, int32_t timeout_ms);
      |         ^                                                       
      |                                                                  override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:53:27: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   53 |     int connect(IPAddress ip, uint16_t port, int32_t timeout_ms);
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:54:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   54 |     int connect(const char *host, uint16_t port);
      |         ^                                       
      |                                                  override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:55:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   55 |     int connect(const char *host, uint16_t port, int32_t timeout_ms);
      |         ^                                                           
      |                                                                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:56:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   56 |     size_t write(uint8_t data);
      |            ^                  
      |                                override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:57:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   57 |     size_t write(const uint8_t *buf, size_t size);
      |            ^                                     
      |                                                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:60:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   60 |     int available();
      |         ^          
      |                     override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:61:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   61 |     int read();
      |         ^     
      |                override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:62:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   62 |     int read(uint8_t *buf, size_t size);
      |         ^                              
      |                                         override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:63:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   63 |     int peek();
      |         ^     
      |                override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:64:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   64 |     void flush();
      |          ^      
      |                  override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:65:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   65 |     void stop();
      |          ^     
      |                 override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:66:13: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   66 |     uint8_t connected();
      |             ^          
      |                         override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:68:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   68 |     operator bool()
      |     ^              
      |                     override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:68:5: warning: 'operator bool' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   68 |     operator bool()
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:68:5: warning: 'operator bool' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   68 |     operator bool()
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:70:16: warning: implicit conversion 'uint8_t' (aka 'unsigned char') -> 'bool' [readability-implicit-bool-conversion]
   70 |         return connected();
      |                ^          
      |                            != 0u
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:73:5: warning: 'operator==' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   73 |     bool operator==(const bool value)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:77:5: warning: 'operator!=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   77 |     bool operator!=(const bool value)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:82:5: warning: 'operator!=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   82 |     bool operator!=(const WiFiClient& rhs)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:93:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   93 |     int setTimeout(uint32_t seconds);
      |         ^                           
      |                                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:98:28: warning: parameter name 'fd' is too short, expected at least 3 characters [readability-identifier-length]
   98 |     IPAddress remoteIP(int fd) const;
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:100:29: warning: parameter name 'fd' is too short, expected at least 3 characters [readability-identifier-length]
  100 |     uint16_t remotePort(int fd) const;
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:102:27: warning: parameter name 'fd' is too short, expected at least 3 characters [readability-identifier-length]
  102 |     IPAddress localIP(int fd) const;
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiClient.h:104:28: warning: parameter name 'fd' is too short, expected at least 3 characters [readability-identifier-length]
  104 |     uint16_t localPort(int fd) const;
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:28:1: warning: system include functional not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h [llvmlibc-restrict-system-libc-headers]
   28 | #include <functional>
      | ^~~~~~~~~~~~~~~~~~~~~
   29 | #include "WiFiType.h"
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:34:24: warning: variable 'ARDUINO_EVENTS' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   34 | ESP_EVENT_DECLARE_BASE(ARDUINO_EVENTS);
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:36:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   36 | typedef enum {
      | ^~~~~~~~~~~~~~
   37 |         ARDUINO_EVENT_WIFI_READY = 0,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |         ARDUINO_EVENT_WIFI_SCAN_DONE,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |         ARDUINO_EVENT_WIFI_STA_START,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |         ARDUINO_EVENT_WIFI_STA_STOP,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |         ARDUINO_EVENT_WIFI_STA_CONNECTED,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |         ARDUINO_EVENT_WIFI_STA_DISCONNECTED,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |         ARDUINO_EVENT_WIFI_STA_AUTHMODE_CHANGE,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |         ARDUINO_EVENT_WIFI_STA_GOT_IP,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 |         ARDUINO_EVENT_WIFI_STA_GOT_IP6,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   46 |         ARDUINO_EVENT_WIFI_STA_LOST_IP,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 |         ARDUINO_EVENT_WIFI_AP_START,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 |         ARDUINO_EVENT_WIFI_AP_STOP,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         ARDUINO_EVENT_WIFI_AP_STACONNECTED,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |         ARDUINO_EVENT_WIFI_AP_STADISCONNECTED,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |         ARDUINO_EVENT_WIFI_AP_STAIPASSIGNED,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:36:9: warning: enum 'arduino_event_id_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   36 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:80:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   80 | typedef union {
      | ^~~~~~~~~~~~~~~
   81 |         wifi_event_sta_scan_done_t wifi_scan_done;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |         wifi_event_sta_authmode_change_t wifi_sta_authmode_change;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   83 |         wifi_event_sta_connected_t wifi_sta_connected;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   84 |         wifi_event_sta_disconnected_t wifi_sta_disconnected;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   85 |         wifi_event_sta_wps_er_pin_t wps_er_pin;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   86 |         wifi_event_sta_wps_fail_reason_t wps_fail_reason;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   87 |         wifi_event_ap_probe_req_rx_t wifi_ap_probereqrecved;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   88 |         wifi_event_ap_staconnected_t wifi_ap_staconnected;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         wifi_event_ap_stadisconnected_t wifi_ap_stadisconnected;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         wifi_event_ftm_report_t wifi_ftm_report;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   91 |         ip_event_ap_staipassigned_t wifi_ap_staipassigned;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   92 |         ip_event_got_ip_t got_ip;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
   93 |         ip_event_got_ip6_t got_ip6;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |         smartconfig_event_got_ssid_pswd_t sc_got_ssid_pswd;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   95 | #ifdef CONFIG_ETH_ENABLED
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  102 | typedef struct{
      | ^~~~~~~~~~~~~~~
  103 |         arduino_event_id_t event_id;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |         arduino_event_info_t event_info;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  105 | } arduino_event_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:107:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  107 | typedef void (*WiFiEventCb)(arduino_event_id_t event);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using WiFiEventCb = void (*)(arduino_event_id_t event)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:108:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  108 | typedef std::function<void(arduino_event_id_t event, arduino_event_info_t info)> WiFiEventFuncCb;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using WiFiEventFuncCb = std::function<void(arduino_event_id_t event, arduino_event_info_t info)>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  109 | typedef void (*WiFiEventSysCb)(arduino_event_t *event);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using WiFiEventSysCb = void (*)(arduino_event_t *event)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:111:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  111 | typedef size_t wifi_event_id_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using wifi_event_id_t = size_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:113:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  113 | typedef enum {
      | ^~~~~~~~~~~~~~
  114 |     WIFI_POWER_19_5dBm = 78,// 19.5dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  115 |     WIFI_POWER_19dBm = 76,// 19dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  116 |     WIFI_POWER_18_5dBm = 74,// 18.5dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  117 |     WIFI_POWER_17dBm = 68,// 17dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  118 |     WIFI_POWER_15dBm = 60,// 15dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  119 |     WIFI_POWER_13dBm = 52,// 13dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  120 |     WIFI_POWER_11dBm = 44,// 11dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  121 |     WIFI_POWER_8_5dBm = 34,// 8.5dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  122 |     WIFI_POWER_7dBm = 28,// 7dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  123 |     WIFI_POWER_5dBm = 20,// 5dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  124 |     WIFI_POWER_2dBm = 8,// 2dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  125 |     WIFI_POWER_MINUS_1dBm = -4// -1dBm
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  126 | } wifi_power_t;
      | ~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:113:9: warning: enum 'wifi_power_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  113 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:144:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  144 | typedef enum {
      | ^~~~~~~~~~~~~~
  145 |         WIFI_RX_ANT0 = 0,
      |         ~~~~~~~~~~~~~~~~~
  146 |         WIFI_RX_ANT1,
      |         ~~~~~~~~~~~~~
  147 |         WIFI_RX_ANT_AUTO
      |         ~~~~~~~~~~~~~~~~
  148 | } wifi_rx_ant_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:144:9: warning: enum 'wifi_rx_ant_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  144 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:150:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  150 | typedef enum {
      | ^~~~~~~~~~~~~~
  151 |         WIFI_TX_ANT0 = 0,
      |         ~~~~~~~~~~~~~~~~~
  152 |         WIFI_TX_ANT1,
      |         ~~~~~~~~~~~~~
  153 |         WIFI_TX_ANT_AUTO
      |         ~~~~~~~~~~~~~~~~
  154 | } wifi_tx_ant_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:150:9: warning: enum 'wifi_tx_ant_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  150 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:166:38: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  166 |     void removeEvent(wifi_event_id_t id);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:171:21: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  171 |     int32_t channel(void);
      |                     ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:189:108: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  189 |     bool initiateFTM(uint8_t frm_count=16, uint16_t burst_period=2, uint8_t channel=1, const uint8_t * mac=NULL);
      |                                                                                                            ^~~~
      |                                                                                                            nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:194:47: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  194 |     const char * eventName(arduino_event_id_t id);
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:197:5: warning: 'hostname' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  197 |     static bool hostname(const String& aHostname) { return setHostname(aHostname.c_str()); }
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:197:60: warning: 'setHostname' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  197 |     static bool hostname(const String& aHostname) { return setHostname(aHostname.c_str()); }
      |                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:196:17: note: resolves to this declaration
  196 |     static bool setHostname(const char * hostname);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:220:51: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
  220 |     static IPAddress calculateNetworkID(IPAddress ip, IPAddress subnet);
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiGeneric.h:221:51: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
  221 |     static IPAddress calculateBroadcast(IPAddress ip, IPAddress subnet);
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:33:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   33 | typedef enum {
      | ^~~~~~~~~~~~~~
   34 |     WPA2_AUTH_TLS = 0,
      |     ~~~~~~~~~~~~~~~~~~
   35 |     WPA2_AUTH_PEAP = 1,
      |     ~~~~~~~~~~~~~~~~~~~
   36 |     WPA2_AUTH_TTLS = 2
      |     ~~~~~~~~~~~~~~~~~~
   37 | } wpa2_auth_method_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:33:9: warning: enum 'wpa2_auth_method_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   33 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:47:99: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   47 |     wl_status_t begin(const char* wpa2_ssid, wpa2_auth_method_t method, const char* wpa2_identity=NULL, const char* wpa2_username=NULL, const char *wpa2_password=NULL, const char* ca_pem=NULL, const char* client_crt=NULL, const char* client_key=NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true);
      |                                                                                                   ^~~~
      |                                                                                                   nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:47:131: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   47 |     wl_status_t begin(const char* wpa2_ssid, wpa2_auth_method_t method, const char* wpa2_identity=NULL, const char* wpa2_username=NULL, const char *wpa2_password=NULL, const char* ca_pem=NULL, const char* client_crt=NULL, const char* client_key=NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true);
      |                                                                                                                                   ^~~~
      |                                                                                                                                   nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:47:163: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   47 |     wl_status_t begin(const char* wpa2_ssid, wpa2_auth_method_t method, const char* wpa2_identity=NULL, const char* wpa2_username=NULL, const char *wpa2_password=NULL, const char* ca_pem=NULL, const char* client_crt=NULL, const char* client_key=NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true);
      |                                                                                                                                                                   ^~~~
      |                                                                                                                                                                   nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:47:188: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   47 |     wl_status_t begin(const char* wpa2_ssid, wpa2_auth_method_t method, const char* wpa2_identity=NULL, const char* wpa2_username=NULL, const char *wpa2_password=NULL, const char* ca_pem=NULL, const char* client_crt=NULL, const char* client_key=NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true);
      |                                                                                                                                                                                            ^~~~
      |                                                                                                                                                                                            nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:47:217: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   47 |     wl_status_t begin(const char* wpa2_ssid, wpa2_auth_method_t method, const char* wpa2_identity=NULL, const char* wpa2_username=NULL, const char *wpa2_password=NULL, const char* ca_pem=NULL, const char* client_crt=NULL, const char* client_key=NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true);
      |                                                                                                                                                                                                                         ^~~~
      |                                                                                                                                                                                                                         nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:47:246: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   47 |     wl_status_t begin(const char* wpa2_ssid, wpa2_auth_method_t method, const char* wpa2_identity=NULL, const char* wpa2_username=NULL, const char *wpa2_password=NULL, const char* ca_pem=NULL, const char* client_crt=NULL, const char* client_key=NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true);
      |                                                                                                                                                                                                                                                      ^~~~
      |                                                                                                                                                                                                                                                      nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:47:292: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   47 |     wl_status_t begin(const char* wpa2_ssid, wpa2_auth_method_t method, const char* wpa2_identity=NULL, const char* wpa2_username=NULL, const char *wpa2_password=NULL, const char* ca_pem=NULL, const char* client_crt=NULL, const char* client_key=NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true);
      |                                                                                                                                                                                                                                                                                                    ^
      |                                                                                                                                                                                                                                                                                                    nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:48:5: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   48 |     wl_status_t begin(const String& wpa2_ssid, wpa2_auth_method_t method, const String& wpa2_identity = (const char*)NULL, const String& wpa2_username = (const char*)NULL, const String& wpa2_password = (const char*)NULL, const String& ca_pem = (const char*)NULL, const String& client_crt = (const char*)NULL, const String& client_key = (const char*)NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true) {
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:48:118: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   48 |     wl_status_t begin(const String& wpa2_ssid, wpa2_auth_method_t method, const String& wpa2_identity = (const char*)NULL, const String& wpa2_username = (const char*)NULL, const String& wpa2_password = (const char*)NULL, const String& ca_pem = (const char*)NULL, const String& client_crt = (const char*)NULL, const String& client_key = (const char*)NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true) {
      |                                                                                                                      ^~~~
      |                                                                                                                      nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:48:167: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   48 |     wl_status_t begin(const String& wpa2_ssid, wpa2_auth_method_t method, const String& wpa2_identity = (const char*)NULL, const String& wpa2_username = (const char*)NULL, const String& wpa2_password = (const char*)NULL, const String& ca_pem = (const char*)NULL, const String& client_crt = (const char*)NULL, const String& client_key = (const char*)NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true) {
      |                                                                                                                                                                       ^~~~
      |                                                                                                                                                                       nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:48:216: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   48 |     wl_status_t begin(const String& wpa2_ssid, wpa2_auth_method_t method, const String& wpa2_identity = (const char*)NULL, const String& wpa2_username = (const char*)NULL, const String& wpa2_password = (const char*)NULL, const String& ca_pem = (const char*)NULL, const String& client_crt = (const char*)NULL, const String& client_key = (const char*)NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true) {
      |                                                                                                                                                                                                                        ^~~~
      |                                                                                                                                                                                                                        nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:48:258: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   48 |     wl_status_t begin(const String& wpa2_ssid, wpa2_auth_method_t method, const String& wpa2_identity = (const char*)NULL, const String& wpa2_username = (const char*)NULL, const String& wpa2_password = (const char*)NULL, const String& ca_pem = (const char*)NULL, const String& client_crt = (const char*)NULL, const String& client_key = (const char*)NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true) {
      |                                                                                                                                                                                                                                                                  ^~~~
      |                                                                                                                                                                                                                                                                  nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:48:304: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   48 |     wl_status_t begin(const String& wpa2_ssid, wpa2_auth_method_t method, const String& wpa2_identity = (const char*)NULL, const String& wpa2_username = (const char*)NULL, const String& wpa2_password = (const char*)NULL, const String& ca_pem = (const char*)NULL, const String& client_crt = (const char*)NULL, const String& client_key = (const char*)NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true) {
      |                                                                                                                                                                                                                                                                                                                ^~~~
      |                                                                                                                                                                                                                                                                                                                nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:48:350: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   48 |     wl_status_t begin(const String& wpa2_ssid, wpa2_auth_method_t method, const String& wpa2_identity = (const char*)NULL, const String& wpa2_username = (const char*)NULL, const String& wpa2_password = (const char*)NULL, const String& ca_pem = (const char*)NULL, const String& client_crt = (const char*)NULL, const String& client_key = (const char*)NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true) {
      |                                                                                                                                                                                                                                                                                                                                                              ^~~~
      |                                                                                                                                                                                                                                                                                                                                                              nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:48:396: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   48 |     wl_status_t begin(const String& wpa2_ssid, wpa2_auth_method_t method, const String& wpa2_identity = (const char*)NULL, const String& wpa2_username = (const char*)NULL, const String& wpa2_password = (const char*)NULL, const String& ca_pem = (const char*)NULL, const String& client_crt = (const char*)NULL, const String& client_key = (const char*)NULL, int32_t channel=0, const uint8_t* bssid=0, bool connect=true) {
      |                                                                                                                                                                                                                                                                                                                                                                                                            ^
      |                                                                                                                                                                                                                                                                                                                                                                                                            nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:51:66: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   51 |     wl_status_t begin(const char* ssid, const char *passphrase = NULL, int32_t channel = 0, const uint8_t* bssid = NULL, bool connect = true);
      |                                                                  ^~~~
      |                                                                  nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:51:116: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   51 |     wl_status_t begin(const char* ssid, const char *passphrase = NULL, int32_t channel = 0, const uint8_t* bssid = NULL, bool connect = true);
      |                                                                                                                    ^~~~
      |                                                                                                                    nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:52:5: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   52 |     wl_status_t begin(const String& ssid, const String& passphrase = (const char*)NULL, int32_t channel = 0, const uint8_t* bssid = NULL, bool connect = true) {
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:52:83: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   52 |     wl_status_t begin(const String& ssid, const String& passphrase = (const char*)NULL, int32_t channel = 0, const uint8_t* bssid = NULL, bool connect = true) {
      |                                                                                   ^~~~
      |                                                                                   nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:52:133: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   52 |     wl_status_t begin(const String& ssid, const String& passphrase = (const char*)NULL, int32_t channel = 0, const uint8_t* bssid = NULL, bool connect = true) {
      |                                                                                                                                     ^~~~
      |                                                                                                                                     nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:55:54: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   55 |     wl_status_t begin(char* ssid, char *passphrase = NULL, int32_t channel = 0, const uint8_t* bssid = NULL, bool connect = true);
      |                                                      ^~~~
      |                                                      nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:55:104: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
   55 |     wl_status_t begin(char* ssid, char *passphrase = NULL, int32_t channel = 0, const uint8_t* bssid = NULL, bool connect = true);
      |                                                                                                        ^~~~
      |                                                                                                        nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:62:18: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   62 |     bool eraseAP(void);
      |                  ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiSTA.h:116:89: warning: use nullptr [hicpp-use-nullptr,modernize-use-nullptr]
  116 |     bool beginSmartConfig(smartconfig_type_t type = SC_TYPE_ESPTOUCH, char* crypt_key = NULL);
      |                                                                                         ^~~~
      |                                                                                         nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiScan.h:48:5: warning: 'getScanInfoByIndex' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   48 |     static void * getScanInfoByIndex(int i) { return _getScanInfoByIndex(i); }; 
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiScan.h:48:42: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
   48 |     static void * getScanInfoByIndex(int i) { return _getScanInfoByIndex(i); }; 
      |                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiScan.h:48:54: warning: '_getScanInfoByIndex' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   48 |     static void * getScanInfoByIndex(int i) { return _getScanInfoByIndex(i); }; 
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiScan.h:61:19: note: resolves to this declaration
   61 |     static void * _getScanInfoByIndex(int i);
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiScan.h:61:43: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
   61 |     static void * _getScanInfoByIndex(int i);
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:20:9: warning: declaration uses identifier '_WIFISERVER_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   20 | #define _WIFISERVER_H_
      |         ^~~~~~~~~~~~~~
      |         WIFISERVER_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:27:7: warning: class 'WiFiServer' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   27 | class WiFiServer : public Server {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:38:5: warning: 'listenOnLocalhost' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   38 |     void listenOnLocalhost(){}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:41:5: warning: constructors that are callable with a single argument must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   41 |     WiFiServer(uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:41:5: warning: 'WiFiServer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   41 |     WiFiServer(uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:41:68: warning: member initializer for '_accepted_sockfd' is redundant [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   41 |     WiFiServer(uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |                                                                    ^~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:41:89: warning: initializer for member '_addr' is redundant [readability-redundant-member-init]
   41 |     WiFiServer(uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |                                                                                         ^~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:41:153: warning: member initializer for '_noDelay' is redundant [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   41 |     WiFiServer(uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |                                                                                                                                                         ^~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:42:7: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
   42 |       log_v("WiFiServer::WiFiServer(port=%d, ...)", port);
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-log.h:104:29: note: expanded from macro 'log_v'
  104 | #define log_v(format, ...)  do {} while(0)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:44:5: warning: constructors that are callable with a single argument must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   44 |     WiFiServer(const IPAddress& addr, uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(addr),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:44:5: warning: 'WiFiServer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   44 |     WiFiServer(const IPAddress& addr, uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(addr),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:44:91: warning: member initializer for '_accepted_sockfd' is redundant [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   44 |     WiFiServer(const IPAddress& addr, uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(addr),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |                                                                                           ^~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:44:180: warning: member initializer for '_noDelay' is redundant [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   44 |     WiFiServer(const IPAddress& addr, uint16_t port=80, uint8_t max_clients=4):sockfd(-1),_accepted_sockfd(-1),_addr(addr),_port(port),_max_clients(max_clients),_listening(false),_noDelay(false) {
      |                                                                                                                                                                                    ^~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:45:7: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
   45 |       log_v("WiFiServer::WiFiServer(addr=%s, port=%d, ...)", addr.toString().c_str(), port);
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-log.h:104:29: note: expanded from macro 'log_v'
  104 | #define log_v(format, ...)  do {} while(0)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:47:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   47 |     ~WiFiServer(){ end();}
      |     ^            
      |                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:47:5: warning: '~WiFiServer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   47 |     ~WiFiServer(){ end();}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:49:5: warning: 'accept' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   49 |     WiFiClient accept(){return available();}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:50:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   50 |     void begin(uint16_t port=0);
      |          ^                     
      |                                 override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:55:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   55 |     size_t write(const uint8_t *data, size_t len);
      |            ^                                     
      |                                                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:56:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   56 |     size_t write(uint8_t data){
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:56:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   56 |     size_t write(uint8_t data){
      |            ^                  
      |                                override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:64:5: warning: 'operator bool' must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   64 |     operator bool(){return _listening;}
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:64:5: warning: 'operator bool' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   64 |     operator bool(){return _listening;}
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiServer.h:64:5: warning: method 'operator bool' can be made const [readability-make-member-function-const]
   64 |     operator bool(){return _listening;}
      |     ^              
      |                     const
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiType.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   42 | typedef enum {
      | ^~~~~~~~~~~~~~
   43 |     WL_NO_SHIELD        = 255,   // for compatibility with WiFi Shield library
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     WL_IDLE_STATUS      = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   45 |     WL_NO_SSID_AVAIL    = 1,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   46 |     WL_SCAN_COMPLETED   = 2,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   47 |     WL_CONNECTED        = 3,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   48 |     WL_CONNECT_FAILED   = 4,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   49 |     WL_CONNECTION_LOST  = 5,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     WL_DISCONNECTED     = 6
      |     ~~~~~~~~~~~~~~~~~~~~~~~
   51 | } wl_status_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiType.h:42:9: warning: enum 'wl_status_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   42 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:36:9: warning: declaration uses identifier '_WIFIUDP_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   36 | #define _WIFIUDP_H_
      |         ^~~~~~~~~~~
      |         WIFIUDP_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:42:7: warning: class 'WiFiUDP' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   42 | class WiFiUDP : public UDP {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:54:3: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   54 |   ~WiFiUDP();
      |   ^         
      |              override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:55:27: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
   55 |   uint8_t begin(IPAddress a, uint16_t p);
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:55:39: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   55 |   uint8_t begin(IPAddress a, uint16_t p);
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:56:11: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   56 |   uint8_t begin(uint16_t p);
      |           ^                
      |                             override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:56:26: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   56 |   uint8_t begin(uint16_t p);
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:57:11: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   57 |   uint8_t beginMulticast(IPAddress a, uint16_t p);
      |           ^                                      
      |                                                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:57:36: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
   57 |   uint8_t beginMulticast(IPAddress a, uint16_t p);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:57:48: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   57 |   uint8_t beginMulticast(IPAddress a, uint16_t p);
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:58:8: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   58 |   void stop();
      |        ^     
      |               override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:61:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   61 |   int beginPacket(IPAddress ip, uint16_t port);
      |       ^                                       
      |                                                override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:61:29: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   61 |   int beginPacket(IPAddress ip, uint16_t port);
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:62:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   62 |   int beginPacket(const char *host, uint16_t port);
      |       ^                                           
      |                                                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:63:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   63 |   int endPacket();
      |       ^          
      |                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:64:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   64 |   size_t write(uint8_t);
      |          ^             
      |                         override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:64:23: warning: all parameters should be named in a function [hicpp-named-parameter]
   64 |   size_t write(uint8_t);
      |                       ^
      |                        /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:65:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   65 |   size_t write(const uint8_t *buffer, size_t size);
      |          ^                                        
      |                                                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:66:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   66 |   int parsePacket();
      |       ^            
      |                     override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:67:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   67 |   int available();
      |       ^          
      |                   override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:68:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   68 |   int read();
      |       ^     
      |              override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:69:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   69 |   int read(unsigned char* buffer, size_t len);
      |       ^                                      
      |                                               override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:70:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   70 |   int read(char* buffer, size_t len);
      |       ^                             
      |                                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:71:7: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   71 |   int peek();
      |       ^     
      |              override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:72:8: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   72 |   void flush();
      |        ^      
      |                override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:73:13: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   73 |   IPAddress remoteIP();
      |             ^         
      |                        override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\WiFi\src\WiFiUdp.h:74:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   74 |   uint16_t remotePort();
      |            ^           
      |                         override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:45:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   45 | typedef void(*user_onRequest)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using user_onRequest = void(*)(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:45:31: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
   45 | typedef void(*user_onRequest)(void);
      |                               ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   46 | typedef void(*user_onReceive)(uint8_t*, int);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using user_onReceive = void(*)(uint8_t*, int)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:48:7: warning: class 'TwoWire' defines a destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   48 | class TwoWire: public Stream
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:51:13: warning: member variable 'num' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   51 |     uint8_t num;
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:52:12: warning: member variable 'sda' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   52 |     int8_t sda;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:53:12: warning: member variable 'scl' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   53 |     int8_t scl;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:55:12: warning: member variable 'bufferSize' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   55 |     size_t bufferSize;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:56:14: warning: member variable 'rxBuffer' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   56 |     uint8_t *rxBuffer;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:57:12: warning: member variable 'rxIndex' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   57 |     size_t rxIndex;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:58:12: warning: member variable 'rxLength' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   58 |     size_t rxLength;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:60:14: warning: member variable 'txBuffer' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   60 |     uint8_t *txBuffer;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:61:12: warning: member variable 'txLength' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   61 |     size_t txLength;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:62:14: warning: member variable 'txAddress' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   62 |     uint16_t txAddress;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:64:14: warning: member variable '_timeOutMillis' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   64 |     uint32_t _timeOutMillis;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:65:10: warning: member variable 'nonStop' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   65 |     bool nonStop;
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:67:18: warning: member variable 'nonStopTask' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   67 |     TaskHandle_t nonStopTask;
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:68:23: warning: member variable 'lock' has protected visibility [cppcoreguidelines-non-private-member-variables-in-classes,misc-non-private-member-variables-in-classes]
   68 |     SemaphoreHandle_t lock;
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:72:28: warning: redundant void argument list in field declaration [modernize-redundant-void-arg]
   72 |     void (*user_onRequest)(void);
      |                            ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:77:29: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   77 |     bool allocateWireBuffer(void);
      |                             ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:78:25: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
   78 |     void freeWireBuffer(void);
      |                         ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:81:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   81 |     TwoWire(uint8_t bus_num);
      |     ^
      |     explicit 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:82:5: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
   82 |     ~TwoWire();
      |     ^         
      |                override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:90:5: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   90 |     inline bool begin()
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:90:5: warning: function 'begin' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   90 |     inline bool begin()
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:94:5: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   94 |     inline bool begin(uint8_t addr)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:94:5: warning: function 'begin' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   94 |     inline bool begin(uint8_t addr)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:98:5: warning: 'begin' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   98 |     inline bool begin(int addr)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:98:5: warning: function 'begin' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
   98 |     inline bool begin(int addr)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:117:29: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  117 |     uint8_t endTransmission(void);
      |                             ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:129:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  129 |     size_t write(uint8_t);
      |            ^             
      |                           override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:129:25: warning: all parameters should be named in a function [hicpp-named-parameter]
  129 |     size_t write(uint8_t);
      |                         ^
      |                          /*unused*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:130:12: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  130 |     size_t write(const uint8_t *, size_t);
      |            ^                             
      |                                           override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:130:33: warning: all parameters should be named in a function [hicpp-named-parameter]
  130 |     size_t write(const uint8_t *, size_t);
      |                                 ^       
      |                                  /*buffer*/  /*size*/
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:131:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  131 |     int available(void);
      |         ^              
      |                         override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:131:19: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  131 |     int available(void);
      |                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:132:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  132 |     int read(void);
      |         ^         
      |                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:132:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  132 |     int read(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:133:9: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  133 |     int peek(void);
      |         ^         
      |                    override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:133:14: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  133 |     int peek(void);
      |              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:134:10: warning: annotate this function with 'override' or (rarely) 'final' [cppcoreguidelines-explicit-virtual-functions,hicpp-use-override,modernize-use-override]
  134 |     void flush(void);
      |          ^          
      |                      override
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:134:16: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  134 |     void flush(void);
      |                ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:136:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  136 |     inline size_t write(const char * s)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:136:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  136 |     inline size_t write(const char * s)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:136:38: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  136 |     inline size_t write(const char * s)
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:138:22: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  138 |         return write((uint8_t*) s, strlen(s));
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:140:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  140 |     inline size_t write(unsigned long n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:140:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  140 |     inline size_t write(unsigned long n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:144:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  144 |     inline size_t write(long n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:144:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  144 |     inline size_t write(long n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:148:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  148 |     inline size_t write(unsigned int n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:148:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  148 |     inline size_t write(unsigned int n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:152:5: warning: 'write' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  152 |     inline size_t write(int n)
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:152:5: warning: function 'write' has inline specifier but is implicitly inlined [readability-redundant-inline-specifier]
  152 |     inline size_t write(int n)
      |     ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:158:30: warning: redundant void argument list in variable declaration [modernize-redundant-void-arg]
  158 |     void onRequest( void (*)(void) );
      |                              ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:162:16: warning: variable 'Wire' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  162 | extern TwoWire Wire;
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\Wire\src\Wire.h:163:16: warning: variable 'Wire1' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  163 | extern TwoWire Wire1;
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:35:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   35 | typedef enum {
      | ^~~~~~~~~~~~~~
   36 |     ADC1_CHANNEL_0 = 0, /*!< ADC1 channel 0 is GPIO1  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     ADC1_CHANNEL_1,     /*!< ADC1 channel 1 is GPIO2  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     ADC1_CHANNEL_2,     /*!< ADC1 channel 2 is GPIO3  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     ADC1_CHANNEL_3,     /*!< ADC1 channel 3 is GPIO4  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     ADC1_CHANNEL_4,     /*!< ADC1 channel 4 is GPIO5  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     ADC1_CHANNEL_5,     /*!< ADC1 channel 5 is GPIO6  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |     ADC1_CHANNEL_6,     /*!< ADC1 channel 6 is GPIO7  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     ADC1_CHANNEL_7,     /*!< ADC1 channel 7 is GPIO8  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     ADC1_CHANNEL_8,     /*!< ADC1 channel 8 is GPIO9  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 |     ADC1_CHANNEL_9,     /*!< ADC1 channel 9 is GPIO10 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   46 |     ADC1_CHANNEL_MAX,
      |     ~~~~~~~~~~~~~~~~~
   47 | } adc1_channel_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:35:9: warning: enum 'adc1_channel_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   35 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   62 | typedef enum {
      | ^~~~~~~~~~~~~~
   63 |     ADC2_CHANNEL_0 = 0, /*!< ADC2 channel 0 is GPIO4  (ESP32), GPIO11 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |     ADC2_CHANNEL_1,     /*!< ADC2 channel 1 is GPIO0  (ESP32), GPIO12 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   65 |     ADC2_CHANNEL_2,     /*!< ADC2 channel 2 is GPIO2  (ESP32), GPIO13 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   66 |     ADC2_CHANNEL_3,     /*!< ADC2 channel 3 is GPIO15 (ESP32), GPIO14 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   67 |     ADC2_CHANNEL_4,     /*!< ADC2 channel 4 is GPIO13 (ESP32), GPIO15 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   68 |     ADC2_CHANNEL_5,     /*!< ADC2 channel 5 is GPIO12 (ESP32), GPIO16 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   69 |     ADC2_CHANNEL_6,     /*!< ADC2 channel 6 is GPIO14 (ESP32), GPIO17 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   70 |     ADC2_CHANNEL_7,     /*!< ADC2 channel 7 is GPIO27 (ESP32), GPIO18 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |     ADC2_CHANNEL_8,     /*!< ADC2 channel 8 is GPIO25 (ESP32), GPIO19 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     ADC2_CHANNEL_9,     /*!< ADC2 channel 9 is GPIO26 (ESP32), GPIO20 (ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     ADC2_CHANNEL_MAX,
      |     ~~~~~~~~~~~~~~~~~
   74 | } adc2_channel_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:62:9: warning: enum 'adc2_channel_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   62 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:111:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  111 | typedef enum {
      | ^~~~~~~~~~~~~~
  112 |     ADC_ENCODE_12BIT,        /*!< ADC to DMA data format,          , [15:12]-channel [11:0]-12 bits ADC data */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  113 |     ADC_ENCODE_11BIT,        /*!< ADC to DMA data format, [15]-unit, [14:11]-channel [10:0]-11 bits ADC data */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  114 |     ADC_ENCODE_MAX,
      |     ~~~~~~~~~~~~~~~
  115 | } adc_i2s_encode_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:111:9: warning: enum 'adc_i2s_encode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  111 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:428:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  428 | typedef struct adc_digi_init_config_s {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  429 |     uint32_t max_store_buf_size;    ///< Max length of the converted data that driver can store before they are processed.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  430 |     uint32_t conv_num_each_intr;    ///< Bytes of data that can be converted in 1 interrupt.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  431 |     uint32_t adc1_chan_mask;        ///< Channel list of ADC1 to be initialized.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  432 |     uint32_t adc2_chan_mask;        ///< Channel list of ADC2 to be initialized.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  433 | } adc_digi_init_config_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/adc.h:438:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  438 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  439 |     bool conv_limit_en;                      ///< To limit ADC conversion times. Conversion stops after finishing `conv_limit_num` times conversion
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  440 |     uint32_t conv_limit_num;                 ///< Set the upper limit of the number of ADC conversion triggers. Range: 1 ~ 255.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  441 |     uint32_t pattern_num;                    ///< Number of ADC channels that will be used
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  442 |     adc_digi_pattern_config_t *adc_pattern;    ///< List of configs for each ADC channel that will be used
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  443 |     uint32_t sample_freq_hz;  /*!< The expected ADC sampling frequency in Hz. Range: 611Hz ~ 83333Hz
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  444 |                                    Fs = Fd / interval / 2
      |                                    ~~~~~~~~~~~~~~~~~~~~~~
  445 |                                    Fs: sampling frequency;
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~
  446 |                                    Fd: digital controller frequency, no larger than 5M for better performance
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  447 |                                    interval: interval between 2 measurement trigger signal, the smallest interval should not be smaller than the ADC measurement period, the largest interval should not be larger than 4095 */
      |                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  448 |     adc_digi_convert_mode_t conv_mode;      ///< ADC DMA conversion mode, see `adc_digi_convert_mode_t`.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  449 |     adc_digi_output_format_t format;        ///< ADC DMA conversion output format, see `adc_digi_output_format_t`.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  450 | } adc_digi_configuration_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/gpio.h:54:50: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   54 | #define GPIO_IS_VALID_DIGITAL_IO_PAD(gpio_num) ((gpio_num >= 0) && \
      |                                                  ^
      |                                                  (       )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/gpio.h:57:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   57 | typedef intr_handle_t gpio_isr_handle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using gpio_isr_handle_t = intr_handle_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\driver\include\driver/gpio.h:234:36: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  234 | esp_err_t gpio_isr_register(void (*fn)(void *), void *arg, int intr_alloc_flags, gpio_isr_handle_t *handle);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_adc_cal\include\esp_adc_cal.h:8:9: warning: declaration uses identifier '__ESP_ADC_CAL_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define __ESP_ADC_CAL_H__
      |         ^~~~~~~~~~~~~~~~~
      |         ESP_ADC_CAL_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_adc_cal\include\esp_adc_cal.h:21:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   21 | typedef enum {
      | ^~~~~~~~~~~~~~
   22 |     ESP_ADC_CAL_VAL_EFUSE_VREF = 0,         /**< Characterization based on reference voltage stored in eFuse*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   23 |     ESP_ADC_CAL_VAL_EFUSE_TP = 1,           /**< Characterization based on Two Point values stored in eFuse*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   24 |     ESP_ADC_CAL_VAL_DEFAULT_VREF = 2,       /**< Characterization based on default reference voltage*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   25 |     ESP_ADC_CAL_VAL_EFUSE_TP_FIT = 3,       /**< Characterization based on Two Point values and fitting curve coefficients stored in eFuse */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   26 |     ESP_ADC_CAL_VAL_MAX,
      |     ~~~~~~~~~~~~~~~~~~~~
   27 |     ESP_ADC_CAL_VAL_NOT_SUPPORTED = ESP_ADC_CAL_VAL_MAX,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   28 | } esp_adc_cal_value_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_adc_cal\include\esp_adc_cal.h:21:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   21 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_adc_cal\include\esp_adc_cal.h:21:9: warning: enum 'esp_adc_cal_value_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_adc_cal\include\esp_adc_cal.h:35:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   35 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   36 |     adc_unit_t adc_num;                     /**< ADC number*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     adc_atten_t atten;                      /**< ADC attenuation*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     adc_bits_width_t bit_width;             /**< ADC bit width */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     uint32_t coeff_a;                       /**< Gradient of ADC-Voltage curve*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     uint32_t coeff_b;                       /**< Offset of ADC-Voltage curve*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     uint32_t vref;                          /**< Vref used by lookup table*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |     const uint32_t *low_curve;              /**< Pointer to low Vref curve of lookup table (NULL if unused)*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     const uint32_t *high_curve;             /**< Pointer to high Vref curve of lookup table (NULL if unused)*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     uint8_t version;                        /**< ADC Calibration */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 | } esp_adc_cal_characteristics_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_assert.h:15:9: warning: declaration uses identifier '__ESP_ASSERT_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define __ESP_ASSERT_H__
      |         ^~~~~~~~~~~~~~~~
      |         ESP_ASSERT_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:8:9: warning: declaration uses identifier '__ESP_ATTR_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define __ESP_ATTR_H__
      |         ^~~~~~~~~~~~~~
      |         ESP_ATTR_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:89:9: warning: declaration uses identifier '__NOINIT_ATTR', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   89 | #define __NOINIT_ATTR _SECTION_ATTR_IMPL(".noinit", __COUNTER__)
      |         ^~~~~~~~~~~~~
      |         NOINIT_ATTR
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:124:29: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  124 | FORCE_INLINE_ATTR constexpr TYPE operator~ (TYPE a) { return (TYPE)~(INT_TYPE)a; } \
      |                             ^
      |                             (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:125:29: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  125 | FORCE_INLINE_ATTR constexpr TYPE operator| (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a | (INT_TYPE)b); } \
      |                             ^
      |                             (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:126:29: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  126 | FORCE_INLINE_ATTR constexpr TYPE operator& (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a & (INT_TYPE)b); } \
      |                             ^
      |                             (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:127:29: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  127 | FORCE_INLINE_ATTR constexpr TYPE operator^ (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a ^ (INT_TYPE)b); } \
      |                             ^
      |                             (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:128:29: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  128 | FORCE_INLINE_ATTR constexpr TYPE operator>> (TYPE a, int b) { return (TYPE)((INT_TYPE)a >> b); } \
      |                             ^
      |                             (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:129:29: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  129 | FORCE_INLINE_ATTR constexpr TYPE operator<< (TYPE a, int b) { return (TYPE)((INT_TYPE)a << b); } \
      |                             ^
      |                             (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:130:36: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  130 | FORCE_INLINE_ATTR TYPE& operator|=(TYPE& a, TYPE b) { a = a | b; return a; } \
      |                                    ^   
      |                                    (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:131:36: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  131 | FORCE_INLINE_ATTR TYPE& operator&=(TYPE& a, TYPE b) { a = a & b; return a; } \
      |                                    ^   
      |                                    (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:132:36: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  132 | FORCE_INLINE_ATTR TYPE& operator^=(TYPE& a, TYPE b) { a = a ^ b; return a; } \
      |                                    ^   
      |                                    (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:133:37: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  133 | FORCE_INLINE_ATTR TYPE& operator>>=(TYPE& a, int b) { a = a >> b; return a; } \
      |                                     ^   
      |                                     (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:134:23: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  123 | #define FLAG_ATTR_IMPL(TYPE, INT_TYPE) \
      |                                        (
  124 | FORCE_INLINE_ATTR constexpr TYPE operator~ (TYPE a) { return (TYPE)~(INT_TYPE)a; } \
  125 | FORCE_INLINE_ATTR constexpr TYPE operator| (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a | (INT_TYPE)b); } \
  126 | FORCE_INLINE_ATTR constexpr TYPE operator& (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a & (INT_TYPE)b); } \
  127 | FORCE_INLINE_ATTR constexpr TYPE operator^ (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a ^ (INT_TYPE)b); } \
  128 | FORCE_INLINE_ATTR constexpr TYPE operator>> (TYPE a, int b) { return (TYPE)((INT_TYPE)a >> b); } \
  129 | FORCE_INLINE_ATTR constexpr TYPE operator<< (TYPE a, int b) { return (TYPE)((INT_TYPE)a << b); } \
  130 | FORCE_INLINE_ATTR TYPE& operator|=(TYPE& a, TYPE b) { a = a | b; return a; } \
  131 | FORCE_INLINE_ATTR TYPE& operator&=(TYPE& a, TYPE b) { a = a & b; return a; } \
  132 | FORCE_INLINE_ATTR TYPE& operator^=(TYPE& a, TYPE b) { a = a ^ b; return a; } \
  133 | FORCE_INLINE_ATTR TYPE& operator>>=(TYPE& a, int b) { a = a >> b; return a; } \
  134 | FORCE_INLINE_ATTR TYPE& operator<<=(TYPE& a, int b) { a = a << b; return a; }
      |                       ^                                                      
      |                                                                              )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:134:37: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  134 | FORCE_INLINE_ATTR TYPE& operator<<=(TYPE& a, int b) { a = a << b; return a; }
      |                                     ^   
      |                                     (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_compiler.h:15:9: warning: declaration uses identifier '__ESP_COMPILER_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define __ESP_COMPILER_H
      |         ^~~~~~~~~~~~~~~~
      |         ESP_COMPILER_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_compiler.h:52:85: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   52 | #define ESP_COMPILER_DESIGNATED_INIT_AGGREGATE_TYPE_STR(member, value)  { .member = value },
      |                                                                                     ^
      |                                                                                     (    )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_err.h:10:1: warning: system include stdio.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_err.h [llvmlibc-restrict-system-libc-headers]
   10 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   11 | #include <assert.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_err.h:18:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   18 | typedef int esp_err_t;
      | ^~~~~~~~~~~~~~~~~~~~~
      | using esp_err_t = int
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_err.h:22:25: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   22 | #define ESP_FAIL        -1      /*!< Generic esp_err_t code indicating failure */
      |                         ^
      |                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_err.h:78:40: warning: parameter name 'rc' is too short, expected at least 3 characters [readability-identifier-length]
   78 | void _esp_error_check_failed(esp_err_t rc, const char *file, int line, const char *function, const char *expression) __attribute__((noreturn));
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_err.h:81:54: warning: parameter name 'rc' is too short, expected at least 3 characters [readability-identifier-length]
   81 | void _esp_error_check_failed_without_abort(esp_err_t rc, const char *file, int line, const char *function, const char *expression);
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_idf_version.h:33:52: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   33 | #define ESP_IDF_VERSION_VAL(major, minor, patch) ((major << 16) | (minor << 8) | (patch))
      |                                                    ^
      |                                                    (    )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_idf_version.h:33:68: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   33 | #define ESP_IDF_VERSION_VAL(major, minor, patch) ((major << 16) | (minor << 8) | (patch))
      |                                                                    ^
      |                                                                    (    )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_types.h:16:9: warning: declaration uses identifier '__ESP_TYPES_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define __ESP_TYPES_H__
      |         ^~~~~~~~~~~~~~~
      |         ESP_TYPES_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   28 | typedef void *esp_eth_handle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_eth_handle_t = void *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth.h:34:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   34 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   35 |     /**
      |     ~~~
   36 |     * @brief Ethernet MAC object
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     *
      |     ~
   38 |     */
      |     ~~
   39 |     esp_eth_mac_t *mac;
      |     ~~~~~~~~~~~~~~~~~~~
   40 | 
   41 |     /**
      |     ~~~
   42 |     * @brief Ethernet PHY object
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     *
      |     ~
   44 |     */
      |     ~~
   45 |     esp_eth_phy_t *phy;
      |     ~~~~~~~~~~~~~~~~~~~
   46 | 
   47 |     /**
      |     ~~~
   48 |     * @brief Period time of checking Ethernet link status
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |     *
      |     ~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth.h:138:16: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  138 |         .mac = emac,                     \
      |                ^   
      |                (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth.h:139:16: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  139 |         .phy = ephy,                     \
      |                ^   
      |                (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_com.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   70 | typedef enum {
      | ^~~~~~~~~~~~~~
   71 |     ETH_STATE_LLINIT, /*!< Lowlevel init done */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     ETH_STATE_DEINIT, /*!< Deinit done */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     ETH_STATE_LINK,   /*!< Link status changed */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   74 |     ETH_STATE_SPEED,  /*!< Speed updated */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |     ETH_STATE_DUPLEX, /*!< Duplex updated */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |     ETH_STATE_PAUSE,  /*!< Pause ability updated */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 | } esp_eth_state_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_com.h:70:9: warning: enum 'esp_eth_state_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   70 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_com.h:83:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   83 | typedef enum {
      | ^~~~~~~~~~~~~~
   84 |     ETH_CMD_G_MAC_ADDR,    /*!< Get MAC address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   85 |     ETH_CMD_S_MAC_ADDR,    /*!< Set MAC address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   86 |     ETH_CMD_G_PHY_ADDR,    /*!< Get PHY address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   87 |     ETH_CMD_S_PHY_ADDR,    /*!< Set PHY address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   88 |     ETH_CMD_G_SPEED,       /*!< Get Speed */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |     ETH_CMD_S_PROMISCUOUS, /*!< Set promiscuous mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |     ETH_CMD_S_FLOW_CTRL,   /*!< Set flow control */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   91 |     ETH_CMD_G_DUPLEX_MODE, /*!< Get Duplex mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   92 |     ETH_CMD_S_PHY_LOOPBACK,/*!< Set PHY loopback */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   93 | } esp_eth_io_cmd_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_com.h:83:9: warning: enum 'esp_eth_io_cmd_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   83 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_com.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   99 | typedef struct esp_eth_mediator_s esp_eth_mediator_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_eth_mediator_t = struct esp_eth_mediator_s
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_com.h:168:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  168 | typedef enum {
      | ^~~~~~~~~~~~~~
  169 |     ETHERNET_EVENT_START,        /*!< Ethernet driver start */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  170 |     ETHERNET_EVENT_STOP,         /*!< Ethernet driver stop */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  171 |     ETHERNET_EVENT_CONNECTED,    /*!< Ethernet got a valid link */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  172 |     ETHERNET_EVENT_DISCONNECTED, /*!< Ethernet lost a valid link */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  173 | } eth_event_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_com.h:168:9: warning: enum 'eth_event_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  168 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   28 | typedef struct esp_eth_mac_s esp_eth_mac_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_eth_mac_t = struct esp_eth_mac_s
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:294:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  294 | typedef enum {
      | ^~~~~~~~~~~~~~
  295 |     /**
      |     ~~~
  296 |      * @brief Default values configured using Kconfig are going to be used when "Default" selected.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |      *
      |      ~
  298 |      */
      |      ~~
  299 |     EMAC_CLK_DEFAULT,
      |     ~~~~~~~~~~~~~~~~~
  300 | 
  301 |     /**
      |     ~~~
  302 |      * @brief Input RMII Clock from external. EMAC Clock GPIO number needs to be configured when this option is selected.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |      *
      |      ~
  304 |      * @note MAC will get RMII clock from outside. Note that ESP32 only supports GPIO0 to input the RMII clock.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  305 |      *
      |      ~
  306 |      */
      |      ~~
  307 |     EMAC_CLK_EXT_IN,
      |     ~~~~~~~~~~~~~~~~
  308 | 
  309 |     /**
      |     ~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:294:9: warning: enum 'emac_rmii_clock_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  294 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:320:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  320 | typedef enum {
      | ^~~~~~~~~~~~~~
  321 |     /**
      |     ~~~
  322 |      * @brief MAC will get RMII clock from outside at this GPIO.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  323 |      *
      |      ~
  324 |      * @note ESP32 only supports GPIO0 to input the RMII clock.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  325 |      *
      |      ~
  326 |      */
      |      ~~
  327 |     EMAC_CLK_IN_GPIO = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~
  328 | 
  329 |     /**
      |     ~~~
  330 |      * @brief Output RMII Clock from internal APLL Clock available at GPIO0
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |      *
      |      ~
  332 |      * @note GPIO0 can be set to output a pre-divided PLL clock (test only!). Enabling this option will configure GPIO0 to output a 50MHz clock.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  333 |      * In fact this clock doesnΓÇÖt have directly relationship with EMAC peripheral. Sometimes this clock wonΓÇÖt work well with your PHY chip.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  334 |      * You might need to add some extra devices after GPIO0 (e.g. inverter). Note that outputting RMII clock on GPIO0 is an experimental practice.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  335 |      * If you want the Ethernet to work with WiFi, donΓÇÖt select GPIO0 output mode for stability.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:320:9: warning: enum 'emac_rmii_clock_gpio_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  320 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:357:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  357 | typedef union {
      | ^~~~~~~~~~~~~~~
  358 |     struct {
      |     ~~~~~~~~
  359 |         // MII interface is not fully implemented...
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         // Reserved for GPIO number, clock source, etc. in MII mode
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |     } mii; /*!< EMAC MII Clock Configuration */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     struct {
      |     ~~~~~~~~
  363 |         emac_rmii_clock_mode_t clock_mode; /*!< RMII Clock Mode Configuration */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  364 |         emac_rmii_clock_gpio_t clock_gpio; /*!< RMII Clock GPIO Configuration */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  365 |     } rmii; /*!< EMAC RMII Clock Configuration */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  366 | } eth_mac_clock_config_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:373:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  373 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  374 |     uint32_t sw_reset_timeout_ms;        /*!< Software reset timeout value (Unit: ms) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  375 |     uint32_t rx_task_stack_size;         /*!< Stack size of the receive task */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  376 |     uint32_t rx_task_prio;               /*!< Priority of the receive task */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  377 |     int smi_mdc_gpio_num;                /*!< SMI MDC GPIO number, set to -1 could bypass the SMI GPIO configuration */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  378 |     int smi_mdio_gpio_num;               /*!< SMI MDIO GPIO number, set to -1 could bypass the SMI GPIO configuration */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  379 |     uint32_t flags;                      /*!< Flags that specify extra capability for mac driver */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |     eth_data_interface_t interface;      /*!< EMAC Data interface to PHY (MII/RMII) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |     eth_mac_clock_config_t clock_config; /*!< EMAC Interface clock configuration */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 | } eth_mac_config_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:428:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  428 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  429 |     void *spi_hdl;     /*!< Handle of SPI device driver */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  430 |     int int_gpio_num;  /*!< Interrupt GPIO number */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  431 | } eth_dm9051_config_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:439:20: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  439 |         .spi_hdl = spi_device,                \
      |                    ^         
      |                    (         )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:461:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  461 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  462 |     void *spi_hdl;     /*!< Handle of SPI device driver */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  463 |     int int_gpio_num;  /*!< Interrupt GPIO number */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  464 | } eth_w5500_config_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_mac.h:472:20: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  472 |         .spi_hdl = spi_device,               \
      |                    ^         
      |                    (         )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_netif_glue.h:26:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   26 | typedef struct esp_eth_netif_glue_t* esp_eth_netif_glue_handle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_eth_netif_glue_handle_t = struct esp_eth_netif_glue_t*
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_phy.h:30:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   30 | typedef struct esp_eth_phy_s esp_eth_phy_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_eth_phy_t = struct esp_eth_phy_s
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_phy.h:206:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  206 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  207 |     int32_t phy_addr;             /*!< PHY address, set -1 to enable PHY address detection at initialization stage */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  208 |     uint32_t reset_timeout_ms;    /*!< Reset timeout value (Unit: ms) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  209 |     uint32_t autonego_timeout_ms; /*!< Auto-negotiation timeout value (Unit: ms) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  210 |     int reset_gpio_num;           /*!< Reset GPIO number, -1 means no hardware reset */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 | } eth_phy_config_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_phy.h:269:1: warning: 'esp_eth_phy_new_lan8720' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  269 | static inline esp_eth_phy_t *esp_eth_phy_new_lan8720(const eth_phy_config_t *config)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_phy.h:271:12: warning: 'esp_eth_phy_new_lan87xx' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  271 |     return esp_eth_phy_new_lan87xx(config);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_eth\include\esp_eth_phy.h:256:16: note: resolves to this declaration
  256 | esp_eth_phy_t *esp_eth_phy_new_lan87xx(const eth_phy_config_t *config);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event.h:36:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   36 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   37 |     int32_t queue_size;                         /**< size of the event loop queue */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     const char *task_name;                      /**< name of the event loop task; if NULL,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |                                                         a dedicated task is not created for event loop*/
      |                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     UBaseType_t task_priority;                  /**< priority of the event loop task, ignored if task name is NULL */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     uint32_t task_stack_size;                   /**< stack size of the event loop task, ignored if task name is NULL */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |     BaseType_t task_core_id;                    /**< core to which the event loop task is pinned to,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |                                                         ignored if task name is NULL */
      |                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 | } esp_event_loop_args_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_base.h:27:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   27 | typedef const char*  esp_event_base_t; /**< unique pointer to a subsystem that exposes events */
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_event_base_t = char*
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_base.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   28 | typedef void*        esp_event_loop_handle_t; /**< a number that identifies an event with respect to a base */
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_event_loop_handle_t = void*
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_base.h:29:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   29 | typedef void         (*esp_event_handler_t)(void* event_handler_arg,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   30 |                                         esp_event_base_t event_base,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |                                         int32_t event_id,
      |                                         ~~~~~~~~~~~~~~~~~
   32 |                                         void* event_data); /**< function called when an event is posted to the queue */
      |                                         ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_base.h:33:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   33 | typedef void*        esp_event_handler_instance_t; /**< context identifying an instance of a registered event handler */
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_event_handler_instance_t = void*
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_base.h:37:32: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   37 | #define ESP_EVENT_ANY_ID       -1               /**< register handler for any event id */
      |                                ^
      |                                ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:29:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   29 | typedef enum {
      | ^~~~~~~~~~~~~~
   30 |     SYSTEM_EVENT_WIFI_READY = 0,           /*!< ESP32 WiFi ready */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |     SYSTEM_EVENT_SCAN_DONE,                /*!< ESP32 finish scanning AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   32 |     SYSTEM_EVENT_STA_START,                /*!< ESP32 station start */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   33 |     SYSTEM_EVENT_STA_STOP,                 /*!< ESP32 station stop */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |     SYSTEM_EVENT_STA_CONNECTED,            /*!< ESP32 station connected to AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   35 |     SYSTEM_EVENT_STA_DISCONNECTED,         /*!< ESP32 station disconnected from AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   36 |     SYSTEM_EVENT_STA_AUTHMODE_CHANGE,      /*!< the auth mode of AP connected by ESP32 station changed */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     SYSTEM_EVENT_STA_GOT_IP,               /*!< ESP32 station got IP from connected AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     SYSTEM_EVENT_STA_LOST_IP,              /*!< ESP32 station lost IP and the IP is reset to 0 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     SYSTEM_EVENT_STA_BSS_RSSI_LOW,         /*!< ESP32 station connected BSS rssi goes below threshold */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     SYSTEM_EVENT_STA_WPS_ER_SUCCESS,       /*!< ESP32 station wps succeeds in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     SYSTEM_EVENT_STA_WPS_ER_FAILED,        /*!< ESP32 station wps fails in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |     SYSTEM_EVENT_STA_WPS_ER_TIMEOUT,       /*!< ESP32 station wps timeout in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     SYSTEM_EVENT_STA_WPS_ER_PIN,           /*!< ESP32 station wps pin code in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     SYSTEM_EVENT_STA_WPS_ER_PBC_OVERLAP,   /*!< ESP32 station wps overlap in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:29:9: warning: enum 'system_event_id_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   29 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:72:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   72 | typedef wifi_event_sta_wps_fail_reason_t system_event_sta_wps_fail_reason_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_sta_wps_fail_reason_t = wifi_event_sta_wps_fail_reason_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:75:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   75 | typedef wifi_event_sta_scan_done_t system_event_sta_scan_done_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_sta_scan_done_t = wifi_event_sta_scan_done_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:78:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   78 | typedef wifi_event_sta_connected_t system_event_sta_connected_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_sta_connected_t = wifi_event_sta_connected_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:81:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   81 | typedef wifi_event_sta_disconnected_t system_event_sta_disconnected_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_sta_disconnected_t = wifi_event_sta_disconnected_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   84 | typedef wifi_event_sta_authmode_change_t system_event_sta_authmode_change_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_sta_authmode_change_t = wifi_event_sta_authmode_change_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:87:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   87 | typedef wifi_event_sta_wps_er_pin_t system_event_sta_wps_er_pin_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_sta_wps_er_pin_t = wifi_event_sta_wps_er_pin_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:90:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   90 | typedef wifi_event_sta_wps_er_success_t system_event_sta_wps_er_success_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_sta_wps_er_success_t = wifi_event_sta_wps_er_success_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:93:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   93 | typedef wifi_event_ap_staconnected_t system_event_ap_staconnected_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_ap_staconnected_t = wifi_event_ap_staconnected_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:96:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   96 | typedef wifi_event_ap_stadisconnected_t system_event_ap_stadisconnected_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_ap_stadisconnected_t = wifi_event_ap_stadisconnected_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:99:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   99 | typedef wifi_event_ap_probe_req_rx_t system_event_ap_probe_req_rx_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_ap_probe_req_rx_t = wifi_event_ap_probe_req_rx_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  102 | typedef wifi_event_ftm_report_t system_event_ftm_report_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_ftm_report_t = wifi_event_ftm_report_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:105:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  105 | typedef ip_event_ap_staipassigned_t system_event_ap_staipassigned_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_ap_staipassigned_t = ip_event_ap_staipassigned_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:108:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  108 | typedef ip_event_got_ip_t system_event_sta_got_ip_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_sta_got_ip_t = ip_event_got_ip_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:111:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  111 | typedef ip_event_got_ip6_t system_event_got_ip6_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_got_ip6_t = ip_event_got_ip6_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:114:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  114 | typedef union {
      | ^~~~~~~~~~~~~~~
  115 |     system_event_sta_connected_t               connected;          /*!< ESP32 station connected to AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  116 |     system_event_sta_disconnected_t            disconnected;       /*!< ESP32 station disconnected to AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  117 |     system_event_sta_scan_done_t               scan_done;          /*!< ESP32 station scan (APs) done */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  118 |     system_event_sta_authmode_change_t         auth_change;        /*!< the auth mode of AP ESP32 station connected to changed */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  119 |     system_event_sta_got_ip_t                  got_ip;             /*!< ESP32 station got IP, first time got IP or when IP is changed */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  120 |     system_event_sta_wps_er_pin_t              sta_er_pin;         /*!< ESP32 station WPS enrollee mode PIN code received */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  121 |     system_event_sta_wps_fail_reason_t         sta_er_fail_reason; /*!< ESP32 station WPS enrollee mode failed reason code received */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  122 |     system_event_sta_wps_er_success_t          sta_er_success;     /*!< ESP32 station WPS enrollee success */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  123 |     system_event_ap_staconnected_t             sta_connected;      /*!< a station connected to ESP32 soft-AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  124 |     system_event_ap_stadisconnected_t          sta_disconnected;   /*!< a station disconnected to ESP32 soft-AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  125 |     system_event_ap_probe_req_rx_t             ap_probereqrecved;  /*!< ESP32 soft-AP receive probe request packet */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  126 |     system_event_ftm_report_t                  ftm_report;         /*!< Report of FTM procedure */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  127 |     system_event_ap_staipassigned_t            ap_staipassigned;   /**< ESP32 soft-AP assign an IP to the station*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  128 |     system_event_got_ip6_t                     got_ip6;            /*!< ESP32 stationπÇÇor ap or ethernet ipv6 addr state change to preferred */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  129 | } system_event_info_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:132:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  132 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  133 |     system_event_id_t     event_id;      /*!< event ID */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  134 |     system_event_info_t   event_info;    /*!< event information */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  135 | } system_event_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:138:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  138 | typedef esp_err_t (*system_event_handler_t)(esp_event_base_t event_base,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |                                             int32_t event_id,
      |                                             ~~~~~~~~~~~~~~~~~
  140 |                                             void* event_data,
      |                                             ~~~~~~~~~~~~~~~~~
  141 |                                             size_t event_data_size,
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~
  142 |                                             TickType_t ticks_to_wait);
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:225:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  225 | typedef esp_err_t (*system_event_cb_t)(void *ctx, system_event_t *event);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using system_event_cb_t = esp_err_t (*)(void *ctx, system_event_t *event)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:241:49: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  241 | esp_err_t esp_event_loop_init(system_event_cb_t cb, void *ctx) __attribute__ ((deprecated));
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:257:59: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
  257 | system_event_cb_t esp_event_loop_set_cb(system_event_cb_t cb, void *ctx) __attribute__ ((deprecated));
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_chip_info.h:22:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   22 | typedef enum {
      | ^~~~~~~~~~~~~~
   23 |     CHIP_ESP32  = 1, //!< ESP32
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   24 |     CHIP_ESP32S2 = 2, //!< ESP32-S2
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   25 |     CHIP_ESP32S3 = 9, //!< ESP32-S3
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   26 |     CHIP_ESP32C3 = 5, //!< ESP32-C3
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   27 |     CHIP_ESP32H2 = 6, //!< ESP32-H2
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   28 | } esp_chip_model_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_chip_info.h:22:9: warning: enum 'esp_chip_model_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   22 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_chip_info.h:41:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   41 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   42 |     esp_chip_model_t model;  //!< chip model, one of esp_chip_model_t
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     uint32_t features;       //!< bit mask of CHIP_FEATURE_x feature flags
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     uint16_t full_revision;  //!< chip revision number (in format MXX; where M - wafer major version, XX - wafer minor version)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 |     uint8_t cores;           //!< number of CPU cores
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   46 |     uint8_t revision;        //!< chip revision number
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 | } esp_chip_info_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:8:9: warning: declaration uses identifier '_ESP_CPU_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define _ESP_CPU_H
      |         ^~~~~~~~~~
      |         ESP_CPU_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:24:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   24 | typedef uint32_t esp_cpu_ccount_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_cpu_ccount_t = uint32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:29:1: warning: 'esp_cpu_get_sp' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   29 | static inline void *esp_cpu_get_sp(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:29:36: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   29 | static inline void *esp_cpu_get_sp(void)
      |                                    ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:31:12: warning: 'cpu_ll_get_sp' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   31 |     return cpu_hal_get_sp();
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:34:41: note: expanded from macro 'cpu_hal_get_sp'
   34 | #define cpu_hal_get_sp()                cpu_ll_get_sp()
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:53:21: note: resolves to this declaration
   53 | static inline void *cpu_ll_get_sp(void)
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:61:1: warning: 'esp_cpu_get_ccount' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   61 | static inline esp_cpu_ccount_t esp_cpu_get_ccount(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:61:51: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   61 | static inline esp_cpu_ccount_t esp_cpu_get_ccount(void)
      |                                                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:63:12: warning: 'cpu_ll_get_cycle_count' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   63 |     return cpu_hal_get_cycle_count();
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:42:41: note: expanded from macro 'cpu_hal_get_cycle_count'
   42 | #define cpu_hal_get_cycle_count()       cpu_ll_get_cycle_count()
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:41:34: note: resolves to this declaration
   41 | static inline uint32_t IRAM_ATTR cpu_ll_get_cycle_count(void)
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:66:1: warning: 'esp_cpu_set_ccount' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   66 | static inline void esp_cpu_set_ccount(esp_cpu_ccount_t val)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:68:5: warning: 'cpu_ll_set_cycle_count' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   68 |     cpu_hal_set_cycle_count(val);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:48:44: note: expanded from macro 'cpu_hal_set_cycle_count'
   48 | #define cpu_hal_set_cycle_count(val)       cpu_ll_set_cycle_count(val)
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:48:30: note: resolves to this declaration
   48 | static inline void IRAM_ATTR cpu_ll_set_cycle_count(uint32_t val)
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:91:38: warning: parameter name 'no' is too short, expected at least 3 characters [readability-identifier-length]
   91 | esp_err_t esp_cpu_set_watchpoint(int no, void *adr, int size, int flags);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:99:35: warning: parameter name 'no' is too short, expected at least 3 characters [readability-identifier-length]
   99 | void esp_cpu_clear_watchpoint(int no);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_interface.h:9:9: warning: declaration uses identifier '__ESP_INTERFACE_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    9 | #define __ESP_INTERFACE_H__
      |         ^~~~~~~~~~~~~~~~~~~
      |         ESP_INTERFACE_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_interface.h:17:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   17 | typedef enum {
      | ^~~~~~~~~~~~~~
   18 |     ESP_IF_WIFI_STA = 0,     /**< ESP32 station interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   19 |     ESP_IF_WIFI_AP,          /**< ESP32 soft-AP interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   20 |     ESP_IF_ETH,              /**< ESP32 ethernet interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 |     ESP_IF_MAX
      |     ~~~~~~~~~~
   22 | } esp_interface_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_interface.h:17:9: warning: enum 'esp_interface_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   17 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:61:45: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   61 | #define ETS_INTERNAL_TIMER0_INTR_SOURCE     -1 ///< Platform timer 0 interrupt source
      |                                             ^
      |                                             ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:62:45: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   62 | #define ETS_INTERNAL_TIMER1_INTR_SOURCE     -2 ///< Platform timer 1 interrupt source
      |                                             ^
      |                                             ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:63:45: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   63 | #define ETS_INTERNAL_TIMER2_INTR_SOURCE     -3 ///< Platform timer 2 interrupt source
      |                                             ^
      |                                             ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:64:45: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   64 | #define ETS_INTERNAL_SW0_INTR_SOURCE        -4 ///< Software int source 1
      |                                             ^
      |                                             ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:65:45: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   65 | #define ETS_INTERNAL_SW1_INTR_SOURCE        -5 ///< Software int source 2
      |                                             ^
      |                                             ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:66:45: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   66 | #define ETS_INTERNAL_PROFILING_INTR_SOURCE  -6 ///< Int source for profiling
      |                                             ^
      |                                             ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:67:44: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   67 | #define ETS_INTERNAL_UNUSED_INTR_SOURCE    -99 ///< Interrupt is not assigned to any source
      |                                            ^
      |                                            (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:82:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   82 | typedef void (*intr_handler_t)(void *arg);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using intr_handler_t = void (*)(void *arg)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:85:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   85 | typedef struct intr_handle_data_t intr_handle_data_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using intr_handle_data_t = struct intr_handle_data_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   88 | typedef intr_handle_data_t *intr_handle_t ;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using intr_handle_t = intr_handle_data_t *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_intr_alloc.h:305:1: warning: 'esp_intr_flags_to_level' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  305 | static inline int esp_intr_flags_to_level(int flags)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_mac.h:16:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   16 | typedef enum {
      | ^~~~~~~~~~~~~~
   17 |     ESP_MAC_WIFI_STA,
      |     ~~~~~~~~~~~~~~~~~
   18 |     ESP_MAC_WIFI_SOFTAP,
      |     ~~~~~~~~~~~~~~~~~~~~
   19 |     ESP_MAC_BT,
      |     ~~~~~~~~~~~
   20 |     ESP_MAC_ETH,
      |     ~~~~~~~~~~~~
   21 |     ESP_MAC_IEEE802154,
      |     ~~~~~~~~~~~~~~~~~~~
   22 | } esp_mac_type_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_mac.h:16:9: warning: enum 'esp_mac_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   16 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:30:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   30 | typedef enum {
      | ^~~~~~~~~~~~~~
   31 |     ESP_EXT1_WAKEUP_ANY_LOW = 0,    //!< Wake the chip when any of the selected GPIOs go low
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   32 |     ESP_EXT1_WAKEUP_ANY_HIGH = 1,   //!< Wake the chip when any of the selected GPIOs go high
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   33 |     ESP_EXT1_WAKEUP_ALL_LOW __attribute__((deprecated("wakeup mode \"ALL_LOW\" is no longer supported after ESP32, \
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |     please use ESP_EXT1_WAKEUP_ANY_LOW instead"))) = ESP_EXT1_WAKEUP_ANY_LOW
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   35 | } esp_sleep_ext1_wakeup_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:30:9: warning: enum 'esp_sleep_ext1_wakeup_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   30 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   48 | typedef enum {
      | ^~~~~~~~~~~~~~
   49 |     ESP_PD_DOMAIN_RTC_PERIPH,      //!< RTC IO, sensors and ULP co-processor
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     ESP_PD_DOMAIN_RTC_SLOW_MEM,    //!< RTC slow memory
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |     ESP_PD_DOMAIN_RTC_FAST_MEM,    //!< RTC fast memory
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |     ESP_PD_DOMAIN_XTAL,            //!< XTAL oscillator
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 | #if SOC_PM_SUPPORT_CPU_PD
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |     ESP_PD_DOMAIN_CPU,             //!< CPU core
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 | #endif
      | ~~~~~~
   56 |     ESP_PD_DOMAIN_RTC8M,           //!< Internal 8M oscillator
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   57 |     ESP_PD_DOMAIN_VDDSDIO,         //!< VDD_SDIO
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   58 |     ESP_PD_DOMAIN_MAX              //!< Number of domains
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   59 | } esp_sleep_pd_domain_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:48:9: warning: enum 'esp_sleep_pd_domain_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   48 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:64:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   64 | typedef enum {
      | ^~~~~~~~~~~~~~
   65 |     ESP_PD_OPTION_OFF,      //!< Power down the power domain in sleep mode
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   66 |     ESP_PD_OPTION_ON,       //!< Keep power domain enabled during sleep mode
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   67 |     ESP_PD_OPTION_AUTO      //!< Keep power domain enabled in sleep mode, if it is needed by one of the wakeup options. Otherwise power it down.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   68 | } esp_sleep_pd_option_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:64:9: warning: enum 'esp_sleep_pd_option_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   64 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:73:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   73 | typedef enum {
      | ^~~~~~~~~~~~~~
   74 |     ESP_SLEEP_WAKEUP_UNDEFINED,    //!< In case of deep sleep, reset was not caused by exit from deep sleep
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |     ESP_SLEEP_WAKEUP_ALL,          //!< Not a wakeup cause, used to disable all wakeup sources with esp_sleep_disable_wakeup_source
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |     ESP_SLEEP_WAKEUP_EXT0,         //!< Wakeup caused by external signal using RTC_IO
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |     ESP_SLEEP_WAKEUP_EXT1,         //!< Wakeup caused by external signal using RTC_CNTL
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |     ESP_SLEEP_WAKEUP_TIMER,        //!< Wakeup caused by timer
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |     ESP_SLEEP_WAKEUP_TOUCHPAD,     //!< Wakeup caused by touchpad
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |     ESP_SLEEP_WAKEUP_ULP,          //!< Wakeup caused by ULP program
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   81 |     ESP_SLEEP_WAKEUP_GPIO,         //!< Wakeup caused by GPIO (light sleep only on ESP32, S2 and S3)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |     ESP_SLEEP_WAKEUP_UART,         //!< Wakeup caused by UART (light sleep only)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   83 |     ESP_SLEEP_WAKEUP_WIFI,              //!< Wakeup caused by WIFI (light sleep only)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   84 |     ESP_SLEEP_WAKEUP_COCPU,             //!< Wakeup caused by COCPU int
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   85 |     ESP_SLEEP_WAKEUP_COCPU_TRAP_TRIG,   //!< Wakeup caused by COCPU crash
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   86 |     ESP_SLEEP_WAKEUP_BT,           //!< Wakeup caused by BT (light sleep only)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   87 | } esp_sleep_source_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:73:9: warning: enum 'esp_sleep_source_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   73 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:90:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   90 | typedef esp_sleep_source_t esp_sleep_wakeup_cause_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_sleep_wakeup_cause_t = esp_sleep_source_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:92:1: warning: enum '(unnamed enum at C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:92:1)' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint16_t' (2 bytes) as the base type to reduce its size [performance-enum-size]
   92 | enum {
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:426:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  426 | typedef void (*esp_deep_sleep_wake_stub_fn_t)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_deep_sleep_wake_stub_fn_t = void (*)(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_sleep.h:426:47: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
  426 | typedef void (*esp_deep_sleep_wake_stub_fn_t)(void);
      |                                               ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/compare_set.h:22:1: warning: 'compare_and_set_native' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   22 | static inline void __attribute__((always_inline)) compare_and_set_native(volatile uint32_t *addr, uint32_t compare, uint32_t *set)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/compare_set.h:22:93: warning: pointer parameter 'addr' can be pointer to const [readability-non-const-parameter]
   22 | static inline void __attribute__((always_inline)) compare_and_set_native(volatile uint32_t *addr, uint32_t compare, uint32_t *set)
      |                                                                                             ^
      |                                                                          const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/compare_set.h:22:127: warning: pointer parameter 'set' can be pointer to const [readability-non-const-parameter]
   22 | static inline void __attribute__((always_inline)) compare_and_set_native(volatile uint32_t *addr, uint32_t compare, uint32_t *set)
      |                                                                                                                               ^
      |                                                                                                                     const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/compare_set.h:25:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   25 |     __asm__ __volatile__ (
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/cpu.h:8:9: warning: declaration uses identifier '_SOC_CPU_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define _SOC_CPU_H
      |         ^~~~~~~~~~
      |         SOC_CPU_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/cpu.h:33:1: warning: 'get_sp' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   33 | static inline __attribute__((deprecated)) void *get_sp(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/cpu.h:33:56: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   33 | static inline __attribute__((deprecated)) void *get_sp(void)
      |                                                        ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/cpu.h:35:12: warning: 'esp_cpu_get_sp' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   35 |     return esp_cpu_get_sp();
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\esp_cpu.h:29:21: note: resolves to this declaration
   29 | static inline void *esp_cpu_get_sp(void)
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/cpu.h:38:1: warning: 'esp_cpu_process_stack_pc' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   38 | static inline uint32_t esp_cpu_process_stack_pc(uint32_t pc)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/cpu.h:38:58: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
   38 | static inline uint32_t esp_cpu_process_stack_pc(uint32_t pc)
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/cpu.h:40:9: warning: implicit conversion 'unsigned int' -> 'bool' [readability-implicit-bool-conversion]
   40 |     if (pc & 0x80000000) {
      |         ^              
      |         (              ) != 0u
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:35:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   35 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   36 |     NEED_VOLATILE_MUX uint32_t owner;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     NEED_VOLATILE_MUX uint32_t count;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 | }spinlock_t;
      | ~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:44:1: warning: 'spinlock_initialize' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   44 | static inline void __attribute__((always_inline)) spinlock_initialize(spinlock_t *lock)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:46:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   46 |     assert(lock);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:78: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:38:61: note: expanded from macro '__FILENAME__'
   38 | #define __FILENAME__ (__builtin_strrchr( "/" __FILE__, '/') + 1)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:67:1: warning: 'spinlock_acquire' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   67 | static inline bool __attribute__((always_inline)) spinlock_acquire(spinlock_t *lock, int32_t timeout)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:70:14: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
   70 |     uint32_t result;
      |              ^     
      |                     = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:71:14: warning: variable 'irq_status' is not initialized [cppcoreguidelines-init-variables]
   71 |     uint32_t irq_status;
      |              ^         
      |                         = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:72:14: warning: variable 'ccount_start' is not initialized [cppcoreguidelines-init-variables]
   72 |     uint32_t ccount_start;
      |              ^           
      |                           = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:73:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
   73 |     uint32_t core_id, other_core_id;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:73:14: warning: variable 'core_id' is not initialized [cppcoreguidelines-init-variables]
   73 |     uint32_t core_id, other_core_id;
      |              ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:73:23: warning: variable 'other_core_id' is not initialized [cppcoreguidelines-init-variables]
   73 |     uint32_t core_id, other_core_id;
      |                       ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:75:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   75 |     assert(lock);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:78: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:38:61: note: expanded from macro '__FILENAME__'
   38 | #define __FILENAME__ (__builtin_strrchr( "/" __FILE__, '/') + 1)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:76:18: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   76 |     irq_status = XTOS_SET_INTLEVEL(XCHAL_EXCM_LEVEL);
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:92:4: note: expanded from macro 'XTOS_SET_INTLEVEL'
   92 |                         __asm__ __volatile__(   "rsil   %0, " XTSTR(intlevel) "\n" \
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:79:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   79 |         RSR(CCOUNT, ccount_start);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:11:30: note: expanded from macro 'RSR'
   11 | #define RSR(reg, at)         asm volatile ("rsr %0, %1" : "=r" (at) : "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:83:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   83 |     RSR(PRID, core_id);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:11:30: note: expanded from macro 'RSR'
   11 | #define RSR(reg, at)         asm volatile ("rsr %0, %1" : "=r" (at) : "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:88:5: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
   88 |     do {
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:99:13: warning: 'esp_ptr_external_ram' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   99 |         if (esp_ptr_external_ram(lock)) {
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:113:30: note: resolves to this declaration
  113 | inline static bool IRAM_ATTR esp_ptr_external_ram(const void *p) {
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:100:13: warning: 'compare_and_set_extram' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  100 |             compare_and_set_extram(&lock->owner, SPINLOCK_FREE, &result);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/compare_set.h:62:6: note: resolves to this declaration
   62 | void compare_and_set_extram(volatile uint32_t *addr, uint32_t compare, uint32_t *set);
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:103:9: warning: 'compare_and_set_native' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  103 |         compare_and_set_native(&lock->owner, SPINLOCK_FREE, &result);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/compare_set.h:22:51: note: resolves to this declaration
   22 | static inline void __attribute__((always_inline)) compare_and_set_native(volatile uint32_t *addr, uint32_t compare, uint32_t *set)
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:112:22: warning: variable 'ccount_now' is not initialized [cppcoreguidelines-init-variables]
  112 |             uint32_t ccount_now;
      |                      ^         
      |                                 = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:113:26: warning: 'cpu_ll_get_cycle_count' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  113 |             ccount_now = cpu_hal_get_cycle_count();
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:42:41: note: expanded from macro 'cpu_hal_get_cycle_count'
   42 | #define cpu_hal_get_cycle_count()       cpu_ll_get_cycle_count()
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:41:34: note: resolves to this declaration
   41 | static inline uint32_t IRAM_ATTR cpu_ll_get_cycle_count(void)
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:115:17: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
  115 |                 XTOS_RESTORE_INTLEVEL(irq_status);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:104:44: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  104 | # define XTOS_RESTORE_INTLEVEL(restoreval)      do{ unsigned __tmp = (restoreval); \
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:115:17: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  115 |                 XTOS_RESTORE_INTLEVEL(irq_status);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:105:4: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  105 |                         __asm__ __volatile__(   "wsr.ps %0 ; rsync\n" \
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:115:17: warning: variable '__tmp' of type 'unsigned int' can be declared 'const' [misc-const-correctness]
  115 |                 XTOS_RESTORE_INTLEVEL(irq_status);
      |                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:104:48: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  104 | # define XTOS_RESTORE_INTLEVEL(restoreval)      do{ unsigned __tmp = (restoreval); \
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:119:12: warning: converting integer literal to bool, use bool literal instead [modernize-use-bool-literals]
  119 |     }while(1);
      |            ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:119:12: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:122:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  122 |     assert(result == core_id || result == SPINLOCK_FREE);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:78: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:38:61: note: expanded from macro '__FILENAME__'
   38 | #define __FILENAME__ (__builtin_strrchr( "/" __FILE__, '/') + 1)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:122:5: warning: boolean expression can be simplified by DeMorgan's theorem [readability-simplify-boolean-expr]
  122 |     assert(result == core_id || result == SPINLOCK_FREE);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:40: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                        ^~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:123:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  123 |     assert((result == SPINLOCK_FREE) == (lock->count == 0)); /* we're first to lock iff count is zero */
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:78: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:38:61: note: expanded from macro '__FILENAME__'
   38 | #define __FILENAME__ (__builtin_strrchr( "/" __FILE__, '/') + 1)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:124:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  124 |     assert(lock->count < 0xFF); /* Bad count value implies memory corruption */
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:78: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:38:61: note: expanded from macro '__FILENAME__'
   38 | #define __FILENAME__ (__builtin_strrchr( "/" __FILE__, '/') + 1)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:127:5: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
  127 |     XTOS_RESTORE_INTLEVEL(irq_status);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:104:44: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  104 | # define XTOS_RESTORE_INTLEVEL(restoreval)      do{ unsigned __tmp = (restoreval); \
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:127:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  127 |     XTOS_RESTORE_INTLEVEL(irq_status);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:105:4: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  105 |                         __asm__ __volatile__(   "wsr.ps %0 ; rsync\n" \
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:127:5: warning: variable '__tmp' of type 'unsigned int' can be declared 'const' [misc-const-correctness]
  127 |     XTOS_RESTORE_INTLEVEL(irq_status);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:104:48: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  104 | # define XTOS_RESTORE_INTLEVEL(restoreval)      do{ unsigned __tmp = (restoreval); \
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:148:1: warning: 'spinlock_release' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  148 | static inline void __attribute__((always_inline)) spinlock_release(spinlock_t *lock)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:151:14: warning: variable 'irq_status' is not initialized [cppcoreguidelines-init-variables]
  151 |     uint32_t irq_status;
      |              ^         
      |                         = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:152:14: warning: variable 'core_id' is not initialized [cppcoreguidelines-init-variables]
  152 |     uint32_t core_id;
      |              ^      
      |                      = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:154:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  154 |     assert(lock);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:78: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:38:61: note: expanded from macro '__FILENAME__'
   38 | #define __FILENAME__ (__builtin_strrchr( "/" __FILE__, '/') + 1)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:155:18: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  155 |     irq_status = XTOS_SET_INTLEVEL(XCHAL_EXCM_LEVEL);
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:92:4: note: expanded from macro 'XTOS_SET_INTLEVEL'
   92 |                         __asm__ __volatile__(   "rsil   %0, " XTSTR(intlevel) "\n" \
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:157:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  157 |     RSR(PRID, core_id);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:11:30: note: expanded from macro 'RSR'
   11 | #define RSR(reg, at)         asm volatile ("rsr %0, %1" : "=r" (at) : "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:158:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  158 |     assert(core_id == lock->owner); // This is a mutex we didn't lock, or it's corrupt
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:78: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:38:61: note: expanded from macro '__FILENAME__'
   38 | #define __FILENAME__ (__builtin_strrchr( "/" __FILE__, '/') + 1)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:161:9: warning: implicit conversion 'uint32_t' (aka 'unsigned int') -> 'bool' [readability-implicit-bool-conversion]
  161 |     if(!lock->count) {
      |        ~^          
      |                     == 0u
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:164:9: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  164 |         assert(lock->count < 0x100); // Indicates memory corruption
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:50:78: note: expanded from macro 'assert'
   50 | #define assert(__e) (__builtin_expect(!!(__e), 1) ? (void)0 : __assert_func (__FILENAME__, __LINE__, \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:38:61: note: expanded from macro '__FILENAME__'
   38 | #define __FILENAME__ (__builtin_strrchr( "/" __FILE__, '/') + 1)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:167:5: warning: avoid do-while loops [cppcoreguidelines-avoid-do-while]
  167 |     XTOS_RESTORE_INTLEVEL(irq_status);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:104:44: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  104 | # define XTOS_RESTORE_INTLEVEL(restoreval)      do{ unsigned __tmp = (restoreval); \
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:167:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  167 |     XTOS_RESTORE_INTLEVEL(irq_status);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:105:4: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  105 |                         __asm__ __volatile__(   "wsr.ps %0 ; rsync\n" \
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:167:5: warning: variable '__tmp' of type 'unsigned int' can be declared 'const' [misc-const-correctness]
  167 |     XTOS_RESTORE_INTLEVEL(irq_status);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:104:48: note: expanded from macro 'XTOS_RESTORE_INTLEVEL'
  104 | # define XTOS_RESTORE_INTLEVEL(restoreval)      do{ unsigned __tmp = (restoreval); \
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc\esp32/spiram.h:9:9: warning: declaration uses identifier '__ESP_SPIRAM_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    9 | #define __ESP_SPIRAM_H
      |         ^~~~~~~~~~~~~~
      |         ESP_SPIRAM_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc\esp32/spiram.h:20:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   20 | typedef enum {
      | ^~~~~~~~~~~~~~
   21 |     ESP_SPIRAM_SIZE_16MBITS = 0,   /*!< SPI RAM size is 16 MBits */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   22 |     ESP_SPIRAM_SIZE_32MBITS = 1,   /*!< SPI RAM size is 32 MBits */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   23 |     ESP_SPIRAM_SIZE_64MBITS = 2,   /*!< SPI RAM size is 64 MBits */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   24 |     ESP_SPIRAM_SIZE_INVALID,       /*!< SPI RAM size is invalid */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   25 | } esp_spiram_size_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc\esp32/spiram.h:20:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   20 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc\esp32/spiram.h:20:9: warning: enum 'esp_spiram_size_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:16:9: warning: declaration uses identifier '_ESP_NETIF_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP_NETIF_H_
      |         ^~~~~~~~~~~~~
      |         ESP_NETIF_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:34:9: warning: declaration uses identifier '_ESP_NETIF_SUPPRESS_LEGACY_WARNING_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   34 | #define _ESP_NETIF_SUPPRESS_LEGACY_WARNING_
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         ESP_NETIF_SUPPRESS_LEGACY_WARNING_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:161:85: warning: parameter name 'eb' is too short, expected at least 3 characters [readability-identifier-length]
  161 | esp_err_t esp_netif_receive(esp_netif_t *esp_netif, void *buffer, size_t len, void *eb);
      |                                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:737:59: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  737 | void esp_netif_set_ip4_addr(esp_ip4_addr_t *addr, uint8_t a, uint8_t b, uint8_t c, uint8_t d);
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:737:70: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  737 | void esp_netif_set_ip4_addr(esp_ip4_addr_t *addr, uint8_t a, uint8_t b, uint8_t c, uint8_t d);
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:737:81: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  737 | void esp_netif_set_ip4_addr(esp_ip4_addr_t *addr, uint8_t a, uint8_t b, uint8_t c, uint8_t d);
      |                                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:737:92: warning: parameter name 'd' is too short, expected at least 3 characters [readability-identifier-length]
  737 | void esp_netif_set_ip4_addr(esp_ip4_addr_t *addr, uint8_t a, uint8_t b, uint8_t c, uint8_t d);
      |                                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:920:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  920 | typedef esp_err_t (*esp_netif_callback_fn)(void *ctx);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_netif_callback_fn = esp_err_t (*)(void *ctx)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:928:54: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  928 | esp_err_t esp_netif_tcpip_exec(esp_netif_callback_fn fn, void *ctx);
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_defaults.h:8:9: warning: declaration uses identifier '_ESP_NETIF_DEFAULTS_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define _ESP_NETIF_DEFAULTS_H
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         ESP_NETIF_DEFAULTS_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:8:9: warning: declaration uses identifier '_ESP_NETIF_IP_ADDR_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define _ESP_NETIF_IP_ADDR_H_
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         ESP_NETIF_IP_ADDR_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:101:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  101 | typedef struct esp_ip4_addr esp_ip4_addr_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_ip4_addr_t = struct esp_ip4_addr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:103:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  103 | typedef struct esp_ip6_addr esp_ip6_addr_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_ip6_addr_t = struct esp_ip6_addr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:109:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  109 | typedef struct _ip_addr {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
  110 |     union {
      |     ~~~~~~~
  111 |         esp_ip6_addr_t ip6; /*!< IPv6 address type */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  112 |         esp_ip4_addr_t ip4; /*!< IPv4 address type */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  113 |     } u_addr;               /*!< IP address union */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  114 |     uint8_t type;           /*!< ipaddress type */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  115 | } esp_ip_addr_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:117:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  117 | typedef enum {
      | ^~~~~~~~~~~~~~
  118 |     ESP_IP6_ADDR_IS_UNKNOWN,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
  119 |     ESP_IP6_ADDR_IS_GLOBAL,
      |     ~~~~~~~~~~~~~~~~~~~~~~~
  120 |     ESP_IP6_ADDR_IS_LINK_LOCAL,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  121 |     ESP_IP6_ADDR_IS_SITE_LOCAL,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  122 |     ESP_IP6_ADDR_IS_UNIQUE_LOCAL,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  123 |     ESP_IP6_ADDR_IS_IPV4_MAPPED_IPV6
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  124 | } esp_ip6_addr_type_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:117:9: warning: enum 'esp_ip6_addr_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  117 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:141:1: warning: 'esp_netif_ip_addr_copy' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  141 | static inline void esp_netif_ip_addr_copy(esp_ip_addr_t *dest, const esp_ip_addr_t *src)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:145:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  145 |         dest->u_addr.ip6.addr[0] = src->u_addr.ip6.addr[0];
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:145:48: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  145 |         dest->u_addr.ip6.addr[0] = src->u_addr.ip6.addr[0];
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:146:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  146 |         dest->u_addr.ip6.addr[1] = src->u_addr.ip6.addr[1];
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:146:48: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  146 |         dest->u_addr.ip6.addr[1] = src->u_addr.ip6.addr[1];
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:147:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  147 |         dest->u_addr.ip6.addr[2] = src->u_addr.ip6.addr[2];
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:147:48: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  147 |         dest->u_addr.ip6.addr[2] = src->u_addr.ip6.addr[2];
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:148:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  148 |         dest->u_addr.ip6.addr[3] = src->u_addr.ip6.addr[3];
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:148:48: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  148 |         dest->u_addr.ip6.addr[3] = src->u_addr.ip6.addr[3];
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:149:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  149 |         dest->u_addr.ip6.zone = src->u_addr.ip6.zone;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:149:45: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  149 |         dest->u_addr.ip6.zone = src->u_addr.ip6.zone;
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:151:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  151 |         dest->u_addr.ip4.addr = src->u_addr.ip4.addr;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:151:45: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  151 |         dest->u_addr.ip4.addr = src->u_addr.ip4.addr;
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:152:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  152 |         dest->u_addr.ip6.addr[1] = 0;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:153:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  153 |         dest->u_addr.ip6.addr[2] = 0;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:154:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  154 |         dest->u_addr.ip6.addr[3] = 0;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_ip_addr.h:155:22: warning: do not access members of unions; consider using (boost::)variant instead [cppcoreguidelines-pro-type-union-access]
  155 |         dest->u_addr.ip6.zone = 0;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_sta_list.h:16:9: warning: declaration uses identifier '_ESP_NETIF_STA_LIST_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP_NETIF_STA_LIST_H_
      |         ^~~~~~~~~~~~~~~~~~~~~~
      |         ESP_NETIF_STA_LIST_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_sta_list.h:27:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   27 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   28 |     uint8_t mac[6]; /**< Station MAC address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 |     esp_ip4_addr_t ip;  /**< Station assigned IP address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   30 | } esp_netif_sta_info_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_sta_list.h:35:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   35 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   36 |     esp_netif_sta_info_t sta[ESP_WIFI_MAX_CONN_NUM]; /**< Connected stations */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     int num; /**< Number of connected stations */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 | } esp_netif_sta_list_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:8:9: warning: declaration uses identifier '_ESP_NETIF_TYPES_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define _ESP_NETIF_TYPES_H_
      |         ^~~~~~~~~~~~~~~~~~~
      |         ESP_NETIF_TYPES_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:24:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   24 | #define ESP_ERR_ESP_NETIF_INVALID_PARAMS        ESP_ERR_ESP_NETIF_BASE + 0x01
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:25:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   25 | #define ESP_ERR_ESP_NETIF_IF_NOT_READY          ESP_ERR_ESP_NETIF_BASE + 0x02
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:26:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   26 | #define ESP_ERR_ESP_NETIF_DHCPC_START_FAILED    ESP_ERR_ESP_NETIF_BASE + 0x03
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:27:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   27 | #define ESP_ERR_ESP_NETIF_DHCP_ALREADY_STARTED  ESP_ERR_ESP_NETIF_BASE + 0x04
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:28:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   28 | #define ESP_ERR_ESP_NETIF_DHCP_ALREADY_STOPPED  ESP_ERR_ESP_NETIF_BASE + 0x05
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:29:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   29 | #define ESP_ERR_ESP_NETIF_NO_MEM                ESP_ERR_ESP_NETIF_BASE + 0x06
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:30:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   30 | #define ESP_ERR_ESP_NETIF_DHCP_NOT_STOPPED      ESP_ERR_ESP_NETIF_BASE + 0x07
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:31:73: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   31 | #define ESP_ERR_ESP_NETIF_DRIVER_ATTACH_FAILED   ESP_ERR_ESP_NETIF_BASE + 0x08
      |                                                                         ^     
      |                                                  (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:32:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   32 | #define ESP_ERR_ESP_NETIF_INIT_FAILED           ESP_ERR_ESP_NETIF_BASE + 0x09
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:33:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   33 | #define ESP_ERR_ESP_NETIF_DNS_NOT_CONFIGURED    ESP_ERR_ESP_NETIF_BASE + 0x0A
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:34:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   34 | #define ESP_ERR_ESP_NETIF_MLD6_FAILED           ESP_ERR_ESP_NETIF_BASE + 0x0B
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:35:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   35 | #define ESP_ERR_ESP_NETIF_IP6_ADDR_FAILED       ESP_ERR_ESP_NETIF_BASE + 0x0C
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:36:72: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   36 | #define ESP_ERR_ESP_NETIF_DHCPS_START_FAILED    ESP_ERR_ESP_NETIF_BASE + 0x0D
      |                                                                        ^     
      |                                                 (                            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   42 | typedef struct esp_netif_obj esp_netif_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_netif_t = struct esp_netif_obj
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   46 | typedef enum {
      | ^~~~~~~~~~~~~~
   47 |     ESP_NETIF_DNS_MAIN= 0,       /**< DNS main server address*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 |     ESP_NETIF_DNS_BACKUP,        /**< DNS backup server address (Wi-Fi STA and Ethernet only) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |     ESP_NETIF_DNS_FALLBACK,      /**< DNS fallback server address (Wi-Fi STA and Ethernet only) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     ESP_NETIF_DNS_MAX
      |     ~~~~~~~~~~~~~~~~~
   51 | } esp_netif_dns_type_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:46:9: warning: enum 'esp_netif_dns_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   46 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   54 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   55 |     esp_ip_addr_t ip; /**< IPV4 address of DNS server */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   56 | } esp_netif_dns_info_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   59 | typedef enum {
      | ^~~~~~~~~~~~~~
   60 |     ESP_NETIF_DHCP_INIT = 0,    /**< DHCP client/server is in initial state (not yet started) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   61 |     ESP_NETIF_DHCP_STARTED,     /**< DHCP client/server has been started */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   62 |     ESP_NETIF_DHCP_STOPPED,     /**< DHCP client/server has been stopped */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |     ESP_NETIF_DHCP_STATUS_MAX
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   64 | } esp_netif_dhcp_status_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:59:9: warning: enum 'esp_netif_dhcp_status_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   59 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   68 | typedef enum{
      | ^~~~~~~~~~~~~
   69 |     ESP_NETIF_OP_START = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~~
   70 |     ESP_NETIF_OP_SET,           /**< Set option */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |     ESP_NETIF_OP_GET,           /**< Get option */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     ESP_NETIF_OP_MAX
      |     ~~~~~~~~~~~~~~~~
   73 | } esp_netif_dhcp_option_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:68:9: warning: enum 'esp_netif_dhcp_option_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   68 | typedef enum{
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:76:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   76 | typedef enum{
      | ^~~~~~~~~~~~~
   77 |     ESP_NETIF_SUBNET_MASK                   = 1,    /**< Network mask */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |     ESP_NETIF_DOMAIN_NAME_SERVER            = 6,    /**< Domain name server */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |     ESP_NETIF_ROUTER_SOLICITATION_ADDRESS   = 32,   /**< Solicitation router address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |     ESP_NETIF_REQUESTED_IP_ADDRESS          = 50,   /**< Request specific IP address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   81 |     ESP_NETIF_IP_ADDRESS_LEASE_TIME         = 51,   /**< Request IP address lease time */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |     ESP_NETIF_IP_REQUEST_RETRY_TIME         = 52,   /**< Request IP address retry counter */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   83 |     ESP_NETIF_VENDOR_CLASS_IDENTIFIER       = 60,   /**< Vendor Class Identifier of a DHCP client */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   84 |     ESP_NETIF_VENDOR_SPECIFIC_INFO          = 43,   /**< Vendor Specific Information of a DHCP server */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   85 | } esp_netif_dhcp_option_id_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:76:9: warning: enum 'esp_netif_dhcp_option_id_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   76 | typedef enum{
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   88 | typedef enum {
      | ^~~~~~~~~~~~~~
   89 |     IP_EVENT_STA_GOT_IP,               /*!< station got IP from connected AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |     IP_EVENT_STA_LOST_IP,              /*!< station lost IP and the IP is reset to 0 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   91 |     IP_EVENT_AP_STAIPASSIGNED,         /*!< soft-AP assign an IP to a connected station */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   92 |     IP_EVENT_GOT_IP6,                  /*!< station or ap or ethernet interface v6IP addr is preferred */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   93 |     IP_EVENT_ETH_GOT_IP,               /*!< ethernet got IP from connected AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |     IP_EVENT_ETH_LOST_IP,              /*!< ethernet lost IP and the IP is reset to 0 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   95 |     IP_EVENT_PPP_GOT_IP,               /*!< PPP interface got IP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   96 |     IP_EVENT_PPP_LOST_IP,              /*!< PPP interface lost IP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   97 | } ip_event_t;
      | ~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:88:9: warning: enum 'ip_event_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   88 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:104:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  104 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  105 |     esp_ip4_addr_t ip;      /**< Interface IPV4 address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  106 |     esp_ip4_addr_t netmask; /**< Interface IPV4 netmask */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  107 |     esp_ip4_addr_t gw;      /**< Interface IPV4 gateway address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  108 | } esp_netif_ip_info_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:112:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  112 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  113 |     esp_ip6_addr_t ip; /**< Interface IPV6 address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  114 | } esp_netif_ip6_info_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:121:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  121 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  122 |     int if_index;                    /*!< Interface index for which the event is received (left for legacy compilation) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  123 |     esp_netif_t *esp_netif;          /*!< Pointer to corresponding esp-netif object */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  124 |     esp_netif_ip_info_t ip_info;     /*!< IP address, netmask, gatway IP address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  125 |     bool ip_changed;                 /*!< Whether the assigned IP has changed or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  126 | } ip_event_got_ip_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:129:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  129 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  130 |     int if_index;                    /*!< Interface index for which the event is received (left for legacy compilation) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  131 |     esp_netif_t *esp_netif;          /*!< Pointer to corresponding esp-netif object */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  132 |     esp_netif_ip6_info_t ip6_info;   /*!< IPv6 address of the interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  133 |     int ip_index;                    /*!< IPv6 address index */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  134 | } ip_event_got_ip6_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:137:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  137 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  138 |     esp_ip6_addr_t addr;            /*!< The address to be added to the interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |     bool preferred;                 /*!< The default preference of the address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  140 | } ip_event_add_ip6_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:143:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  143 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  144 |     esp_ip4_addr_t ip; /*!< IP address which was assigned to the station */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 | } ip_event_ap_staipassigned_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:150:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  150 | typedef enum esp_netif_flags {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |     ESP_NETIF_DHCP_CLIENT = 1 << 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |     ESP_NETIF_DHCP_SERVER = 1 << 1,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |     ESP_NETIF_FLAG_AUTOUP = 1 << 2,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  154 |     ESP_NETIF_FLAG_GARP   = 1 << 3,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |     ESP_NETIF_FLAG_EVENT_IP_MODIFIED = 1 << 4,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |     ESP_NETIF_FLAG_IS_PPP = 1 << 5,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |     ESP_NETIF_FLAG_IS_SLIP = 1 << 6,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |     ESP_NETIF_FLAG_MLDV6_REPORT = 1 << 7,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 | } esp_netif_flags_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:150:14: warning: enum 'esp_netif_flags' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  150 | typedef enum esp_netif_flags {
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:161:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  161 | typedef enum esp_netif_ip_event_type {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |     ESP_NETIF_IP_EVENT_GOT_IP = 1,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |     ESP_NETIF_IP_EVENT_LOST_IP = 2,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 | } esp_netif_ip_event_type_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:161:14: warning: enum 'esp_netif_ip_event_type' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  161 | typedef enum esp_netif_ip_event_type {
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:178:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  178 | typedef struct esp_netif_inherent_config {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  179 |     esp_netif_flags_t flags;         /*!< flags that define esp-netif behavior */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  180 |     uint8_t mac[6];                  /*!< initial mac address for this interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  181 |     const esp_netif_ip_info_t* ip_info;    /*!< initial ip address for this interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  182 |     uint32_t get_ip_event;           /*!< event id to be raised when interface gets an IP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  183 |     uint32_t lost_ip_event;          /*!< event id to be raised when interface losts its IP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  184 |     const char * if_key;             /*!< string identifier of the interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |     const char * if_desc;            /*!< textual description of the interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  186 |     int route_prio;                  /*!< numeric priority of this interface to become a default
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  187 |                                           routing if (if other netifs are up).
      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  188 |                                           A higher value of route_prio indicates
      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  189 |                                           a higher priority */
      |                                           ~~~~~~~~~~~~~~~~~~~~
  190 | } esp_netif_inherent_config_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:192:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  192 | typedef struct esp_netif_config esp_netif_config_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_netif_config_t = struct esp_netif_config
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:197:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  197 | typedef void * esp_netif_iodriver_handle;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_netif_iodriver_handle = void *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:203:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  203 | typedef struct esp_netif_driver_base_s {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  204 |     esp_err_t (*post_attach)(esp_netif_t *netif, esp_netif_iodriver_handle h); /*!< post attach function pointer */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  205 |     esp_netif_t *netif; /*!< netif handle */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  206 | } esp_netif_driver_base_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:204:76: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  204 |     esp_err_t (*post_attach)(esp_netif_t *netif, esp_netif_iodriver_handle h); /*!< post attach function pointer */
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:213:33: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  213 |     esp_err_t (*transmit)(void *h, void *buffer, size_t len); /*!< transmit function pointer */
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:214:38: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  214 |     esp_err_t (*transmit_wrap)(void *h, void *buffer, size_t len, void *netstack_buffer); /*!< transmit wrap function pointer */
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:215:41: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
  215 |     void (*driver_free_rx_buffer)(void *h, void* buffer); /*!< free rx buffer function pointer */
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:218:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  218 | typedef struct esp_netif_driver_ifconfig esp_netif_driver_ifconfig_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_netif_driver_ifconfig_t = struct esp_netif_driver_ifconfig
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:224:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  224 | typedef struct esp_netif_netstack_config esp_netif_netstack_config_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_netif_netstack_config_t = struct esp_netif_netstack_config
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:238:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  238 | typedef esp_err_t (*esp_netif_receive_t)(esp_netif_t *esp_netif, void *buffer, size_t len, void *eb);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_netif_receive_t = esp_err_t (*)(esp_netif_t *esp_netif, void *buffer, size_t len, void *eb)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif_types.h:238:98: warning: parameter name 'eb' is too short, expected at least 3 characters [readability-identifier-length]
  238 | typedef esp_err_t (*esp_netif_receive_t)(esp_netif_t *esp_netif, void *buffer, size_t len, void *eb);
      |                                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:52:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   52 | typedef enum {
      | ^~~~~~~~~~~~~~
   53 |     ETS_OK     = 0, /**< return successful in ets*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |     ETS_FAILED = 1  /**< return failed in ets*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 | } ETS_STATUS;
      | ~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:52:9: warning: enum 'ETS_STATUS' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   52 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:57:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   57 | typedef ETS_STATUS ets_status_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ets_status_t = ETS_STATUS
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   59 | typedef uint32_t ETSSignal;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ETSSignal = uint32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   60 | typedef uint32_t ETSParam;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
      | using ETSParam = uint32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   62 | typedef struct ETSEventTag ETSEvent;    /**< Event transmit/receive in ets*/
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ETSEvent = struct ETSEventTag
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   69 | typedef void (*ETSTask)(ETSEvent *e);       /**< Type of the Task processer*/
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ETSTask = void (*)(ETSEvent *e)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:69:35: warning: parameter name 'e' is too short, expected at least 3 characters [readability-identifier-length]
   69 | typedef void (*ETSTask)(ETSEvent *e);       /**< Type of the Task processer*/
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   70 | typedef void (* ets_idle_cb_t)(void *arg);  /**< Type of the system idle callback*/
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ets_idle_cb_t = void (* )(void *arg)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:215:31: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  215 | void ets_write_char_uart(char c);
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:225:31: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  225 | void ets_install_putc1(void (*p)(char c));
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:225:39: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  225 | void ets_install_putc1(void (*p)(char c));
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:235:31: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  235 | void ets_install_putc2(void (*p)(char c));
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:235:39: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  235 | void ets_install_putc2(void (*p)(char c));
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:267:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  267 | typedef void ETSTimerFunc(void *timer_arg);/**< timer handler*/
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ETSTimerFunc = void (void *timer_arg)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:269:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  269 | typedef struct _ETSTIMER_ {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  270 |     struct _ETSTIMER_    *timer_next;   /**< timer linker*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  271 |     uint32_t              timer_expire; /**< abstruct time when timer expire*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  272 |     uint32_t              timer_period; /**< timer period, 0 means timer is not periodic repeated*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  273 |     ETSTimerFunc         *timer_func;   /**< timer handler*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  274 |     void                 *timer_arg;    /**< timer handler argument*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  275 | } ETSTimer;
      | ~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:269:16: warning: declaration uses identifier '_ETSTIMER_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  269 | typedef struct _ETSTIMER_ {
      |                ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:322:50: warning: parameter name 'us' is too short, expected at least 3 characters [readability-identifier-length]
  322 | void ets_timer_arm_us(ETSTimer *ptimer, uint32_t us, bool repeat);
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:366:28: warning: parameter name 'us' is too short, expected at least 3 characters [readability-identifier-length]
  366 | void ets_delay_us(uint32_t us);
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:462:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  462 | typedef void (* ets_isr_t)(void *);/**< interrupt handler type*/
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ets_isr_t = void (* )(void *)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:477:25: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
  477 | void ets_isr_attach(int i, ets_isr_t func, void *arg);
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:552:9: warning: declaration uses identifier '_ETSTR', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  552 | #define _ETSTR(v) # v
      |         ^~~~~~
      |         ETSTR
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:553:9: warning: declaration uses identifier '_ETS_SET_INTLEVEL', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  553 | #define _ETS_SET_INTLEVEL(intlevel)        ({ unsigned __tmp; \
      |         ^~~~~~~~~~~~~~~~~
      |         ETS_SET_INTLEVEL
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:640:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  640 | typedef enum {
      | ^~~~~~~~~~~~~~
  641 |     OK = 0,
      |     ~~~~~~~
  642 |     FAIL,
      |     ~~~~~
  643 |     PENDING,
      |     ~~~~~~~~
  644 |     BUSY,
      |     ~~~~~
  645 |     CANCEL,
      |     ~~~~~~~
  646 | } STATUS;
      | ~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/ets_sys.h:640:9: warning: enum 'STATUS' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  640 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:37:58: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   37 | #define GPIO_PIN_ADDR(i)                (GPIO_PIN0_REG + i*4)
      |                                                          ^
      |                                                          ()
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:43:7: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   43 |     ((reg_id >= GPIO_ID_PIN0) && (reg_id <= GPIO_ID_PIN(GPIO_PIN_COUNT-1)))
      |       ^
      |       (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:43:35: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   43 |     ((reg_id >= GPIO_ID_PIN0) && (reg_id <= GPIO_ID_PIN(GPIO_PIN_COUNT-1)))
      |                                   ^
      |                                   (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:47:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   47 | typedef enum {
      | ^~~~~~~~~~~~~~
   48 |     GPIO_PIN_INTR_DISABLE = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |     GPIO_PIN_INTR_POSEDGE = 1,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     GPIO_PIN_INTR_NEGEDGE = 2,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |     GPIO_PIN_INTR_ANYEDGE = 3,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |     GPIO_PIN_INTR_LOLEVEL = 4,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |     GPIO_PIN_INTR_HILEVEL = 5
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   54 | } GPIO_INT_TYPE;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:47:9: warning: enum 'GPIO_INT_TYPE' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   47 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:57:11: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   57 |         ((gpio_no < 32) ? gpio_output_set(bit_value<<gpio_no, (bit_value ? 0 : 1)<<gpio_no, 1<<gpio_no,0) : \
      |           ^
      |           (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:57:43: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   57 |         ((gpio_no < 32) ? gpio_output_set(bit_value<<gpio_no, (bit_value ? 0 : 1)<<gpio_no, 1<<gpio_no,0) : \
      |                                           ^        
      |                                           (        )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:57:54: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   57 |         ((gpio_no < 32) ? gpio_output_set(bit_value<<gpio_no, (bit_value ? 0 : 1)<<gpio_no, 1<<gpio_no,0) : \
      |                                                      ^      
      |                                                      (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:57:64: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   57 |         ((gpio_no < 32) ? gpio_output_set(bit_value<<gpio_no, (bit_value ? 0 : 1)<<gpio_no, 1<<gpio_no,0) : \
      |                                                                ^
      |                                                                (        )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:57:84: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   57 |         ((gpio_no < 32) ? gpio_output_set(bit_value<<gpio_no, (bit_value ? 0 : 1)<<gpio_no, 1<<gpio_no,0) : \
      |                                                                                    ^      
      |                                                                                    (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:57:96: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   57 |         ((gpio_no < 32) ? gpio_output_set(bit_value<<gpio_no, (bit_value ? 0 : 1)<<gpio_no, 1<<gpio_no,0) : \
      |                                                                                                ^      
      |                                                                                                (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:58:47: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   58 |                          gpio_output_set_high(bit_value<<(gpio_no - 32), (bit_value ? 0 : 1)<<(gpio_no - 32), 1<<(gpio_no -32),0))
      |                                               ^        
      |                                               (        )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:58:59: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   58 |                          gpio_output_set_high(bit_value<<(gpio_no - 32), (bit_value ? 0 : 1)<<(gpio_no - 32), 1<<(gpio_no -32),0))
      |                                                           ^
      |                                                           (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:58:75: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   58 |                          gpio_output_set_high(bit_value<<(gpio_no - 32), (bit_value ? 0 : 1)<<(gpio_no - 32), 1<<(gpio_no -32),0))
      |                                                                           ^
      |                                                                           (        )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:58:96: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   58 |                          gpio_output_set_high(bit_value<<(gpio_no - 32), (bit_value ? 0 : 1)<<(gpio_no - 32), 1<<(gpio_no -32),0))
      |                                                                                                ^
      |                                                                                                (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:58:115: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   58 |                          gpio_output_set_high(bit_value<<(gpio_no - 32), (bit_value ? 0 : 1)<<(gpio_no - 32), 1<<(gpio_no -32),0))
      |                                                                                                                   ^
      |                                                                                                                   (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:59:39: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   59 | #define GPIO_DIS_OUTPUT(gpio_no)    ((gpio_no < 32) ? gpio_output_set(0,0,0, 1<<gpio_no) : gpio_output_set_high(0,0,0, 1<<(gpio_no - 32)))
      |                                       ^
      |                                       (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:59:81: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   59 | #define GPIO_DIS_OUTPUT(gpio_no)    ((gpio_no < 32) ? gpio_output_set(0,0,0, 1<<gpio_no) : gpio_output_set_high(0,0,0, 1<<(gpio_no - 32)))
      |                                                                                 ^      
      |                                                                                 (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:59:124: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   59 | #define GPIO_DIS_OUTPUT(gpio_no)    ((gpio_no < 32) ? gpio_output_set(0,0,0, 1<<gpio_no) : gpio_output_set_high(0,0,0, 1<<(gpio_no - 32)))
      |                                                                                                                            ^
      |                                                                                                                            (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:60:39: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   60 | #define GPIO_INPUT_GET(gpio_no)     ((gpio_no < 32) ? ((gpio_input_get()>>gpio_no)&BIT0) : ((gpio_input_get_high()>>(gpio_no - 32))&BIT0))
      |                                       ^
      |                                       (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:60:75: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   60 | #define GPIO_INPUT_GET(gpio_no)     ((gpio_no < 32) ? ((gpio_input_get()>>gpio_no)&BIT0) : ((gpio_input_get_high()>>(gpio_no - 32))&BIT0))
      |                                                                           ^      
      |                                                                           (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:60:118: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   60 | #define GPIO_INPUT_GET(gpio_no)     ((gpio_no < 32) ? ((gpio_input_get()>>gpio_no)&BIT0) : ((gpio_input_get_high()>>(gpio_no - 32))&BIT0))
      |                                                                                                                      ^
      |                                                                                                                      (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:63:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   63 | typedef void (* gpio_intr_handler_fn_t)(uint32_t intr_mask, bool high, void *arg);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using gpio_intr_handler_fn_t = void (* )(uint32_t intr_mask, bool high, void *arg)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:139:56: warning: parameter name 'fn' is too short, expected at least 3 characters [readability-identifier-length]
  139 | void gpio_intr_handler_register(gpio_intr_handler_fn_t fn, void *arg);
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp32s3/rom/gpio.h:191:38: warning: parameter name 'i' is too short, expected at least 3 characters [readability-identifier-length]
  191 | void gpio_pin_wakeup_enable(uint32_t i, GPIO_INT_TYPE intr_state);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp_rom_sys.h:39:32: warning: parameter name 'us' is too short, expected at least 3 characters [readability-identifier-length]
   39 | void esp_rom_delay_us(uint32_t us);
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_rom\include\esp_rom_sys.h:48:66: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   48 | void esp_rom_install_channel_putc(int channel, void (*putc)(char c));
      |                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_private/crosscore_int.h:15:9: warning: declaration uses identifier '__ESP_CROSSCORE_INT_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define __ESP_CROSSCORE_INT_H
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         ESP_CROSSCORE_INT_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_system.h:16:9: warning: declaration uses identifier '__ESP_SYSTEM_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define __ESP_SYSTEM_H__
      |         ^~~~~~~~~~~~~~~~
      |         ESP_SYSTEM_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_system.h:41:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   41 | typedef enum {
      | ^~~~~~~~~~~~~~
   42 |     ESP_RST_UNKNOWN,    //!< Reset reason can not be determined
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     ESP_RST_POWERON,    //!< Reset due to power-on event
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     ESP_RST_EXT,        //!< Reset by external pin (not applicable for ESP32)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 |     ESP_RST_SW,         //!< Software reset via esp_restart
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   46 |     ESP_RST_PANIC,      //!< Software reset due to exception/panic
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 |     ESP_RST_INT_WDT,    //!< Reset (software or hardware) due to interrupt watchdog
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 |     ESP_RST_TASK_WDT,   //!< Reset due to task watchdog
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |     ESP_RST_WDT,        //!< Reset due to other watchdogs
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     ESP_RST_DEEPSLEEP,  //!< Reset after exiting deep sleep mode
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |     ESP_RST_BROWNOUT,   //!< Brownout reset (software or hardware)
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |     ESP_RST_SDIO,       //!< Reset over SDIO
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 | } esp_reset_reason_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_system.h:41:9: warning: enum 'esp_reset_reason_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   41 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_system.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   58 | typedef void (*shutdown_handler_t)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using shutdown_handler_t = void (*)(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_system.h:58:36: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
   58 | typedef void (*shutdown_handler_t)(void);
      |                                    ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_task.h:29:9: warning: declaration uses identifier '_ESP_TASK_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   29 | #define _ESP_TASK_H_
      |         ^~~~~~~~~~~~
      |         ESP_TASK_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_timer\include\esp_timer.h:35:1: warning: system include stdio.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_timer\include\esp_timer.h [llvmlibc-restrict-system-libc-headers]
   35 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   36 | #include <stdbool.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_timer\include\esp_timer.h:47:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   47 | typedef struct esp_timer* esp_timer_handle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_timer_handle_t = struct esp_timer*
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_timer\include\esp_timer.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   53 | typedef void (*esp_timer_cb_t)(void* arg);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_timer_cb_t = void (*)(void* arg)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_timer\include\esp_timer.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   59 | typedef enum {
      | ^~~~~~~~~~~~~~
   60 |     ESP_TIMER_TASK,     //!< Callback is called from timer task
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   61 | #ifdef CONFIG_ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   62 |     ESP_TIMER_ISR,      //!< Callback is called from timer ISR
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 | #endif
      | ~~~~~~
   64 |     ESP_TIMER_MAX,      //!< Count of the methods for dispatching timer callback
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   65 | } esp_timer_dispatch_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_timer\include\esp_timer.h:59:9: warning: enum 'esp_timer_dispatch_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   59 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_timer\include\esp_timer.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   70 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   71 |     esp_timer_cb_t callback;        //!< Function to call when timer expires
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     void* arg;                      //!< Argument to pass to the callback
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     esp_timer_dispatch_t dispatch_method;   //!< Call the callback from task or from ISR
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   74 |     const char* name;               //!< Timer name, used in esp_timer_dump function
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |     bool skip_unhandled_events;     //!< Skip unhandled events for periodic timers
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 | } esp_timer_create_args_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_private/esp_wifi_types_private.h:16:9: warning: declaration uses identifier '_ESP_WIFI_TYPES_PRIVATE_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _ESP_WIFI_TYPES_PRIVATE_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
      |         ESP_WIFI_TYPES_PRIVATE_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_smartconfig.h:16:9: warning: declaration uses identifier '__ESP_SMARTCONFIG_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define __ESP_SMARTCONFIG_H__
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         ESP_SMARTCONFIG_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_smartconfig.h:27:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   27 | typedef enum {
      | ^~~~~~~~~~~~~~
   28 |     SC_TYPE_ESPTOUCH = 0,       /**< protocol: ESPTouch */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 |     SC_TYPE_AIRKISS,            /**< protocol: AirKiss */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   30 |     SC_TYPE_ESPTOUCH_AIRKISS,   /**< protocol: ESPTouch and AirKiss */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |     SC_TYPE_ESPTOUCH_V2,        /**< protocol: ESPTouch v2*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   32 | } smartconfig_type_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_smartconfig.h:27:9: warning: enum 'smartconfig_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   27 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_smartconfig.h:35:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   35 | typedef enum {
      | ^~~~~~~~~~~~~~
   36 |     SC_EVENT_SCAN_DONE,                /*!< ESP32 station smartconfig has finished to scan for APs */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     SC_EVENT_FOUND_CHANNEL,            /*!< ESP32 station smartconfig has found the channel of the target AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     SC_EVENT_GOT_SSID_PSWD,            /*!< ESP32 station smartconfig got the SSID and password */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     SC_EVENT_SEND_ACK_DONE,            /*!< ESP32 station smartconfig has sent ACK to cellphone */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 | } smartconfig_event_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_smartconfig.h:35:9: warning: enum 'smartconfig_event_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   35 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_smartconfig.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   46 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   47 |     uint8_t ssid[32];           /**< SSID of the AP. Null terminated string. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 |     uint8_t password[64];       /**< Password of the AP. Null terminated string. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |     bool bssid_set;             /**< whether set MAC address of target AP or not. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     uint8_t bssid[6];           /**< MAC address of target AP. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |     smartconfig_type_t type;    /**< Type of smartconfig(ESPTouch or AirKiss). */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |     uint8_t token;              /**< Token from cellphone which is used to send ACK to cellphone. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |     uint8_t cellphone_ip[4];    /**< IP address of cellphone. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 | } smartconfig_event_got_ssid_pswd_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_smartconfig.h:57:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   57 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   58 |     bool enable_log;                /**< Enable smartconfig logs. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   59 |     bool esp_touch_v2_enable_crypt; /**< Enable ESPTouch v2 crypt. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   60 |     char *esp_touch_v2_key;         /**< ESPTouch v2 crypt key, len should be 16. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   61 | } smartconfig_start_config_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:9:9: warning: declaration uses identifier '__ESP_WIFI_TYPES_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    9 | #define __ESP_WIFI_TYPES_H__
      |         ^~~~~~~~~~~~~~~~~~~~
      |         ESP_WIFI_TYPES_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:17:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   17 | typedef enum {
      | ^~~~~~~~~~~~~~
   18 |     WIFI_MODE_NULL = 0,  /**< null mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   19 |     WIFI_MODE_STA,       /**< WiFi station mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   20 |     WIFI_MODE_AP,        /**< WiFi soft-AP mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 |     WIFI_MODE_APSTA,     /**< WiFi station + soft-AP mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   22 |     WIFI_MODE_MAX
      |     ~~~~~~~~~~~~~
   23 | } wifi_mode_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:17:9: warning: enum 'wifi_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   17 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:25:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   25 | typedef enum {
      | ^~~~~~~~~~~~~~
   26 |     WIFI_IF_STA = ESP_IF_WIFI_STA,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   27 |     WIFI_IF_AP  = ESP_IF_WIFI_AP,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   28 | } wifi_interface_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:25:9: warning: enum 'wifi_interface_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   25 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:36:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   36 | typedef enum {
      | ^~~~~~~~~~~~~~
   37 |     WIFI_COUNTRY_POLICY_AUTO,   /**< Country policy is auto, use the country info of AP to which the station is connected */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     WIFI_COUNTRY_POLICY_MANUAL, /**< Country policy is manual, always use the configured country info */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 | } wifi_country_policy_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:36:9: warning: enum 'wifi_country_policy_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   36 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:42:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   42 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   43 |     char                  cc[3];   /**< country code string */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     uint8_t               schan;   /**< start channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 |     uint8_t               nchan;   /**< total channel number */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   46 |     int8_t                max_tx_power;   /**< This field is used for getting WiFi maximum transmitting power, call esp_wifi_set_max_tx_power to set the maximum transmitting power. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 |     wifi_country_policy_t policy;  /**< country policy */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 | } wifi_country_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:52:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   52 | typedef enum {
      | ^~~~~~~~~~~~~~
   53 |     WIFI_AUTH_OPEN = 0,         /**< authenticate mode : open */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |     WIFI_AUTH_WEP,              /**< authenticate mode : WEP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 |     WIFI_AUTH_WPA_PSK,          /**< authenticate mode : WPA_PSK */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   56 |     WIFI_AUTH_WPA2_PSK,         /**< authenticate mode : WPA2_PSK */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   57 |     WIFI_AUTH_WPA_WPA2_PSK,     /**< authenticate mode : WPA_WPA2_PSK */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   58 |     WIFI_AUTH_ENTERPRISE,       /**< authenticate mode : WiFi EAP security */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   59 |     WIFI_AUTH_WPA2_ENTERPRISE = WIFI_AUTH_ENTERPRISE,  /**< authenticate mode : WiFi EAP security */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   60 |     WIFI_AUTH_WPA3_PSK,         /**< authenticate mode : WPA3_PSK */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   61 |     WIFI_AUTH_WPA2_WPA3_PSK,    /**< authenticate mode : WPA2_WPA3_PSK */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   62 |     WIFI_AUTH_WAPI_PSK,         /**< authenticate mode : WAPI_PSK */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |     WIFI_AUTH_WPA3_ENT_192,     /**< authenticate mode : WPA3_ENT_SUITE_B_192_BIT */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |     WIFI_AUTH_MAX
      |     ~~~~~~~~~~~~~
   65 | } wifi_auth_mode_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:52:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   52 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:52:9: warning: enum 'wifi_auth_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   67 | typedef enum {
      | ^~~~~~~~~~~~~~
   68 |     WIFI_REASON_UNSPECIFIED                        = 1,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   69 |     WIFI_REASON_AUTH_EXPIRE                        = 2,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   70 |     WIFI_REASON_AUTH_LEAVE                         = 3,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |     WIFI_REASON_ASSOC_EXPIRE                       = 4,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     WIFI_REASON_ASSOC_TOOMANY                      = 5,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     WIFI_REASON_NOT_AUTHED                         = 6,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   74 |     WIFI_REASON_NOT_ASSOCED                        = 7,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |     WIFI_REASON_ASSOC_LEAVE                        = 8,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |     WIFI_REASON_ASSOC_NOT_AUTHED                   = 9,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |     WIFI_REASON_DISASSOC_PWRCAP_BAD                = 10,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |     WIFI_REASON_DISASSOC_SUPCHAN_BAD               = 11,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |     WIFI_REASON_BSS_TRANSITION_DISASSOC            = 12,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |     WIFI_REASON_IE_INVALID                         = 13,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   81 |     WIFI_REASON_MIC_FAILURE                        = 14,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |     WIFI_REASON_4WAY_HANDSHAKE_TIMEOUT             = 15,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:67:9: warning: enum 'wifi_err_reason_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   67 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:128:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  128 | typedef enum {
      | ^~~~~~~~~~~~~~
  129 |     WIFI_SECOND_CHAN_NONE = 0,  /**< the channel width is HT20 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  130 |     WIFI_SECOND_CHAN_ABOVE,     /**< the channel width is HT40 and the secondary channel is above the primary channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  131 |     WIFI_SECOND_CHAN_BELOW,     /**< the channel width is HT40 and the secondary channel is below the primary channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  132 | } wifi_second_chan_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:128:9: warning: enum 'wifi_second_chan_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  128 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:134:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  134 | typedef enum {
      | ^~~~~~~~~~~~~~
  135 |     WIFI_SCAN_TYPE_ACTIVE = 0,  /**< active scan */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  136 |     WIFI_SCAN_TYPE_PASSIVE,     /**< passive scan */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  137 | } wifi_scan_type_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:134:9: warning: enum 'wifi_scan_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  134 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:140:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  140 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  141 |     uint32_t min;  /**< minimum active scan time per channel, units: millisecond */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  142 |     uint32_t max;  /**< maximum active scan time per channel, units: millisecond, values above 1500ms may
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |                                           cause station to disconnect from AP and are not recommended.  */
      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 | } wifi_active_scan_time_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:147:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  147 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  148 |     wifi_active_scan_time_t active;  /**< active scan time per channel, units: millisecond. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |     uint32_t passive;                /**< passive scan time per channel, units: millisecond, values above 1500ms may
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |                                           cause station to disconnect from AP and are not recommended. */
      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 | } wifi_scan_time_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:154:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  154 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  155 |     uint8_t *ssid;               /**< SSID of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |     uint8_t *bssid;              /**< MAC address of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |     uint8_t channel;             /**< channel, scan the specific channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |     bool show_hidden;            /**< enable to scan AP whose SSID is hidden */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |     wifi_scan_type_t scan_type;  /**< scan type, active or passive */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |     wifi_scan_time_t scan_time;  /**< scan time per channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |     uint8_t home_chan_dwell_time;/**< time spent at home channel between scanning consecutive channels.*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 | } wifi_scan_config_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:164:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  164 | typedef enum {
      | ^~~~~~~~~~~~~~
  165 |     WIFI_CIPHER_TYPE_NONE = 0,   /**< the cipher type is none */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  166 |     WIFI_CIPHER_TYPE_WEP40,      /**< the cipher type is WEP40 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  167 |     WIFI_CIPHER_TYPE_WEP104,     /**< the cipher type is WEP104 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  168 |     WIFI_CIPHER_TYPE_TKIP,       /**< the cipher type is TKIP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  169 |     WIFI_CIPHER_TYPE_CCMP,       /**< the cipher type is CCMP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  170 |     WIFI_CIPHER_TYPE_TKIP_CCMP,  /**< the cipher type is TKIP and CCMP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  171 |     WIFI_CIPHER_TYPE_AES_CMAC128,/**< the cipher type is AES-CMAC-128 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  172 |     WIFI_CIPHER_TYPE_SMS4,       /**< the cipher type is SMS4 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  173 |     WIFI_CIPHER_TYPE_GCMP,       /**< the cipher type is GCMP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  174 |     WIFI_CIPHER_TYPE_GCMP256,    /**< the cipher type is GCMP-256 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  175 |     WIFI_CIPHER_TYPE_AES_GMAC128,/**< the cipher type is AES-GMAC-128 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  176 |     WIFI_CIPHER_TYPE_AES_GMAC256,/**< the cipher type is AES-GMAC-256 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  177 |     WIFI_CIPHER_TYPE_UNKNOWN,    /**< the cipher type is unknown */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  178 | } wifi_cipher_type_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:164:9: warning: enum 'wifi_cipher_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  164 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:184:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  184 | typedef enum {
      | ^~~~~~~~~~~~~~
  185 |     WIFI_ANT_ANT0,          /**< WiFi antenna 0 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  186 |     WIFI_ANT_ANT1,          /**< WiFi antenna 1 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  187 |     WIFI_ANT_MAX,           /**< Invalid WiFi antenna */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  188 | } wifi_ant_t;
      | ~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:184:9: warning: enum 'wifi_ant_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  184 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:191:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  191 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  192 |     uint8_t bssid[6];                     /**< MAC address of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  193 |     uint8_t ssid[33];                     /**< SSID of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  194 |     uint8_t primary;                      /**< channel of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  195 |     wifi_second_chan_t second;            /**< secondary channel of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |     int8_t  rssi;                         /**< signal strength of AP. Note that in some rare cases where signal strength is very strong, rssi values can be slightly positive */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  197 |     wifi_auth_mode_t authmode;            /**< authmode of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  198 |     wifi_cipher_type_t pairwise_cipher;   /**< pairwise cipher of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  199 |     wifi_cipher_type_t group_cipher;      /**< group cipher of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  200 |     wifi_ant_t ant;                       /**< antenna used to receive beacon from AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  201 |     uint32_t phy_11b:1;                   /**< bit: 0 flag to identify if 11b mode is enabled or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  202 |     uint32_t phy_11g:1;                   /**< bit: 1 flag to identify if 11g mode is enabled or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  203 |     uint32_t phy_11n:1;                   /**< bit: 2 flag to identify if 11n mode is enabled or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  204 |     uint32_t phy_lr:1;                    /**< bit: 3 flag to identify if low rate is enabled or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  205 |     uint32_t wps:1;                       /**< bit: 4 flag to identify if WPS is supported or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  206 |     uint32_t ftm_responder:1;             /**< bit: 5 flag to identify if FTM is supported in responder mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:212:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  212 | typedef enum {
      | ^~~~~~~~~~~~~~
  213 |     WIFI_FAST_SCAN = 0,                   /**< Do fast scan, scan will end after find SSID match AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  214 |     WIFI_ALL_CHANNEL_SCAN,                /**< All channel scan, scan will end after scan all the channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 | }wifi_scan_method_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:212:9: warning: enum 'wifi_scan_method_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  212 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:217:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  217 | typedef enum {
      | ^~~~~~~~~~~~~~
  218 |     WIFI_CONNECT_AP_BY_SIGNAL = 0,        /**< Sort match AP in scan list by RSSI */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |     WIFI_CONNECT_AP_BY_SECURITY,          /**< Sort match AP in scan list by security mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 | }wifi_sort_method_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:217:9: warning: enum 'wifi_sort_method_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  217 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:223:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  223 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  224 |     int8_t              rssi;             /**< The minimum rssi to accept in the fast scan mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |     wifi_auth_mode_t    authmode;         /**< The weakest authmode to accept in the fast scan mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  226 | }wifi_scan_threshold_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:228:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  228 | typedef enum {
      | ^~~~~~~~~~~~~~
  229 |     WIFI_PS_NONE,        /**< No power save */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |     WIFI_PS_MIN_MODEM,   /**< Minimum modem power saving. In this mode, station wakes up to receive beacon every DTIM period */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |     WIFI_PS_MAX_MODEM,   /**< Maximum modem power saving. In this mode, interval to receive beacons is determined by the listen_interval parameter in wifi_sta_config_t */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 | } wifi_ps_type_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:228:9: warning: enum 'wifi_ps_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  228 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:239:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  239 | typedef enum {
      | ^~~~~~~~~~~~~~
  240 |     WIFI_BW_HT20 = 1, /* Bandwidth is HT20 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  241 |     WIFI_BW_HT40,     /* Bandwidth is HT40 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  242 | } wifi_bandwidth_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:239:9: warning: enum 'wifi_bandwidth_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  239 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:245:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  245 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  246 |     bool capable;            /**< Deprecated variable. Device will always connect in PMF mode if other device also advertizes PMF capability. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  247 |     bool required;           /**< Advertizes that Protected Management Frame is required. Device will not associate to non-PMF capable devices. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  248 | } wifi_pmf_config_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:251:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  251 | typedef enum {
      | ^~~~~~~~~~~~~~
  252 |     WPA3_SAE_PWE_UNSPECIFIED,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
  253 |     WPA3_SAE_PWE_HUNT_AND_PECK,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  254 |     WPA3_SAE_PWE_HASH_TO_ELEMENT,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  255 |     WPA3_SAE_PWE_BOTH,
      |     ~~~~~~~~~~~~~~~~~~
  256 | } wifi_sae_pwe_method_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:251:9: warning: enum 'wifi_sae_pwe_method_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  251 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:259:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  259 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  260 |     uint8_t ssid[32];           /**< SSID of ESP32 soft-AP. If ssid_len field is 0, this must be a Null terminated string. Otherwise, length is set according to ssid_len. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  261 |     uint8_t password[64];       /**< Password of ESP32 soft-AP. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  262 |     uint8_t ssid_len;           /**< Optional length of SSID field. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  263 |     uint8_t channel;            /**< Channel of soft-AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  264 |     wifi_auth_mode_t authmode;  /**< Auth mode of soft-AP. Do not support AUTH_WEP, AUTH_WAPI_PSK and AUTH_OWE in soft-AP mode. When the auth mode is set to WPA2_PSK, WPA2_WPA3_PSK or WPA3_PSK, the pairwise cipher will be overwritten with WIFI_CIPHER_TYPE_CCMP. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  265 |     uint8_t ssid_hidden;        /**< Broadcast SSID or not, default 0, broadcast the SSID */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  266 |     uint8_t max_connection;     /**< Max number of stations allowed to connect in */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  267 |     uint16_t beacon_interval;   /**< Beacon interval which should be multiples of 100. Unit: TU(time unit, 1 TU = 1024 us). Range: 100 ~ 60000. Default value: 100 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  268 |     wifi_cipher_type_t pairwise_cipher;   /**< Pairwise cipher of SoftAP, group cipher will be derived using this. Cipher values are valid starting from WIFI_CIPHER_TYPE_TKIP, enum values before that will be considered as invalid and default cipher suites(TKIP+CCMP) will be used. Valid cipher suites in softAP mode are WIFI_CIPHER_TYPE_TKIP, WIFI_CIPHER_TYPE_CCMP and WIFI_CIPHER_TYPE_TKIP_CCMP. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  269 |     bool ftm_responder;         /**< Enable FTM Responder mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  270 | } wifi_ap_config_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:273:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  273 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  274 |     uint8_t ssid[32];                         /**< SSID of target AP. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  275 |     uint8_t password[64];                     /**< Password of target AP. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  276 |     wifi_scan_method_t scan_method;           /**< do all channel scan or fast scan */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  277 |     bool bssid_set;                           /**< whether set MAC address of target AP or not. Generally, station_config.bssid_set needs to be 0; and it needs to be 1 only when users need to check the MAC address of the AP.*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  278 |     uint8_t bssid[6];                         /**< MAC address of target AP*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  279 |     uint8_t channel;                          /**< channel of target AP. Set to 1~13 to scan starting from the specified channel before connecting to AP. If the channel of AP is unknown, set it to 0.*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  280 |     uint16_t listen_interval;                 /**< Listen interval for ESP32 station to receive beacon when WIFI_PS_MAX_MODEM is set. Units: AP beacon intervals. Defaults to 3 if set to 0. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  281 |     wifi_sort_method_t sort_method;           /**< sort the connect AP in the list by rssi or security mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  282 |     wifi_scan_threshold_t  threshold;         /**< When scan_threshold is set, only APs which have an auth mode that is more secure than the selected auth mode and a signal stronger than the minimum RSSI will be used. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  283 |     wifi_pmf_config_t pmf_cfg;                /**< Configuration for Protected Management Frame. Will be advertised in RSN Capabilities in RSN IE. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  284 |     uint32_t rm_enabled:1;                    /**< Whether Radio Measurements are enabled for the connection */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  285 |     uint32_t btm_enabled:1;                   /**< Whether BSS Transition Management is enabled for the connection */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  286 |     uint32_t mbo_enabled:1;                   /**< Whether MBO is enabled for the connection */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  287 |     uint32_t transition_disable:1;            /**< Whether to enable transition disable feature */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  288 |     uint32_t reserved:28;                     /**< Reserved for future feature set */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:300:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  300 | typedef union {
      | ^~~~~~~~~~~~~~~
  301 |     wifi_ap_config_t  ap;  /**< configuration of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |     wifi_sta_config_t sta; /**< configuration of STA */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 | } wifi_config_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:306:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  306 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  307 |     uint8_t mac[6];  /**< mac address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  308 |     int8_t  rssi;    /**< current average rssi of sta connected */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  309 |     uint32_t phy_11b:1;      /**< bit: 0 flag to identify if 11b mode is enabled or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  310 |     uint32_t phy_11g:1;      /**< bit: 1 flag to identify if 11g mode is enabled or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |     uint32_t phy_11n:1;      /**< bit: 2 flag to identify if 11n mode is enabled or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |     uint32_t phy_lr:1;       /**< bit: 3 flag to identify if low rate is enabled or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  313 |     uint32_t is_mesh_child:1;/**< bit: 4 flag to identify mesh child */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  314 |     uint32_t reserved:27;    /**< bit: 5..31 reserved */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  315 | } wifi_sta_info_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:324:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  324 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  325 |     wifi_sta_info_t sta[ESP_WIFI_MAX_CONN_NUM]; /**< station list */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  326 |     int       num; /**< number of stations in the list (other entries are invalid) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  327 | } wifi_sta_list_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:329:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  329 | typedef enum {
      | ^~~~~~~~~~~~~~
  330 |     WIFI_STORAGE_FLASH,  /**< all configuration will store in both memory and flash */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |     WIFI_STORAGE_RAM,    /**< all configuration will only store in the memory */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 | } wifi_storage_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:329:9: warning: enum 'wifi_storage_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  329 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:339:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  339 | typedef enum {
      | ^~~~~~~~~~~~~~
  340 |     WIFI_VND_IE_TYPE_BEACON,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
  341 |     WIFI_VND_IE_TYPE_PROBE_REQ,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     WIFI_VND_IE_TYPE_PROBE_RESP,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  343 |     WIFI_VND_IE_TYPE_ASSOC_REQ,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  344 |     WIFI_VND_IE_TYPE_ASSOC_RESP,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  345 | } wifi_vendor_ie_type_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:339:9: warning: enum 'wifi_vendor_ie_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  339 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:352:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  352 | typedef enum {
      | ^~~~~~~~~~~~~~
  353 |     WIFI_VND_IE_ID_0,
      |     ~~~~~~~~~~~~~~~~~
  354 |     WIFI_VND_IE_ID_1,
      |     ~~~~~~~~~~~~~~~~~
  355 | } wifi_vendor_ie_id_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:352:9: warning: enum 'wifi_vendor_ie_id_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  352 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:362:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  362 | typedef enum
      | ^~~~~~~~~~~~
  363 | {
      | ~
  364 |     WIFI_PHY_MODE_LR,   /**< PHY mode for Low Rate */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  365 |     WIFI_PHY_MODE_11B,  /**< PHY mode for 11b */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  366 |     WIFI_PHY_MODE_11G,  /**< PHY mode for 11g */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  367 |     WIFI_PHY_MODE_HT20, /**< PHY mode for Bandwidth HT20 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  368 |     WIFI_PHY_MODE_HT40, /**< PHY mode for Bandwidth HT40 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  369 |     WIFI_PHY_MODE_HE20, /**< PHY mode for Bandwidth HE20 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 | } wifi_phy_mode_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:362:9: warning: enum 'wifi_phy_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  362 | typedef enum
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:377:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  377 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  378 |     uint8_t element_id;      /**< Should be set to WIFI_VENDOR_IE_ELEMENT_ID (0xDD) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  379 |     uint8_t length;          /**< Length of all bytes in the element data following this field. Minimum 4. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |     uint8_t vendor_oui[3];   /**< Vendor identifier (OUI). */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |     uint8_t vendor_oui_type; /**< Vendor-specific OUI type. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     uint8_t payload[0];      /**< Payload. Length is equal to value in 'length' field, minus 4. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  383 | } vendor_ie_data_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:386:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  386 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  387 |     signed rssi:8;                /**< Received Signal Strength Indicator(RSSI) of packet. unit: dBm */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  388 |     unsigned rate:5;              /**< PHY rate encoding of the packet. Only valid for non HT(11bg) packet */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  389 |     unsigned :1;                  /**< reserved */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |     unsigned sig_mode:2;          /**< 0: non HT(11bg) packet; 1: HT(11n) packet; 3: VHT(11ac) packet */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |     unsigned :16;                 /**< reserved */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     unsigned mcs:7;               /**< Modulation Coding Scheme. If is HT(11n) packet, shows the modulation, range from 0 to 76(MSC0 ~ MCS76) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  393 |     unsigned cwb:1;               /**< Channel Bandwidth of the packet. 0: 20MHz; 1: 40MHz */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  394 |     unsigned :16;                 /**< reserved */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  395 |     unsigned smoothing:1;         /**< reserved */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  396 |     unsigned not_sounding:1;      /**< reserved */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |     unsigned :1;                  /**< reserved */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  398 |     unsigned aggregation:1;       /**< Aggregation. 0: MPDU packet; 1: AMPDU packet */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  399 |     unsigned stbc:2;              /**< Space Time Block Code(STBC). 0: non STBC packet; 1: STBC packet */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |     unsigned fec_coding:1;        /**< Flag is set for 11n packets which are LDPC */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |     unsigned sgi:1;               /**< Short Guide Interval(SGI). 0: Long GI; 1: Short GI */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:437:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  437 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  438 |     wifi_pkt_rx_ctrl_t rx_ctrl; /**< metadata header */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  439 |     uint8_t payload[0];       /**< Data or management payload. Length of payload is described by rx_ctrl.sig_len. Type of content determined by packet type argument of callback. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  440 | } wifi_promiscuous_pkt_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:448:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  448 | typedef enum {
      | ^~~~~~~~~~~~~~
  449 |     WIFI_PKT_MGMT,  /**< Management frame, indicates 'buf' argument is wifi_promiscuous_pkt_t */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  450 |     WIFI_PKT_CTRL,  /**< Control frame, indicates 'buf' argument is wifi_promiscuous_pkt_t */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  451 |     WIFI_PKT_DATA,  /**< Data frame, indiciates 'buf' argument is wifi_promiscuous_pkt_t */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  452 |     WIFI_PKT_MISC,  /**< Other type, such as MIMO etc. 'buf' argument is wifi_promiscuous_pkt_t but the payload is zero length. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  453 | } wifi_promiscuous_pkt_type_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:448:9: warning: enum 'wifi_promiscuous_pkt_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  448 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:477:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  477 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  478 |     uint32_t filter_mask; /**< OR of one or more filter values WIFI_PROMIS_FILTER_* */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  479 | } wifi_promiscuous_filter_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:489:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  489 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  490 |     bool lltf_en;           /**< enable to receive legacy long training field(lltf) data. Default enabled */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  491 |     bool htltf_en;          /**< enable to receive HT long training field(htltf) data. Default enabled */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  492 |     bool stbc_htltf2_en;    /**< enable to receive space time block code HT long training field(stbc-htltf2) data. Default enabled */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  493 |     bool ltf_merge_en;      /**< enable to generate htlft data by averaging lltf and ht_ltf data when receiving HT packet. Otherwise, use ht_ltf data directly. Default enabled */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  494 |     bool channel_filter_en; /**< enable to turn on channel filter to smooth adjacent sub-carrier. Disable it to keep independence of adjacent sub-carrier. Default enabled */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  495 |     bool manu_scale;        /**< manually scale the CSI data by left shifting or automatically scale the CSI data. If set true, please set the shift bits. false: automatically. true: manually. Default false */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  496 |     uint8_t shift;          /**< manually left shift bits of the scale of the CSI data. The range of the left shift bits is 0~15 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  497 | } wifi_csi_config_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:503:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  503 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  504 |     wifi_pkt_rx_ctrl_t rx_ctrl;/**< received packet radio metadata header of the CSI data */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  505 |     uint8_t mac[6];            /**< source MAC address of the CSI data */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  506 |     bool first_word_invalid;   /**< first four bytes of the CSI data is invalid or not */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  507 |     int8_t *buf;               /**< buffer of CSI data */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  508 |     uint16_t len;              /**< length of CSI data */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  509 | } wifi_csi_info_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:515:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  515 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  516 |     uint8_t gpio_select: 1,           /**< Whether this GPIO is connected to external antenna switch */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  517 |             gpio_num: 7;              /**< The GPIO number that connects to external antenna switch */
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  518 | } wifi_ant_gpio_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:524:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  524 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  525 |     wifi_ant_gpio_t  gpio_cfg[4];  /**< The configurations of GPIOs that connect to external antenna switch */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  526 | } wifi_ant_gpio_config_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:532:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  532 | typedef enum {
      | ^~~~~~~~~~~~~~
  533 |     WIFI_ANT_MODE_ANT0,          /**< Enable WiFi antenna 0 only */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  534 |     WIFI_ANT_MODE_ANT1,          /**< Enable WiFi antenna 1 only */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  535 |     WIFI_ANT_MODE_AUTO,          /**< Enable WiFi antenna 0 and 1, automatically select an antenna */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  536 |     WIFI_ANT_MODE_MAX,           /**< Invalid WiFi enabled antenna */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  537 | } wifi_ant_mode_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:532:9: warning: enum 'wifi_ant_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  532 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:543:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  543 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  544 |     wifi_ant_mode_t rx_ant_mode;          /**< WiFi antenna mode for receiving */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  545 |     wifi_ant_t      rx_ant_default;       /**< Default antenna mode for receiving, it's ignored if rx_ant_mode is not WIFI_ANT_MODE_AUTO */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  546 |     wifi_ant_mode_t tx_ant_mode;          /**< WiFi antenna mode for transmission, it can be set to WIFI_ANT_MODE_AUTO only if rx_ant_mode is set to WIFI_ANT_MODE_AUTO */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  547 |     uint8_t         enabled_ant0: 4,      /**< Index (in antenna GPIO configuration) of enabled WIFI_ANT_MODE_ANT0 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  548 |                     enabled_ant1: 4;      /**< Index (in antenna GPIO configuration) of enabled WIFI_ANT_MODE_ANT1 */
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  549 | } wifi_ant_config_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:560:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  560 | typedef int (* wifi_action_rx_cb_t)(uint8_t *hdr, uint8_t *payload,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  561 |                                     size_t len, uint8_t channel);
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:568:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  568 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  569 |     wifi_interface_t ifx;       /**< WiFi interface to send request to */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  570 |     uint8_t dest_mac[6];        /**< Destination MAC address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  571 |     bool no_ack;                /**< Indicates no ack required */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  572 |     wifi_action_rx_cb_t rx_cb;  /**< Rx Callback to receive any response */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  573 |     uint32_t data_len;          /**< Length of the appended Data */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  574 |     uint8_t data[0];            /**< Appended Data payload */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  575 | } wifi_action_tx_req_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:581:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  581 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  582 |     uint8_t resp_mac[6];        /**< MAC address of the FTM Responder */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  583 |     uint8_t channel;            /**< Primary channel of the FTM Responder */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  584 |     uint8_t frm_count;          /**< No. of FTM frames requested in terms of 4 or 8 bursts (allowed values - 0(No pref), 16, 24, 32, 64) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  585 |     uint16_t burst_period;      /**< Requested time period between consecutive FTM bursts in 100's of milliseconds (0 - No pref) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  586 | } wifi_ftm_initiator_cfg_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:592:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  592 | typedef enum {
      | ^~~~~~~~~~~~~~
  593 |     WIFI_PHY_RATE_1M_L      = 0x00, /**< 1 Mbps with long preamble */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  594 |     WIFI_PHY_RATE_2M_L      = 0x01, /**< 2 Mbps with long preamble */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  595 |     WIFI_PHY_RATE_5M_L      = 0x02, /**< 5.5 Mbps with long preamble */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  596 |     WIFI_PHY_RATE_11M_L     = 0x03, /**< 11 Mbps with long preamble */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  597 |     WIFI_PHY_RATE_2M_S      = 0x05, /**< 2 Mbps with short preamble */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  598 |     WIFI_PHY_RATE_5M_S      = 0x06, /**< 5.5 Mbps with short preamble */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  599 |     WIFI_PHY_RATE_11M_S     = 0x07, /**< 11 Mbps with short preamble */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  600 |     WIFI_PHY_RATE_48M       = 0x08, /**< 48 Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  601 |     WIFI_PHY_RATE_24M       = 0x09, /**< 24 Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  602 |     WIFI_PHY_RATE_12M       = 0x0A, /**< 12 Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  603 |     WIFI_PHY_RATE_6M        = 0x0B, /**< 6 Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  604 |     WIFI_PHY_RATE_54M       = 0x0C, /**< 54 Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  605 |     WIFI_PHY_RATE_36M       = 0x0D, /**< 36 Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  606 |     WIFI_PHY_RATE_18M       = 0x0E, /**< 18 Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  607 |     WIFI_PHY_RATE_9M        = 0x0F, /**< 9 Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:592:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  592 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:592:9: warning: enum 'wifi_phy_rate_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:631:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  631 | typedef enum {
      | ^~~~~~~~~~~~~~
  632 |     WIFI_EVENT_WIFI_READY = 0,           /**< ESP32 WiFi ready */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  633 |     WIFI_EVENT_SCAN_DONE,                /**< ESP32 finish scanning AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  634 |     WIFI_EVENT_STA_START,                /**< ESP32 station start */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  635 |     WIFI_EVENT_STA_STOP,                 /**< ESP32 station stop */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  636 |     WIFI_EVENT_STA_CONNECTED,            /**< ESP32 station connected to AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  637 |     WIFI_EVENT_STA_DISCONNECTED,         /**< ESP32 station disconnected from AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  638 |     WIFI_EVENT_STA_AUTHMODE_CHANGE,      /**< the auth mode of AP connected by ESP32 station changed */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  639 | 
  640 |     WIFI_EVENT_STA_WPS_ER_SUCCESS,       /**< ESP32 station wps succeeds in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  641 |     WIFI_EVENT_STA_WPS_ER_FAILED,        /**< ESP32 station wps fails in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  642 |     WIFI_EVENT_STA_WPS_ER_TIMEOUT,       /**< ESP32 station wps timeout in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  643 |     WIFI_EVENT_STA_WPS_ER_PIN,           /**< ESP32 station wps pin code in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  644 |     WIFI_EVENT_STA_WPS_ER_PBC_OVERLAP,   /**< ESP32 station wps overlap in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  645 | 
  646 |     WIFI_EVENT_AP_START,                 /**< ESP32 soft-AP start */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:631:9: warning: enum 'wifi_event_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  631 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:670:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  670 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  671 |     uint32_t status;          /**< status of scanning APs: 0 ΓÇö success, 1 - failure */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  672 |     uint8_t  number;          /**< number of scan results */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  673 |     uint8_t  scan_id;         /**< scan sequence number, used for block scan */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  674 | } wifi_event_sta_scan_done_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:677:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  677 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  678 |     uint8_t ssid[32];         /**< SSID of connected AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  679 |     uint8_t ssid_len;         /**< SSID length of connected AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  680 |     uint8_t bssid[6];         /**< BSSID of connected AP*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  681 |     uint8_t channel;          /**< channel of connected AP*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  682 |     wifi_auth_mode_t authmode;/**< authentication mode used by AP*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  683 | } wifi_event_sta_connected_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:686:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  686 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  687 |     uint8_t ssid[32];         /**< SSID of disconnected AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  688 |     uint8_t ssid_len;         /**< SSID length of disconnected AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  689 |     uint8_t bssid[6];         /**< BSSID of disconnected AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  690 |     uint8_t reason;           /**< reason of disconnection */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  691 |     int8_t  rssi;             /**< rssi of disconnection */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  692 | } wifi_event_sta_disconnected_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:695:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  695 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  696 |     wifi_auth_mode_t old_mode;         /**< the old auth mode of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  697 |     wifi_auth_mode_t new_mode;         /**< the new auth mode of AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  698 | } wifi_event_sta_authmode_change_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:701:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  701 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  702 |     uint8_t pin_code[8];         /**< PIN code of station in enrollee mode */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  703 | } wifi_event_sta_wps_er_pin_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:706:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  706 | typedef enum {
      | ^~~~~~~~~~~~~~
  707 |     WPS_FAIL_REASON_NORMAL = 0,     /**< ESP32 WPS normal fail reason */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  708 |     WPS_FAIL_REASON_RECV_M2D,       /**< ESP32 WPS receive M2D frame */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  709 |     WPS_FAIL_REASON_MAX
      |     ~~~~~~~~~~~~~~~~~~~
  710 | } wifi_event_sta_wps_fail_reason_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:706:9: warning: enum 'wifi_event_sta_wps_fail_reason_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  706 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:717:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  717 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  718 |     uint8_t ap_cred_cnt;                        /**< Number of AP credentials received */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  719 |     struct {
      |     ~~~~~~~~
  720 |         uint8_t ssid[MAX_SSID_LEN];             /**< SSID of AP */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  721 |         uint8_t passphrase[MAX_PASSPHRASE_LEN]; /**< Passphrase for the AP */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  722 |     } ap_cred[MAX_WPS_AP_CRED];                 /**< All AP credentials received from WPS handshake */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  723 | } wifi_event_sta_wps_er_success_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:726:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  726 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  727 |     uint8_t mac[6];           /**< MAC address of the station connected to ESP32 soft-AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  728 |     uint8_t aid;              /**< the aid that ESP32 soft-AP gives to the station connected to  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  729 |     bool is_mesh_child;       /**< flag to identify mesh child */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  730 | } wifi_event_ap_staconnected_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:733:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  733 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  734 |     uint8_t mac[6];           /**< MAC address of the station disconnects to ESP32 soft-AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  735 |     uint8_t aid;              /**< the aid that ESP32 soft-AP gave to the station disconnects to  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  736 |     bool is_mesh_child;       /**< flag to identify mesh child */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  737 | } wifi_event_ap_stadisconnected_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:740:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  740 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  741 |     int rssi;                 /**< Received probe request signal strength */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  742 |     uint8_t mac[6];           /**< MAC address of the station which send probe request */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  743 | } wifi_event_ap_probe_req_rx_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:746:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  746 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  747 |     int32_t rssi;                 /**< RSSI value of bss */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  748 | } wifi_event_bss_rssi_low_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:754:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  754 | typedef enum {
      | ^~~~~~~~~~~~~~
  755 |     FTM_STATUS_SUCCESS = 0,     /**< FTM exchange is successful */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  756 |     FTM_STATUS_UNSUPPORTED,     /**< Peer does not support FTM */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  757 |     FTM_STATUS_CONF_REJECTED,   /**< Peer rejected FTM configuration in FTM Request */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  758 |     FTM_STATUS_NO_RESPONSE,     /**< Peer did not respond to FTM Requests */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  759 |     FTM_STATUS_FAIL,            /**< Unknown error during FTM exchange */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  760 | } wifi_ftm_status_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:754:9: warning: enum 'wifi_ftm_status_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  754 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:763:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  763 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  764 |     uint8_t dlog_token;     /**< Dialog Token of the FTM frame */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  765 |     int8_t rssi;            /**< RSSI of the FTM frame received */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  766 |     uint32_t rtt;           /**< Round Trip Time in pSec with a peer */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  767 |     uint64_t t1;            /**< Time of departure of FTM frame from FTM Responder in pSec */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  768 |     uint64_t t2;            /**< Time of arrival of FTM frame at FTM Initiator in pSec */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  769 |     uint64_t t3;            /**< Time of departure of ACK from FTM Initiator in pSec */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  770 |     uint64_t t4;            /**< Time of arrival of ACK at FTM Responder in pSec */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  771 | } wifi_ftm_report_entry_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:774:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  774 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  775 |     uint8_t peer_mac[6];                        /**< MAC address of the FTM Peer */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  776 |     wifi_ftm_status_t status;                   /**< Status of the FTM operation */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  777 |     uint32_t rtt_raw;                           /**< Raw average Round-Trip-Time with peer in Nano-Seconds */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  778 |     uint32_t rtt_est;                           /**< Estimated Round-Trip-Time with peer in Nano-Seconds */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  779 |     uint32_t dist_est;                          /**< Estimated one-way distance in Centi-Meters */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  780 |     wifi_ftm_report_entry_t *ftm_report_data;   /**< Pointer to FTM Report with multiple entries, should be freed after use */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  781 |     uint8_t ftm_report_num_entries;             /**< Number of entries in the FTM Report data */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  782 | } wifi_event_ftm_report_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:792:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  792 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  793 |     wifi_interface_t ifx;     /**< WiFi interface to send request to */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  794 |     uint32_t context;         /**< Context to identify the request */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  795 |     uint8_t da[6];            /**< Destination MAC address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  796 |     uint8_t status;           /**< Status of the operation */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  797 | } wifi_event_action_tx_status_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_wifi\include\esp_wifi_types.h:800:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  800 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  801 |     uint32_t context;         /**< Context to identify the request */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  802 | } wifi_event_roc_done_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\esp_additions\freertos/task_snapshot.h:18:10: warning: circular header file dependency detected while including 'task.h', please check the include path [misc-header-include-cycle]
   18 | #include "freertos/task.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3526:10: note: 'task_snapshot.h' included from here
 3526 | #include "freertos/task_snapshot.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\Arduino.h:34:10: note: 'task.h' included from here
   34 | #include "freertos/task.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\esp_additions\freertos/task_snapshot.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   46 | typedef struct xTASK_SNAPSHOT
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 | {
      | ~
   48 |         void        *pxTCB;         /*!< Address of task control block. */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         StackType_t *pxTopOfStack;  /*!< Points to the location of the last item placed on the tasks stack. */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |         StackType_t *pxEndOfStack;  /*!< Points to the end of the stack. pxTopOfStack < pxEndOfStack, stack grows hi2lo
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |                                                                         pxTopOfStack > pxEndOfStack, stack grows lo2hi*/
      |                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 | } TaskSnapshot_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\esp_additions\freertos/task_snapshot.h:64:52: warning: parameter 'pxTaskSnapshotArray' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   64 | UBaseType_t uxTaskGetSnapshotAll( TaskSnapshot_t * const pxTaskSnapshotArray, const UBaseType_t uxArraySize, UBaseType_t * const pxTcbSz );
      |                                                    ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\esp_additions\freertos/task_snapshot.h:64:79: warning: parameter 'uxArraySize' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   64 | UBaseType_t uxTaskGetSnapshotAll( TaskSnapshot_t * const pxTaskSnapshotArray, const UBaseType_t uxArraySize, UBaseType_t * const pxTcbSz );
      |                                                                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\esp_additions\freertos/task_snapshot.h:64:124: warning: parameter 'pxTcbSz' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   64 | UBaseType_t uxTaskGetSnapshotAll( TaskSnapshot_t * const pxTaskSnapshotArray, const UBaseType_t uxArraySize, UBaseType_t * const pxTcbSz );
      |                                                                                                                            ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1165:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1165 | typedef struct xSTATIC_LIST_ITEM StaticListItem_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using StaticListItem_t = struct xSTATIC_LIST_ITEM
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1176:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1176 | typedef struct xSTATIC_MINI_LIST_ITEM StaticMiniListItem_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using StaticMiniListItem_t = struct xSTATIC_MINI_LIST_ITEM
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1179:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1179 | typedef struct xSTATIC_LIST
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
 1180 | {
      | ~
 1181 |     #if ( configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES == 1 )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1182 |         TickType_t xDummy1;
      |         ~~~~~~~~~~~~~~~~~~~
 1183 |     #endif
      |     ~~~~~~
 1184 |     UBaseType_t uxDummy2;
      |     ~~~~~~~~~~~~~~~~~~~~~
 1185 |     void * pvDummy3;
      |     ~~~~~~~~~~~~~~~~
 1186 |     StaticMiniListItem_t xDummy4;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1187 |     #if ( configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES == 1 )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1188 |         TickType_t xDummy5;
      |         ~~~~~~~~~~~~~~~~~~~
 1189 |     #endif
      |     ~~~~~~
 1190 | } StaticList_t;
      | ~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1205:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1205 | typedef struct xSTATIC_TCB
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
 1206 | {
      | ~
 1207 |     void * pxDummy1;
      |     ~~~~~~~~~~~~~~~~
 1208 |     #if ( portUSING_MPU_WRAPPERS == 1 )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1209 |         xMPU_SETTINGS xDummy2;
      |         ~~~~~~~~~~~~~~~~~~~~~~
 1210 |     #endif
      |     ~~~~~~
 1211 |     StaticListItem_t xDummy3[ 2 ];
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1212 |     UBaseType_t uxDummy5;
      |     ~~~~~~~~~~~~~~~~~~~~~
 1213 |     void * pxDummy6;
      |     ~~~~~~~~~~~~~~~~
 1214 |     uint8_t ucDummy7[ configMAX_TASK_NAME_LEN ];
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1215 |     BaseType_t xDummyCore;
      |     ~~~~~~~~~~~~~~~~~~~~~~
 1216 |     #if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1217 |         void * pxDummy8;
      |         ~~~~~~~~~~~~~~~~
 1218 |     #endif
      |     ~~~~~~
 1219 |     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1220 |         UBaseType_t uxDummy9;
      |         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1205:16: warning: constructor does not initialize these fields: pxDummy1, xDummy2, xDummy3, uxDummy5, pxDummy6, ucDummy7, xDummyCore, pxDummy8, uxDummy12, pvDummy15, pvDummyLocalStorageCallBack, ulDummy18, ucDummy19, uxDummy20, ucDummy21 [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
 1205 | typedef struct xSTATIC_TCB
      |                ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1273:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1273 | typedef struct xSTATIC_QUEUE
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1274 | {
      | ~
 1275 |     void * pvDummy1[ 3 ];
      |     ~~~~~~~~~~~~~~~~~~~~~
 1276 | 
 1277 |     union
      |     ~~~~~
 1278 |     {
      |     ~
 1279 |         void * pvDummy2;
      |         ~~~~~~~~~~~~~~~~
 1280 |         UBaseType_t uxDummy2;
      |         ~~~~~~~~~~~~~~~~~~~~~
 1281 |     } u;
      |     ~~~~
 1282 | 
 1283 |     StaticList_t xDummy3[ 2 ];
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
 1284 |     UBaseType_t uxDummy4[ 3 ];
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
 1285 |     uint8_t ucDummy5[ 2 ];
      |     ~~~~~~~~~~~~~~~~~~~~~~
 1286 | 
 1287 |     #if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1288 |         uint8_t ucDummy6;
      |         ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1303:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1303 | typedef StaticQueue_t StaticSemaphore_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using StaticSemaphore_t = StaticQueue_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1319:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1319 | typedef struct xSTATIC_EVENT_GROUP
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1320 | {
      | ~
 1321 |     TickType_t xDummy1;
      |     ~~~~~~~~~~~~~~~~~~~
 1322 |     StaticList_t xDummy2;
      |     ~~~~~~~~~~~~~~~~~~~~~
 1323 | 
 1324 |     #if ( configUSE_TRACE_FACILITY == 1 )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1325 |         UBaseType_t uxDummy3;
      |         ~~~~~~~~~~~~~~~~~~~~~
 1326 |     #endif
      |     ~~~~~~
 1327 | 
 1328 |     #if ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1329 |         uint8_t ucDummy4;
      |         ~~~~~~~~~~~~~~~~~
 1330 |     #endif
      |     ~~~~~~
 1331 | #ifdef ESP_PLATFORM
      | ~~~~~~~~~~~~~~~~~~~
 1332 |     portMUX_TYPE xDummy5;       //Mutex required due to SMP
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1333 | #endif // ESP_PLATFORM
      | ~~~~~~~~~~~~~~~~~~~~~~
 1334 | } StaticEventGroup_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1350:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1350 | typedef struct xSTATIC_TIMER
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1351 | {
      | ~
 1352 |     void * pvDummy1;
      |     ~~~~~~~~~~~~~~~~
 1353 |     StaticListItem_t xDummy2;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
 1354 |     TickType_t xDummy3;
      |     ~~~~~~~~~~~~~~~~~~~
 1355 |     void * pvDummy5;
      |     ~~~~~~~~~~~~~~~~
 1356 |     TaskFunction_t pvDummy6;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
 1357 |     #if ( configUSE_TRACE_FACILITY == 1 )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1358 |         UBaseType_t uxDummy7;
      |         ~~~~~~~~~~~~~~~~~~~~~
 1359 |     #endif
      |     ~~~~~~
 1360 |     uint8_t ucDummy8;
      |     ~~~~~~~~~~~~~~~~~
 1361 | } StaticTimer_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1377:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1377 | typedef struct xSTATIC_STREAM_BUFFER
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1378 | {
      | ~
 1379 |     size_t uxDummy1[ 4 ];
      |     ~~~~~~~~~~~~~~~~~~~~~
 1380 |     void * pvDummy2[ 3 ];
      |     ~~~~~~~~~~~~~~~~~~~~~
 1381 |     uint8_t ucDummy3;
      |     ~~~~~~~~~~~~~~~~~
 1382 |     #if ( configUSE_TRACE_FACILITY == 1 )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1383 |         UBaseType_t uxDummy4;
      |         ~~~~~~~~~~~~~~~~~~~~~
 1384 |     #endif
      |     ~~~~~~
 1385 | #ifdef ESP_PLATFORM
      | ~~~~~~~~~~~~~~~~~~~
 1386 |     portMUX_TYPE xDummy5;       //Mutex required due to SMP
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1387 | #endif // ESP_PLATFORM
      | ~~~~~~~~~~~~~~~~~~~~~~
 1388 | } StaticStreamBuffer_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/FreeRTOS.h:1391:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1391 | typedef StaticStreamBuffer_t StaticMessageBuffer_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using StaticMessageBuffer_t = StaticStreamBuffer_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   88 | typedef void * EventGroupHandle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using EventGroupHandle_t = void *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  102 | typedef TickType_t               EventBits_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using EventBits_t = TickType_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:316:34: warning: parameter 'uxBitsToWaitFor' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  316 |                                  const EventBits_t uxBitsToWaitFor,
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:317:34: warning: parameter 'xClearOnExit' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  317 |                                  const BaseType_t xClearOnExit,
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:318:34: warning: parameter 'xWaitForAllBits' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  318 |                                  const BaseType_t xWaitForAllBits,
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:381:35: warning: parameter 'uxBitsToClear' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  381 |                                   const EventBits_t uxBitsToClear ) PRIVILEGED_FUNCTION;
      |                                   ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:445:77: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  445 |     xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( uint32_t ) uxBitsToClear, NULL )
      |                                                                             ^          
      |                                                                             (          )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:445:103: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  445 |     xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( uint32_t ) uxBitsToClear, NULL )
      |                                                                                                       ^            
      |                                                                                                       (            )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:525:33: warning: parameter 'uxBitsToSet' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  525 |                                 const EventBits_t uxBitsToSet ) PRIVILEGED_FUNCTION;
      |                                 ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:609:75: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  609 |     xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( uint32_t ) uxBitsToSet, pxHigherPriorityTaskWoken )
      |                                                                           ^          
      |                                                                           (          )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:609:101: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  609 |     xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( uint32_t ) uxBitsToSet, pxHigherPriorityTaskWoken )
      |                                                                                                     ^          
      |                                                                                                     (          )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:741:30: warning: parameter 'uxBitsToSet' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  741 |                              const EventBits_t uxBitsToSet,
      |                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:742:30: warning: parameter 'uxBitsToWaitFor' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  742 |                              const EventBits_t uxBitsToWaitFor,
      |                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:809:34: warning: parameter 'ulBitsToSet' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  809 |                                  const uint32_t ulBitsToSet ) PRIVILEGED_FUNCTION;
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/event_groups.h:811:36: warning: parameter 'ulBitsToClear' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  811 |                                    const uint32_t ulBitsToClear ) PRIVILEGED_FUNCTION;
      |                                    ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/semphr.h:36:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   36 | typedef QueueHandle_t SemaphoreHandle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using SemaphoreHandle_t = QueueHandle_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:86:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   86 | typedef void* TaskHandle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
      | using TaskHandle_t = void*
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:94:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   94 | typedef BaseType_t (* TaskHookFunction_t)( void * );
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using TaskHookFunction_t = BaseType_t (* )( void * )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:97:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   97 | typedef enum
      | ^~~~~~~~~~~~
   98 | {
      | ~
   99 |     eRunning = 0,     /* A task is querying the state of itself, so must be running. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  100 |     eReady,           /* The task being queried is in a read or pending ready list. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  101 |     eBlocked,         /* The task being queried is in the Blocked state. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  102 |     eSuspended,       /* The task being queried is in the Suspended state, or is in the Blocked state with an infinite time out. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  103 |     eDeleted,         /* The task being queried has been deleted, but its TCB has not yet been freed. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |     eInvalid          /* Used as an 'invalid state' value. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  105 | } eTaskState;
      | ~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:97:9: warning: enum 'eTaskState' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   97 | typedef enum
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:108:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  108 | typedef enum
      | ^~~~~~~~~~~~
  109 | {
      | ~
  110 |     eNoAction = 0,                /* Notify the task without updating its notify value. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  111 |     eSetBits,                     /* Set bits in the task's notification value. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  112 |     eIncrement,                   /* Increment the task's notification value. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  113 |     eSetValueWithOverwrite,       /* Set the task's notification value to a specific value even if the previous value has not yet been read by the task. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  114 |     eSetValueWithoutOverwrite     /* Set the task's notification value if the previous value has been read by the task. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  115 | } eNotifyAction;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:108:9: warning: enum 'eNotifyAction' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  108 | typedef enum
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:121:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  121 | typedef struct xTIME_OUT
      | ^~~~~~~~~~~~~~~~~~~~~~~~
  122 | {
      | ~
  123 |     BaseType_t xOverflowCount;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  124 |     TickType_t xTimeOnEntering;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  125 | } TimeOut_t;
      | ~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:130:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  130 | typedef struct xMEMORY_REGION
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  131 | {
      | ~
  132 |     void * pvBaseAddress;
      |     ~~~~~~~~~~~~~~~~~~~~~
  133 |     uint32_t ulLengthInBytes;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
  134 |     uint32_t ulParameters;
      |     ~~~~~~~~~~~~~~~~~~~~~~
  135 | } MemoryRegion_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:140:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  140 | typedef struct xTASK_PARAMETERS
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 | {
      | ~
  142 |     TaskFunction_t pvTaskCode;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |     const char * const pcName; /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |     configSTACK_DEPTH_TYPE usStackDepth;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |     void * pvParameters;
      |     ~~~~~~~~~~~~~~~~~~~~
  146 |     UBaseType_t uxPriority;
      |     ~~~~~~~~~~~~~~~~~~~~~~~
  147 |     StackType_t * puxStackBuffer;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |     MemoryRegion_t xRegions[ portNUM_CONFIGURABLE_REGIONS ];
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |     #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         StaticTask_t * const pxTaskBuffer;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |     #endif
      |     ~~~~~~
  152 | } TaskParameters_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:143:24: warning: member 'pcName' of type 'const char *const' is const qualified [cppcoreguidelines-avoid-const-or-ref-data-members]
  143 |     const char * const pcName; /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:150:30: warning: member 'pxTaskBuffer' of type 'StaticTask_t *const' (aka 'xSTATIC_TCB *const') is const qualified [cppcoreguidelines-avoid-const-or-ref-data-members]
  150 |         StaticTask_t * const pxTaskBuffer;
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:156:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  156 | typedef struct xTASK_STATUS
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 | {
      | ~
  158 |     TaskHandle_t xHandle;                            /* The handle of the task to which the rest of the information in the structure relates. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |     const char * pcTaskName;                         /* A pointer to the task's name.  This value will be invalid if the task was deleted since the structure was populated! */ /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |     UBaseType_t xTaskNumber;                         /* A number unique to the task. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |     eTaskState eCurrentState;                        /* The state in which the task existed when the structure was populated. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |     UBaseType_t uxCurrentPriority;                   /* The priority at which the task was running (may be inherited) when the structure was populated. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |     UBaseType_t uxBasePriority;                      /* The priority to which the task will return if the task's current priority has been inherited to avoid unbounded priority inversion when obtaining a mutex.  Only valid if configUSE_MUTEXES is defined as 1 in FreeRTOSConfig.h. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |     uint32_t ulRunTimeCounter;                       /* The total run time allocated to the task so far, as defined by the run time stats clock.  See https://www.FreeRTOS.org/rtos-run-time-stats.html.  Only valid when configGENERATE_RUN_TIME_STATS is defined as 1 in FreeRTOSConfig.h. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  165 |     StackType_t * pxStackBase;                       /* Points to the lowest address of the task's stack area. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  166 |     configSTACK_DEPTH_TYPE usStackHighWaterMark;     /* The minimum amount of stack space that has remained for the task since the task was created.  The closer this value is to zero the closer the task has come to overflowing its stack. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  167 | #if configTASKLIST_INCLUDE_COREID
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  168 |     BaseType_t xCoreID;                              /*!< Core this task is pinned to (0, 1, or -1 for tskNO_AFFINITY). This field is present if CONFIG_FREERTOS_VTASKLIST_INCLUDE_COREID is set. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  169 | #endif
      | ~~~~~~
  170 | } TaskStatus_t;
      | ~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:177:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  177 | typedef enum
      | ^~~~~~~~~~~~
  178 | {
      | ~
  179 |     eAbortSleep = 0,           /* A task has been made ready or a context switch pended since portSUPPORESS_TICKS_AND_SLEEP() was called - abort entering a sleep mode. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  180 |     eStandardSleep,            /* Enter a sleep mode that will not last any longer than the expected idle time. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  181 |     eNoTasksWaitingTimeout     /* No tasks are waiting for a timeout so it is safe to enter a sleep mode that can only be exited by an external interrupt. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  182 | } eSleepModeStatus;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:177:9: warning: enum 'eSleepModeStatus' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  177 | typedef enum
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:345:54: warning: parameter 'pcName' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  345 |                                         const char * const pcName,
      |                                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:346:41: warning: parameter 'usStackDepth' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  346 |                                         const uint32_t usStackDepth,
      |                                         ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:347:48: warning: parameter 'pvParameters' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  347 |                                         void * const pvParameters,
      |                                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:349:56: warning: parameter 'pvCreatedTask' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  349 |                                         TaskHandle_t * const pvCreatedTask,
      |                                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:350:41: warning: parameter 'xCoreID' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  350 |                                         const BaseType_t xCoreID);
      |                                         ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:442:5: warning: 'xTaskCreate' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  442 |     static inline IRAM_ATTR BaseType_t xTaskCreate(
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:450:16: warning: 'xTaskCreatePinnedToCore' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  450 |         return xTaskCreatePinnedToCore( pvTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask, tskNO_AFFINITY );
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:344:16: note: resolves to this declaration
  344 |     BaseType_t xTaskCreatePinnedToCore( TaskFunction_t pvTaskCode,
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:503:62: warning: parameter 'pcName' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  503 |                                                 const char * const pcName,
      |                                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:504:49: warning: parameter 'ulStackDepth' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  504 |                                                 const uint32_t ulStackDepth,
      |                                                 ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:505:56: warning: parameter 'pvParameters' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  505 |                                                 void * const pvParameters,
      |                                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:507:63: warning: parameter 'pxStackBuffer' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  507 |                                                 StackType_t * const pxStackBuffer,
      |                                                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:508:64: warning: parameter 'pxTaskBuffer' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  508 |                                                 StaticTask_t * const pxTaskBuffer,
      |                                                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:509:49: warning: parameter 'xCoreID' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  509 |                                                 const BaseType_t xCoreID );
      |                                                 ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:611:5: warning: 'xTaskCreateStatic' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  611 |     static inline IRAM_ATTR TaskHandle_t xTaskCreateStatic(
      |     ^
      |     LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:620:16: warning: 'xTaskCreateStaticPinnedToCore' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  620 |         return xTaskCreateStaticPinnedToCore( pvTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, tskNO_AFFINITY );
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:502:18: note: resolves to this declaration
  502 |     TaskHandle_t xTaskCreateStaticPinnedToCore( TaskFunction_t pvTaskCode,
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:702:64: warning: parameter 'pxTaskDefinition' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  702 |     BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
      |                                                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:796:70: warning: parameter 'pxTaskDefinition' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  796 |     BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
      |                                                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:852:54: warning: parameter 'pxRegions' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  852 |                               const MemoryRegion_t * const pxRegions ) PRIVILEGED_FUNCTION;
      |                                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:958:18: warning: parameter 'xTicksToDelay' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  958 | void vTaskDelay( const TickType_t xTicksToDelay ) PRIVILEGED_FUNCTION;
      |                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:1029:42: warning: parameter 'pxPreviousWakeTime' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1029 | BaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
      |                                          ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:1030:29: warning: parameter 'xTimeIncrement' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1030 |                             const TickType_t xTimeIncrement ) PRIVILEGED_FUNCTION;
      |                             ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:1129:32: warning: parameter 'xTask' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1129 | UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
      |                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:1129:51: warning: 'xTask' declared with a const-qualified typedef; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
 1129 | UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:86:15: note: typedef declared here
   86 | typedef void* TaskHandle_t;
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:1141:39: warning: parameter 'xTask' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1141 | UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
      |                                       ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:1141:58: warning: 'xTask' declared with a const-qualified typedef; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
 1141 | UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:86:15: note: typedef declared here
   86 | typedef void* TaskHandle_t;
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:1916:9: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1916 |         typedef void (*TlsDeleteCallbackFunction_t)( int, void * );
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         using TlsDeleteCallbackFunction_t = void (*)( int, void * )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:2127:50: warning: parameter 'pxTaskStatusArray' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 2127 | UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
      |                                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:2128:35: warning: parameter 'uxArraySize' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 2128 |                                   const UBaseType_t uxArraySize,
      |                                   ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:2129:46: warning: parameter 'pulTotalRunTime' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 2129 |                                   uint32_t * const pulTotalRunTime ) PRIVILEGED_FUNCTION;
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3147:40: warning: parameter 'pxTimeOut' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3147 | void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut ) PRIVILEGED_FUNCTION;
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3236:46: warning: parameter 'pxTimeOut' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3236 | BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3237:47: warning: parameter 'pxTicksToWait' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3237 |                                  TickType_t * const pxTicksToWait ) PRIVILEGED_FUNCTION;
      |                                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3350:38: warning: parameter 'pxEventList' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3350 | void vTaskPlaceOnEventList( List_t * const pxEventList,
      |                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3351:29: warning: parameter 'xTicksToWait' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3351 |                             const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
      |                             ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3353:38: warning: parameter 'xItemValue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3353 |                                      const TickType_t xItemValue,
      |                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3354:38: warning: parameter 'xTicksToWait' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3354 |                                      const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
      |                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3367:48: warning: parameter 'pxEventList' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3367 | void vTaskPlaceOnEventListRestricted( List_t * const pxEventList,
      |                                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3369:39: warning: parameter 'xWaitIndefinitely' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3369 |                                       const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
      |                                       ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3414:53: warning: parameter 'pxEventList' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3414 | BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList ) PRIVILEGED_FUNCTION;
      |                                                     ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3416:41: warning: parameter 'xItemValue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3416 |                                         const TickType_t xItemValue ) PRIVILEGED_FUNCTION;
      |                                         ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3455:47: warning: parameter 'pxMutexHolder' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3455 | BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
      |                                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3455:53: warning: 'pxMutexHolder' declared with a const-qualified typedef; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
 3455 | BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:86:15: note: typedef declared here
   86 | typedef void* TaskHandle_t;
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3461:50: warning: parameter 'pxMutexHolder' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3461 | BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
      |                                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3461:56: warning: 'pxMutexHolder' declared with a const-qualified typedef; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
 3461 | BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder ) PRIVILEGED_FUNCTION;
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:86:15: note: typedef declared here
   86 | typedef void* TaskHandle_t;
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3471:56: warning: parameter 'pxMutexHolder' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3471 | void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
      |                                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3471:62: warning: 'pxMutexHolder' declared with a const-qualified typedef; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
 3471 | void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:86:15: note: typedef declared here
   86 | typedef void* TaskHandle_t;
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3484:26: warning: parameter 'uxHandle' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3484 |                          const UBaseType_t uxHandle ) PRIVILEGED_FUNCTION;
      |                          ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3494:21: warning: parameter 'xTicksToJump' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3494 | void vTaskStepTick( const TickType_t xTicksToJump ) PRIVILEGED_FUNCTION;
      |                     ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos/task.h:3522:48: warning: parameter 'pxTimeOut' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 3522 | void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut ) PRIVILEGED_FUNCTION;
      |                                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:151:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  151 | typedef struct xLIST_ITEM ListItem_t;                       /* For some reason lint wants this as two separate definitions. */
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ListItem_t = struct xLIST_ITEM
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:160:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  160 | typedef struct xMINI_LIST_ITEM MiniListItem_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using MiniListItem_t = struct xMINI_LIST_ITEM
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:165:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  165 | typedef struct xLIST
      | ^~~~~~~~~~~~~~~~~~~~
  166 | {
      | ~
  167 |     listFIRST_LIST_INTEGRITY_CHECK_VALUE          /*< Set to a known value if configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  168 |     volatile UBaseType_t uxNumberOfItems;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  169 |     ListItem_t * configLIST_VOLATILE pxIndex;     /*< Used to walk through the list.  Points to the last item returned by a call to listGET_OWNER_OF_NEXT_ENTRY (). */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  170 |     MiniListItem_t xListEnd;                      /*< List item that contains the maximum possible item value meaning it is always at the end of the list and is therefore used as a marker. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  171 |     listSECOND_LIST_INTEGRITY_CHECK_VALUE         /*< Set to a known value if configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  172 | } List_t;
      | ~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:346:32: warning: parameter 'pxList' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  346 | void vListInitialise( List_t * const pxList ) PRIVILEGED_FUNCTION;
      |                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:357:40: warning: parameter 'pxItem' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  357 | void vListInitialiseItem( ListItem_t * const pxItem ) PRIVILEGED_FUNCTION;
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:370:28: warning: parameter 'pxList' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  370 | void vListInsert( List_t * const pxList,
      |                            ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:371:32: warning: parameter 'pxNewListItem' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  371 |                   ListItem_t * const pxNewListItem ) PRIVILEGED_FUNCTION;
      |                                ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:392:31: warning: parameter 'pxList' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  392 | void vListInsertEnd( List_t * const pxList,
      |                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:393:35: warning: parameter 'pxNewListItem' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  393 |                      ListItem_t * const pxNewListItem ) PRIVILEGED_FUNCTION;
      |                                   ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\list.h:408:40: warning: parameter 'pxItemToRemove' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  408 | UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove ) PRIVILEGED_FUNCTION;
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\portable.h:229:10: warning: redundant 'vPortStoreTaskMPUSettings' declaration [readability-redundant-declaration]
  229 |     void vPortStoreTaskMPUSettings( xMPU_SETTINGS * xMPUSettings,
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:694:6: note: previously declared here
  694 | void vPortStoreTaskMPUSettings( xMPU_SETTINGS *xMPUSettings, const struct xMEMORY_REGION *const xRegions, StackType_t *pxBottomOfStack, uint32_t usStackDepth ) PRIVILEGED_FUNCTION;
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\portable.h:230:67: warning: parameter 'xRegions' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  230 |                                     const struct xMEMORY_REGION * const xRegions,
      |                                                                   ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\projdefs.h:34:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   34 | typedef void (* TaskFunction_t)( void * );
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using TaskFunction_t = void (* )( void * )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   49 | typedef struct QueueDefinition   * QueueHandle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using QueueHandle_t = struct QueueDefinition   *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   56 | typedef struct QueueDefinition   * QueueSetHandle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using QueueSetHandle_t = struct QueueDefinition   *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:63:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   63 | typedef struct QueueDefinition   * QueueSetMemberHandle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using QueueSetMemberHandle_t = struct QueueDefinition   *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:687:44: warning: parameter 'pvItemToQueue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  687 |                               const void * const pvItemToQueue,
      |                                            ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:689:31: warning: parameter 'xCopyPosition' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  689 |                               const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
      |                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:789:31: warning: parameter 'pvBuffer' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  789 |                        void * const pvBuffer,
      |                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:829:38: warning: parameter 'pvBuffer' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  829 |                               void * const pvBuffer ) PRIVILEGED_FUNCTION;
      |                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:926:34: warning: parameter 'pvBuffer' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  926 |                           void * const pvBuffer,
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:948:37: warning: parameter 'xQueue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  948 | UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                     ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:948:57: warning: 'xQueue' declared with a const-qualified typedef; results in the type being 'QueueDefinition *const' instead of 'const QueueDefinition *' [misc-misplaced-const]
  948 | UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:49:36: note: typedef declared here
   49 | typedef struct QueueDefinition   * QueueHandle_t;
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:971:37: warning: parameter 'xQueue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  971 | UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                     ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:971:57: warning: 'xQueue' declared with a const-qualified typedef; results in the type being 'QueueDefinition *const' instead of 'const QueueDefinition *' [misc-misplaced-const]
  971 | UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:49:36: note: typedef declared here
   49 | typedef struct QueueDefinition   * QueueHandle_t;
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1396:51: warning: parameter 'pvItemToQueue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1396 |                                      const void * const pvItemToQueue,
      |                                                   ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1397:51: warning: parameter 'pxHigherPriorityTaskWoken' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1397 |                                      BaseType_t * const pxHigherPriorityTaskWoken,
      |                                                   ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1398:38: warning: parameter 'xCopyPosition' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1398 |                                      const BaseType_t xCopyPosition ) PRIVILEGED_FUNCTION;
      |                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1400:44: warning: parameter 'pxHigherPriorityTaskWoken' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1400 |                               BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
      |                                            ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1493:41: warning: parameter 'pvBuffer' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1493 |                                  void * const pvBuffer,
      |                                         ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1494:47: warning: parameter 'pxHigherPriorityTaskWoken' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1494 |                                  BaseType_t * const pxHigherPriorityTaskWoken ) PRIVILEGED_FUNCTION;
      |                                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1500:39: warning: parameter 'xQueue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1500 | BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                       ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1500:59: warning: 'xQueue' declared with a const-qualified typedef; results in the type being 'QueueDefinition *const' instead of 'const QueueDefinition *' [misc-misplaced-const]
 1500 | BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:49:36: note: typedef declared here
   49 | typedef struct QueueDefinition   * QueueHandle_t;
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1501:38: warning: parameter 'xQueue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1501 | BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1501:58: warning: 'xQueue' declared with a const-qualified typedef; results in the type being 'QueueDefinition *const' instead of 'const QueueDefinition *' [misc-misplaced-const]
 1501 | BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:49:36: note: typedef declared here
   49 | typedef struct QueueDefinition   * QueueHandle_t;
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1502:44: warning: parameter 'xQueue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1502 | UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                            ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1502:64: warning: 'xQueue' declared with a const-qualified typedef; results in the type being 'QueueDefinition *const' instead of 'const QueueDefinition *' [misc-misplaced-const]
 1502 | UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue ) PRIVILEGED_FUNCTION;
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:49:36: note: typedef declared here
   49 | typedef struct QueueDefinition   * QueueHandle_t;
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1532:34: warning: parameter 'ucQueueType' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1532 | QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1533:40: warning: parameter 'ucQueueType' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1533 | QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType,
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1535:46: warning: parameter 'uxMaxCount' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1535 | QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount,
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1536:46: warning: parameter 'uxInitialCount' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1536 |                                              const UBaseType_t uxInitialCount ) PRIVILEGED_FUNCTION;
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1537:52: warning: parameter 'uxMaxCount' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1537 | QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount,
      |                                                    ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1538:52: warning: parameter 'uxInitialCount' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1538 |                                                    const UBaseType_t uxInitialCount,
      |                                                    ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1623:40: warning: parameter 'uxQueueLength' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1623 |     QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength,
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1624:40: warning: parameter 'uxItemSize' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1624 |                                        const UBaseType_t uxItemSize,
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1625:40: warning: parameter 'ucQueueType' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1625 |                                        const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1634:46: warning: parameter 'uxQueueLength' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1634 |     QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength,
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1635:46: warning: parameter 'uxItemSize' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1635 |                                              const UBaseType_t uxItemSize,
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1638:46: warning: parameter 'ucQueueType' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1638 |                                              const uint8_t ucQueueType ) PRIVILEGED_FUNCTION;
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1689:35: warning: parameter 'uxEventQueueLength' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1689 | QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength ) PRIVILEGED_FUNCTION;
      |                                   ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1771:45: warning: parameter 'xTicksToWait' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1771 |                                             const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
      |                                             ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\queue.h:1783:38: warning: parameter 'xWaitIndefinitely' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1783 |                                      const BaseType_t xWaitIndefinitely ) PRIVILEGED_FUNCTION;
      |                                      ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:79:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   79 | typedef void* TimerHandle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using TimerHandle_t = void*
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:86:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   86 | typedef void (* TimerCallbackFunction_t)( TimerHandle_t xTimer );
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using TimerCallbackFunction_t = void (* )( TimerHandle_t xTimer )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:92:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   92 | typedef void (* PendedFunction_t)( void *,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   93 |                                    uint32_t );
      |                                    ~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:233:46: warning: parameter 'pcTimerName' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  233 |     TimerHandle_t xTimerCreate( const char * const pcTimerName, /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:234:33: warning: parameter 'xTimerPeriodInTicks' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  234 |                                 const TickType_t xTimerPeriodInTicks,
      |                                 ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:235:33: warning: parameter 'uxAutoReload' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  235 |                                 const UBaseType_t uxAutoReload,
      |                                 ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:236:40: warning: parameter 'pvTimerID' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  236 |                                 void * const pvTimerID,
      |                                        ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:363:52: warning: parameter 'pcTimerName' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  363 |     TimerHandle_t xTimerCreateStatic( const char * const pcTimerName, /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
      |                                                    ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:364:39: warning: parameter 'xTimerPeriodInTicks' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  364 |                                       const TickType_t xTimerPeriodInTicks,
      |                                       ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:365:39: warning: parameter 'uxAutoReload' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  365 |                                       const UBaseType_t uxAutoReload,
      |                                       ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:366:46: warning: parameter 'pvTimerID' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  366 |                                       void * const pvTimerID,
      |                                              ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:391:27: warning: parameter 'xTimer' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  391 | void * pvTimerGetTimerID( const TimerHandle_t xTimer ) PRIVILEGED_FUNCTION;
      |                           ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:391:47: warning: 'xTimer' declared with a const-qualified typedef; results in the type being 'void *const' instead of 'const void *' [misc-misplaced-const]
  391 | void * pvTimerGetTimerID( const TimerHandle_t xTimer ) PRIVILEGED_FUNCTION;
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:79:15: note: typedef declared here
   79 | typedef void* TimerHandle_t;
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:1276:27: warning: parameter 'uxAutoReload' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1276 |                           const UBaseType_t uxAutoReload ) PRIVILEGED_FUNCTION;
      |                           ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:1326:34: warning: parameter 'xCommandID' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1326 |                                  const BaseType_t xCommandID,
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:1327:34: warning: parameter 'xOptionalValue' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1327 |                                  const TickType_t xOptionalValue,
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:1328:47: warning: parameter 'pxHigherPriorityTaskWoken' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1328 |                                  BaseType_t * const pxHigherPriorityTaskWoken,
      |                                               ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\timers.h:1329:34: warning: parameter 'xTicksToWait' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
 1329 |                                  const TickType_t xTicksToWait ) PRIVILEGED_FUNCTION;
      |                                  ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:35:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h [llvmlibc-restrict-system-libc-headers]
   35 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   36 | #include <stdbool.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:83:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   83 | typedef portSTACK_TYPE              StackType_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using StackType_t = portSTACK_TYPE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   84 | typedef portBASE_TYPE               BaseType_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using BaseType_t = portBASE_TYPE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:85:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   85 | typedef unsigned portBASE_TYPE      UBaseType_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using UBaseType_t = unsigned portBASE_TYPE      
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:91:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   91 | typedef uint32_t TickType_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using TickType_t = uint32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:96:83: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   96 | #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )  void vFunction( void *pvParameters )
      |                                                                                   ^
      |                                                                                   (           )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:97:83: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   97 | #define portTASK_FUNCTION( vFunction, pvParameters )        void vFunction( void *pvParameters )
      |                                                                                   ^
      |                                                                                   (           )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:163:1: warning: 'xPortSetInterruptMaskFromISR' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  163 | static inline UBaseType_t xPortSetInterruptMaskFromISR(void);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:163:56: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  163 | static inline UBaseType_t xPortSetInterruptMaskFromISR(void);
      |                                                        ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:171:1: warning: 'vPortClearInterruptMaskFromISR' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  171 | static inline void vPortClearInterruptMaskFromISR(UBaseType_t prev_level);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:182:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  182 | typedef spinlock_t                          portMUX_TYPE;               /**< Spinlock type used by FreeRTOS critical sections */
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using portMUX_TYPE = spinlock_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:219:1: warning: 'vPortEnterCritical' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  219 | static inline void __attribute__((always_inline)) vPortEnterCritical(portMUX_TYPE *mux);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:258:1: warning: 'vPortEnterCriticalCompliance' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  258 | static inline void __attribute__((always_inline)) vPortEnterCriticalCompliance(portMUX_TYPE *mux);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:281:1: warning: 'xPortEnterCriticalTimeoutSafe' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  281 | static inline BaseType_t __attribute__((always_inline)) xPortEnterCriticalTimeoutSafe(portMUX_TYPE *mux, BaseType_t timeout);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:291:1: warning: 'vPortEnterCriticalSafe' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  291 | static inline void __attribute__((always_inline)) vPortEnterCriticalSafe(portMUX_TYPE *mux);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:301:1: warning: 'vPortExitCriticalSafe' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  301 | static inline void __attribute__((always_inline)) vPortExitCriticalSafe(portMUX_TYPE *mux);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:343:1: warning: 'xPortCanYield' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  343 | static inline bool IRAM_ATTR xPortCanYield(void);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:343:44: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  343 | static inline bool IRAM_ATTR xPortCanYield(void);
      |                                            ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:385:1: warning: 'xPortGetCoreID' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  385 | static inline BaseType_t IRAM_ATTR xPortGetCoreID(void);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:385:51: warning: redundant void argument list in function declaration [modernize-redundant-void-arg]
  385 | static inline BaseType_t IRAM_ATTR xPortGetCoreID(void);
      |                                                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:404:1: warning: 'uxPortCompareSet' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  404 | static inline void __attribute__((always_inline)) uxPortCompareSet(volatile uint32_t *addr, uint32_t compare, uint32_t *set);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:417:1: warning: 'uxPortCompareSetExtram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  417 | static inline void __attribute__((always_inline)) uxPortCompareSetExtram(volatile uint32_t *addr, uint32_t compare, uint32_t *set);
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:561:1: warning: 'xPortSetInterruptMaskFromISR' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  561 | static inline UBaseType_t __attribute__((always_inline)) xPortSetInterruptMaskFromISR(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:561:87: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  561 | static inline UBaseType_t __attribute__((always_inline)) xPortSetInterruptMaskFromISR(void)
      |                                                                                       ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:563:5: warning: variable 'prev_int_level' of type 'UBaseType_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  563 |     UBaseType_t prev_int_level = XTOS_SET_INTLEVEL(XCHAL_EXCM_LEVEL);
      |     ^
      |                 const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:563:34: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  563 |     UBaseType_t prev_int_level = XTOS_SET_INTLEVEL(XCHAL_EXCM_LEVEL);
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:92:4: note: expanded from macro 'XTOS_SET_INTLEVEL'
   92 |                         __asm__ __volatile__(   "rsil   %0, " XTSTR(intlevel) "\n" \
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:568:1: warning: 'vPortClearInterruptMaskFromISR' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  568 | static inline void __attribute__((always_inline)) vPortClearInterruptMaskFromISR(UBaseType_t prev_level)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:571:5: warning: '_xtos_set_intlevel' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  571 |     XTOS_RESTORE_JUST_INTLEVEL(prev_level);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:108:49: note: expanded from macro 'XTOS_RESTORE_JUST_INTLEVEL'
  108 | # define XTOS_RESTORE_JUST_INTLEVEL(restoreval) _xtos_set_intlevel(restoreval)
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:169:18: note: resolves to this declaration
  169 | extern unsigned         _xtos_set_intlevel( int intlevel );
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:576:1: warning: 'vPortEnterCritical' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  576 | static inline void __attribute__((always_inline)) vPortEnterCritical(portMUX_TYPE *mux)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:578:5: warning: 'xPortEnterCriticalTimeout' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  578 |     xPortEnterCriticalTimeout(mux, portMUX_NO_TIMEOUT);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:207:12: note: resolves to this declaration
  207 | BaseType_t xPortEnterCriticalTimeout(portMUX_TYPE *mux, BaseType_t timeout);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:581:1: warning: 'vPortEnterCriticalCompliance' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  581 | static inline void __attribute__((always_inline)) vPortEnterCriticalCompliance(portMUX_TYPE *mux)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:583:5: warning: 'xPortEnterCriticalTimeoutCompliance' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  583 |     xPortEnterCriticalTimeoutCompliance(mux, portMUX_NO_TIMEOUT);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:248:12: note: resolves to this declaration
  248 | BaseType_t xPortEnterCriticalTimeoutCompliance(portMUX_TYPE *mux, BaseType_t timeout);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:586:1: warning: 'xPortEnterCriticalTimeoutSafe' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  586 | static inline BaseType_t __attribute__((always_inline)) xPortEnterCriticalTimeoutSafe(portMUX_TYPE *mux, BaseType_t timeout)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:588:16: warning: variable 'ret' is not initialized [cppcoreguidelines-init-variables]
  588 |     BaseType_t ret;
      |                ^  
      |                    = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:589:5: warning: if with identical then and else branches [bugprone-branch-clone]
  589 |     if (xPortInIsrContext()) {
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:591:7: note: else branch starts here
  591 |     } else {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:589:9: warning: 'xPortInIsrContext' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  589 |     if (xPortInIsrContext()) {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:132:12: note: resolves to this declaration
  132 | BaseType_t xPortInIsrContext(void);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:589:9: warning: implicit conversion 'BaseType_t' (aka 'int') -> 'bool' [readability-implicit-bool-conversion]
  589 |     if (xPortInIsrContext()) {
      |         ^                  
      |                             != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:590:15: warning: 'xPortEnterCriticalTimeout' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  590 |         ret = portTRY_ENTER_CRITICAL_ISR(mux, timeout);
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:480:53: note: expanded from macro 'portTRY_ENTER_CRITICAL_ISR'
  480 | #define portTRY_ENTER_CRITICAL_ISR(mux, timeout)    xPortEnterCriticalTimeout(mux, timeout)
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:207:12: note: resolves to this declaration
  207 | BaseType_t xPortEnterCriticalTimeout(portMUX_TYPE *mux, BaseType_t timeout);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:592:15: warning: 'xPortEnterCriticalTimeout' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  592 |         ret = portTRY_ENTER_CRITICAL(mux, timeout);
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:475:53: note: expanded from macro 'portTRY_ENTER_CRITICAL'
  475 | #define portTRY_ENTER_CRITICAL(mux, timeout)        xPortEnterCriticalTimeout(mux, timeout)
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:207:12: note: resolves to this declaration
  207 | BaseType_t xPortEnterCriticalTimeout(portMUX_TYPE *mux, BaseType_t timeout);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:597:1: warning: 'vPortEnterCriticalSafe' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  597 | static inline void __attribute__((always_inline)) vPortEnterCriticalSafe(portMUX_TYPE *mux)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:599:5: warning: 'xPortEnterCriticalTimeoutSafe' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  599 |     xPortEnterCriticalTimeoutSafe(mux, portMUX_NO_TIMEOUT);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:586:57: note: resolves to this declaration
  586 | static inline BaseType_t __attribute__((always_inline)) xPortEnterCriticalTimeoutSafe(portMUX_TYPE *mux, BaseType_t timeout)
      |                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:602:1: warning: 'vPortExitCriticalSafe' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  602 | static inline void __attribute__((always_inline)) vPortExitCriticalSafe(portMUX_TYPE *mux)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:604:5: warning: if with identical then and else branches [bugprone-branch-clone]
  604 |     if (xPortInIsrContext()) {
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:606:7: note: else branch starts here
  606 |     } else {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:604:9: warning: 'xPortInIsrContext' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  604 |     if (xPortInIsrContext()) {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:132:12: note: resolves to this declaration
  132 | BaseType_t xPortInIsrContext(void);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:604:9: warning: implicit conversion 'BaseType_t' (aka 'int') -> 'bool' [readability-implicit-bool-conversion]
  604 |     if (xPortInIsrContext()) {
      |         ^                  
      |                             != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:605:9: warning: 'vPortExitCritical' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  605 |         portEXIT_CRITICAL_ISR(mux);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:482:53: note: expanded from macro 'portEXIT_CRITICAL_ISR'
  482 | #define portEXIT_CRITICAL_ISR(mux)                  vPortExitCritical(mux)
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:234:6: note: resolves to this declaration
  234 | void vPortExitCritical(portMUX_TYPE *mux);
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:607:9: warning: 'vPortExitCritical' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  607 |         portEXIT_CRITICAL(mux);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:477:53: note: expanded from macro 'portEXIT_CRITICAL'
  477 | #define portEXIT_CRITICAL(mux)                      vPortExitCritical(mux)
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:234:6: note: resolves to this declaration
  234 | void vPortExitCritical(portMUX_TYPE *mux);
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:613:1: warning: 'xPortCanYield' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  613 | static inline bool IRAM_ATTR xPortCanYield(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:613:44: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  613 | static inline bool IRAM_ATTR xPortCanYield(void)
      |                                            ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:615:5: warning: variable 'ps_reg' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  615 |     uint32_t ps_reg = 0;
      |     ^
      |              const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:618:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  618 |     RSR(PS, ps_reg);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:11:30: note: expanded from macro 'RSR'
   11 | #define RSR(reg, at)         asm volatile ("rsr %0, %1" : "=r" (at) : "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:632:1: warning: 'xPortGetCoreID' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  632 | static inline BaseType_t IRAM_ATTR xPortGetCoreID(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:632:51: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  632 | static inline BaseType_t IRAM_ATTR xPortGetCoreID(void)
      |                                                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:634:12: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'BaseType_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  634 |     return (uint32_t) cpu_hal_get_core_id();
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:634:23: warning: 'cpu_ll_get_core_id' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  634 |     return (uint32_t) cpu_hal_get_core_id();
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:27:41: note: expanded from macro 'cpu_hal_get_core_id'
   27 | #define cpu_hal_get_core_id()           cpu_ll_get_core_id()
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:31:34: note: resolves to this declaration
   31 | static inline uint32_t IRAM_ATTR cpu_ll_get_core_id(void)
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:637:1: warning: 'uxPortCompareSet' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  637 | static inline void __attribute__((always_inline)) uxPortCompareSet(volatile uint32_t *addr, uint32_t compare, uint32_t *set)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:639:5: warning: 'compare_and_set_native' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  639 |     compare_and_set_native(addr, compare, set);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/compare_set.h:22:51: note: resolves to this declaration
   22 | static inline void __attribute__((always_inline)) compare_and_set_native(volatile uint32_t *addr, uint32_t compare, uint32_t *set)
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:642:1: warning: 'uxPortCompareSetExtram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  642 | static inline void __attribute__((always_inline)) uxPortCompareSetExtram(volatile uint32_t *addr, uint32_t compare, uint32_t *set)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:645:5: warning: 'compare_and_set_extram' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  645 |     compare_and_set_extram(addr, compare, set);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/compare_set.h:62:6: note: resolves to this declaration
   62 | void compare_and_set_extram(volatile uint32_t *addr, uint32_t compare, uint32_t *set);
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:663:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  663 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  664 | #if XCHAL_CP_NUM > 0
      | ~~~~~~~~~~~~~~~~~~~~
  665 |     volatile StackType_t *coproc_area; // Pointer to coprocessor save area; MUST BE FIRST
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  666 | #endif
      | ~~~~~~
  667 | 
  668 | #if portUSING_MPU_WRAPPERS
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~
  669 |     // Define here mpu_settings, which is port dependent
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  670 |     int mpu_setting; // Just a dummy example here; MPU not ported to Xtensa yet
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  671 | #endif
      | ~~~~~~
  672 | } xMPU_SETTINGS;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:694:6: warning: function 'vPortStoreTaskMPUSettings' has 1 other declaration with different parameter names [readability-inconsistent-declaration-parameter-name]
  694 | void vPortStoreTaskMPUSettings( xMPU_SETTINGS *xMPUSettings, const struct xMEMORY_REGION *const xRegions, StackType_t *pxBottomOfStack, uint32_t usStackDepth ) PRIVILEGED_FUNCTION;
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\portable.h:229:10: note: the 1st inconsistent declaration seen here
  229 |     void vPortStoreTaskMPUSettings( xMPU_SETTINGS * xMPUSettings,
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\include\freertos\portable.h:229:10: note: differing parameters are named here: ('ulStackDepth'), in the other declaration: ('usStackDepth')
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:694:91: warning: parameter 'xRegions' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
  694 | void vPortStoreTaskMPUSettings( xMPU_SETTINGS *xMPUSettings, const struct xMEMORY_REGION *const xRegions, StackType_t *pxBottomOfStack, uint32_t usStackDepth ) PRIVILEGED_FUNCTION;
      |                                                                                           ^~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:717:41: warning: both sides of operator are equivalent [misc-redundant-expression]
  717 | _Static_assert(portGET_ARGUMENT_COUNT() == 0, "portGET_ARGUMENT_COUNT() result does not match for 0 arguments");
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:718:42: warning: both sides of operator are equivalent [misc-redundant-expression]
  718 | _Static_assert(portGET_ARGUMENT_COUNT(1) == 1, "portGET_ARGUMENT_COUNT() result does not match for 1 argument");
      |                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:20:1: warning: 'portENTER_CRITICAL_NESTED' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   20 | static inline __attribute__((deprecated)) UBaseType_t portENTER_CRITICAL_NESTED(void) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:20:81: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   20 | static inline __attribute__((deprecated)) UBaseType_t portENTER_CRITICAL_NESTED(void) {
      |                                                                                 ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:21:12: warning: 'xPortSetInterruptMaskFromISR' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   21 |     return portSET_INTERRUPT_MASK_FROM_ISR();
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:455:61: note: expanded from macro 'portSET_INTERRUPT_MASK_FROM_ISR'
  455 | #define portSET_INTERRUPT_MASK_FROM_ISR()                   xPortSetInterruptMaskFromISR()
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:561:58: note: resolves to this declaration
  561 | static inline UBaseType_t __attribute__((always_inline)) xPortSetInterruptMaskFromISR(void)
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:31:1: warning: 'portEXIT_CRITICAL_NESTED' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   31 | static inline void __attribute__((deprecated)) portEXIT_CRITICAL_NESTED(UBaseType_t prev_level)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:33:5: warning: 'vPortClearInterruptMaskFromISR' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   33 |     portCLEAR_INTERRUPT_MASK_FROM_ISR(prev_level);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:456:61: note: expanded from macro 'portCLEAR_INTERRUPT_MASK_FROM_ISR'
  456 | #define portCLEAR_INTERRUPT_MASK_FROM_ISR(prev_level)       vPortClearInterruptMaskFromISR(prev_level)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos/portmacro.h:568:51: note: resolves to this declaration
  568 | static inline void __attribute__((always_inline)) vPortClearInterruptMaskFromISR(UBaseType_t prev_level)
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:46:1: warning: 'vPortCPUInitializeMutex' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   46 | static inline void __attribute__((deprecated)) __attribute__((always_inline)) vPortCPUInitializeMutex(portMUX_TYPE *mux)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:48:5: warning: 'spinlock_initialize' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   48 |     spinlock_initialize(mux);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:44:51: note: resolves to this declaration
   44 | static inline void __attribute__((always_inline)) spinlock_initialize(spinlock_t *lock)
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:59:1: warning: 'vPortCPUAcquireMutex' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   59 | static inline void __attribute__((deprecated)) __attribute__((always_inline)) vPortCPUAcquireMutex(portMUX_TYPE *mux)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:61:5: warning: 'spinlock_acquire' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   61 |     spinlock_acquire(mux, portMUX_NO_TIMEOUT);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:67:51: note: resolves to this declaration
   67 | static inline bool __attribute__((always_inline)) spinlock_acquire(spinlock_t *lock, int32_t timeout)
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:76:1: warning: 'vPortCPUAcquireMutexTimeout' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   76 | static inline bool __attribute__((always_inline)) vPortCPUAcquireMutexTimeout(portMUX_TYPE *mux, int timeout)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:78:13: warning: 'spinlock_acquire' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   78 |     return (spinlock_acquire(mux, timeout));
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:67:51: note: resolves to this declaration
   67 | static inline bool __attribute__((always_inline)) spinlock_acquire(spinlock_t *lock, int32_t timeout)
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:90:1: warning: 'vPortCPUReleaseMutex' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   90 | static inline void __attribute__((always_inline)) vPortCPUReleaseMutex(portMUX_TYPE *mux)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\freertos\port\xtensa\include\freertos\portmacro_deprecated.h:92:5: warning: 'spinlock_release' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   92 |     spinlock_release(mux);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_hw_support\include\soc/spinlock.h:148:51: note: resolves to this declaration
  148 | static inline void __attribute__((always_inline)) spinlock_release(spinlock_t *lock)
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:31:1: warning: 'cpu_ll_get_core_id' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   31 | static inline uint32_t IRAM_ATTR cpu_ll_get_core_id(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:31:53: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   31 | static inline uint32_t IRAM_ATTR cpu_ll_get_core_id(void)
      |                                                     ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:33:14: warning: variable 'id' is not initialized [cppcoreguidelines-init-variables]
   33 |     uint32_t id;
      |              ^ 
      |                 = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:33:14: warning: variable name 'id' is too short, expected at least 3 characters [readability-identifier-length]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:34:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   34 |     asm volatile (
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:41:1: warning: 'cpu_ll_get_cycle_count' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   41 | static inline uint32_t IRAM_ATTR cpu_ll_get_cycle_count(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:41:57: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   41 | static inline uint32_t IRAM_ATTR cpu_ll_get_cycle_count(void)
      |                                                         ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:43:14: warning: variable 'result' is not initialized [cppcoreguidelines-init-variables]
   43 |     uint32_t result;
      |              ^     
      |                     = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:44:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   44 |     RSR(CCOUNT, result);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:11:30: note: expanded from macro 'RSR'
   11 | #define RSR(reg, at)         asm volatile ("rsr %0, %1" : "=r" (at) : "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:48:1: warning: 'cpu_ll_set_cycle_count' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   48 | static inline void IRAM_ATTR cpu_ll_set_cycle_count(uint32_t val)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:50:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   50 |     WSR(CCOUNT, val);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:53:1: warning: 'cpu_ll_get_sp' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   53 | static inline void *cpu_ll_get_sp(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:53:35: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   53 | static inline void *cpu_ll_get_sp(void)
      |                                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:55:11: warning: variable 'sp' is not initialized [cppcoreguidelines-init-variables]
   55 |     void *sp;
      |           ^ 
      |              = nullptr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:55:11: warning: variable name 'sp' is too short, expected at least 3 characters [readability-identifier-length]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:56:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   56 |     asm volatile ("mov %0, sp;" : "=r" (sp));
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:60:1: warning: 'cpu_ll_init_hwloop' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   60 | static inline void cpu_ll_init_hwloop(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:60:39: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
   60 | static inline void cpu_ll_init_hwloop(void)
      |                                       ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:68:1: warning: 'cpu_ll_set_breakpoint' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   68 | static inline void cpu_ll_set_breakpoint(int id, uint32_t pc)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:68:46: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
   68 | static inline void cpu_ll_set_breakpoint(int id, uint32_t pc)
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:68:59: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
   68 | static inline void cpu_ll_set_breakpoint(int id, uint32_t pc)
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:70:14: warning: variable 'en' is not initialized [cppcoreguidelines-init-variables]
   70 |     uint32_t en;
      |              ^ 
      |                 = 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:70:14: warning: variable name 'en' is too short, expected at least 3 characters [readability-identifier-length]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:73:9: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
   73 |     if (id) {
      |         ^ 
      |            != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:74:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   74 |         WSR(IBREAKA_1, pc);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:76:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   76 |         WSR(IBREAKA_0, pc);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:80:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   80 |     RSR(IBREAKENABLE, en);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:11:30: note: expanded from macro 'RSR'
   11 | #define RSR(reg, at)         asm volatile ("rsr %0, %1" : "=r" (at) : "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:82:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   82 |     WSR(IBREAKENABLE, en);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:85:1: warning: 'cpu_ll_clear_breakpoint' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   85 | static inline void cpu_ll_clear_breakpoint(int id)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:85:48: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
   85 | static inline void cpu_ll_clear_breakpoint(int id)
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:87:14: warning: variable name 'en' is too short, expected at least 3 characters [readability-identifier-length]
   87 |     uint32_t en = 0;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:88:5: warning: variable 'pc' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
   88 |     uint32_t pc = 0;
      |     ^
      |              const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:88:14: warning: variable name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
   88 |     uint32_t pc = 0;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:91:9: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
   91 |     if (id) {
      |         ^ 
      |            != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:92:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   92 |         WSR(IBREAKA_1, pc);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:94:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   94 |         WSR(IBREAKA_0, pc);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:98:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
   98 |     RSR(IBREAKENABLE, en);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:11:30: note: expanded from macro 'RSR'
   11 | #define RSR(reg, at)         asm volatile ("rsr %0, %1" : "=r" (at) : "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:100:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  100 |     WSR(IBREAKENABLE, en);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:103:1: warning: 'cpu_ll_ptr_to_pc' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  103 | static inline uint32_t cpu_ll_ptr_to_pc(const void *addr)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:105:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  105 |     return ((uint32_t) addr);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:108:1: warning: 'cpu_ll_pc_to_ptr' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  108 | static inline void *cpu_ll_pc_to_ptr(uint32_t pc)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:108:47: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  108 | static inline void *cpu_ll_pc_to_ptr(uint32_t pc)
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:110:12: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  110 |     return (void *) ((pc & 0x3fffffff) | 0x40000000);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:110:12: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:113:1: warning: 'cpu_ll_set_watchpoint' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  113 | static inline void cpu_ll_set_watchpoint(int id,
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:113:46: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  113 | static inline void cpu_ll_set_watchpoint(int id,
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:122:14: warning: loop variable name 'x' is too short, expected at least 2 characters [readability-identifier-length]
  122 |     for (int x = 0; x < 7; x++) {
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:123:21: warning: either cast from 'unsigned int' to 'size_t' (aka 'unsigned long long') is ineffective, or there is loss of precision before the conversion [bugprone-misplaced-widening-cast]
  123 |         if (size == (size_t)(1U << x)) {
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:141:9: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  141 |     if (id) {
      |         ^ 
      |            != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:142:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  142 |         WSR(DBREAKA_1, (uint32_t) addr);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:142:24: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  142 |         WSR(DBREAKA_1, (uint32_t) addr);
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:143:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  143 |         WSR(DBREAKC_1, dbreakc);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:145:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  145 |         WSR(DBREAKA_0, (uint32_t) addr);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:145:24: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  145 |         WSR(DBREAKA_0, (uint32_t) addr);
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:146:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  146 |         WSR(DBREAKC_0, dbreakc);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:150:1: warning: 'cpu_ll_clear_watchpoint' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  150 | static inline void cpu_ll_clear_watchpoint(int id)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:150:48: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  150 | static inline void cpu_ll_clear_watchpoint(int id)
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:153:9: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  153 |     if (id) {
      |         ^ 
      |            != 0
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:154:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  154 |         WSR(DBREAKA_1, 0);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:155:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  155 |         WSR(DBREAKC_1, 0);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:157:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  157 |         WSR(DBREAKA_0, 0);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:158:9: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  158 |         WSR(DBREAKC_0, 0);
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:12:30: note: expanded from macro 'WSR'
   12 | #define WSR(reg, at)         asm volatile ("wsr %0, %1" : : "r" (at), "i" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:162:1: warning: 'cpu_ll_is_debugger_attached' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  162 | static inline bool cpu_ll_is_debugger_attached(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:162:48: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  162 | static inline bool cpu_ll_is_debugger_attached(void)
      |                                                ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:164:5: warning: variable 'dcr' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  164 |     uint32_t dcr = 0;
      |     ^
      |              const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:165:5: warning: variable 'reg' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  165 |     uint32_t reg = DSRSET;
      |     ^
      |              const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:166:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  166 |     RER(reg, dcr);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:15:30: note: expanded from macro 'RER'
   15 | #define RER(reg, at)         asm volatile ("rer %0, %1" : "=r" (at) : "r" (reg))
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:167:12: warning: implicit conversion 'uint32_t' (aka 'unsigned int') -> 'bool' [readability-implicit-bool-conversion]
  167 |     return (dcr & 0x1);
      |            ^          
      |                        != 0u
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:170:1: warning: 'cpu_ll_break' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  170 | static inline void cpu_ll_break(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:170:33: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  170 | static inline void cpu_ll_break(void)
      |                                 ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:172:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  172 |     __asm__ ("break 1,15");
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:175:1: warning: 'cpu_ll_set_vecbase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  175 | static inline void cpu_ll_set_vecbase(const void *vecbase)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:177:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  177 |     asm volatile ("wsr %0, vecbase" :: "r" (vecbase));
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:180:1: warning: 'cpu_ll_waiti' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  180 | static inline void cpu_ll_waiti(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:180:33: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  180 | static inline void cpu_ll_waiti(void)
      |                                 ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:182:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  182 |     asm volatile ("waiti 0\n");
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:185:1: warning: 'cpu_ll_read_dedic_gpio_in' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  185 | static inline uint32_t cpu_ll_read_dedic_gpio_in(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:185:50: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  185 | static inline uint32_t cpu_ll_read_dedic_gpio_in(void)
      |                                                  ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:187:5: warning: variable 'value' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  187 |     uint32_t value = 0;
      |     ^
      |              const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:188:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  188 |     asm volatile("ee.get_gpio_in %0" : "=r"(value) : :);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:192:1: warning: 'cpu_ll_read_dedic_gpio_out' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  192 | static inline uint32_t cpu_ll_read_dedic_gpio_out(void)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:192:51: warning: redundant void argument list in function definition [modernize-redundant-void-arg]
  192 | static inline uint32_t cpu_ll_read_dedic_gpio_out(void)
      |                                                   ^~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:194:5: warning: variable 'value' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  194 |     uint32_t value = 0;
      |     ^
      |              const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:195:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  195 |     asm volatile("rur.gpio_out %0" : "=r"(value) : :);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:199:1: warning: 'cpu_ll_write_dedic_gpio_all' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  199 | static inline void cpu_ll_write_dedic_gpio_all(uint32_t value)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:201:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  201 |     asm volatile("wur.gpio_out %0"::"r"(value):);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:204:1: warning: 'cpu_ll_write_dedic_gpio_mask' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  204 | static inline void cpu_ll_write_dedic_gpio_mask(uint32_t mask, uint32_t value)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\esp32s3\include\hal/cpu_ll.h:206:5: warning: do not use inline assembler in safety-critical code [hicpp-no-assembler]
  206 |     asm volatile("ee.wr_mask_gpio_out %0, %1" : : "r"(value), "r"(mask):);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:19:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   19 | typedef enum {
      | ^~~~~~~~~~~~~~
   20 |     ADC_UNIT_1 = 1,          /*!< SAR ADC 1. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 |     ADC_UNIT_2 = 2,          /*!< SAR ADC 2. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   22 |     ADC_UNIT_BOTH = 3,       /*!< SAR ADC 1 and 2. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   23 |     ADC_UNIT_ALTER = 7,      /*!< SAR ADC 1 and 2 alternative mode. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   24 |     ADC_UNIT_MAX,
      |     ~~~~~~~~~~~~~
   25 | } adc_unit_t;
      | ~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:19:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   19 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:19:9: warning: enum 'adc_unit_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:32:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   32 | typedef enum {
      | ^~~~~~~~~~~~~~
   33 |     ADC_CHANNEL_0 = 0, /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |     ADC_CHANNEL_1,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   35 |     ADC_CHANNEL_2,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   36 |     ADC_CHANNEL_3,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     ADC_CHANNEL_4,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     ADC_CHANNEL_5,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     ADC_CHANNEL_6,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     ADC_CHANNEL_7,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     ADC_CHANNEL_8,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |     ADC_CHANNEL_9,     /*!< ADC channel */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     ADC_CHANNEL_MAX,
      |     ~~~~~~~~~~~~~~~~
   44 | } adc_channel_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:32:9: warning: enum 'adc_channel_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   32 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   49 | typedef enum {
      | ^~~~~~~~~~~~~~
   50 |     ADC_ATTEN_DB_0   = 0,  ///<No input attenuation, ADC can measure up to approx.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |     ADC_ATTEN_DB_2_5 = 1,  ///<The input voltage of ADC will be attenuated extending the range of measurement by about 2.5 dB
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |     ADC_ATTEN_DB_6   = 2,  ///<The input voltage of ADC will be attenuated extending the range of measurement by about 6 dB
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |     ADC_ATTEN_DB_12  = 3,  ///<The input voltage of ADC will be attenuated extending the range of measurement by about 12 dB
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |     ADC_ATTEN_DB_11 __attribute__((deprecated)) = ADC_ATTEN_DB_12,  ///<This is deprecated, it behaves the same as `ADC_ATTEN_DB_12`
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 |     ADC_ATTEN_MAX,
      |     ~~~~~~~~~~~~~~
   56 | } adc_atten_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:49:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   49 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:49:9: warning: enum 'adc_atten_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   62 | typedef enum {
      | ^~~~~~~~~~~~~~
   63 | #if CONFIG_IDF_TARGET_ESP32
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |     ADC_WIDTH_BIT_9  = 0, /*!< ADC capture width is 9Bit. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   65 |     ADC_WIDTH_BIT_10 = 1, /*!< ADC capture width is 10Bit. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   66 |     ADC_WIDTH_BIT_11 = 2, /*!< ADC capture width is 11Bit. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   67 |     ADC_WIDTH_BIT_12 = 3, /*!< ADC capture width is 12Bit. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   68 | #elif SOC_ADC_MAX_BITWIDTH == 12
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   69 |     ADC_WIDTH_BIT_12 = 3, /*!< ADC capture width is 12Bit. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   70 | #elif SOC_ADC_MAX_BITWIDTH == 13
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |     ADC_WIDTH_BIT_13 = 4, /*!< ADC capture width is 13Bit. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 | #endif
      | ~~~~~~
   73 |     ADC_WIDTH_MAX,
      |     ~~~~~~~~~~~~~~
   74 | } adc_bits_width_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:62:9: warning: enum 'adc_bits_width_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   62 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:79:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   79 | typedef enum {
      | ^~~~~~~~~~~~~~
   80 |     ADC_CONV_SINGLE_UNIT_1 = 1,  ///< Only use ADC1 for conversion
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   81 |     ADC_CONV_SINGLE_UNIT_2 = 2,  ///< Only use ADC2 for conversion
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |     ADC_CONV_BOTH_UNIT     = 3,  ///< Use Both ADC1 and ADC2 for conversion simultaneously
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   83 |     ADC_CONV_ALTER_UNIT    = 7,  ///< Use both ADC1 and ADC2 for conversion by turn. e.g. ADC1 -> ADC2 -> ADC1 -> ADC2 .....
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   84 |     ADC_CONV_UNIT_MAX,
      |     ~~~~~~~~~~~~~~~~~~
   85 | } adc_digi_convert_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:79:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   79 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:79:9: warning: enum 'adc_digi_convert_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:90:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   90 | typedef enum {
      | ^~~~~~~~~~~~~~
   91 |     ADC_DIGI_FORMAT_12BIT __attribute__((deprecated)),  /*!<ADC to DMA data format,                [15:12]-channel, [11: 0]-12 bits ADC data (`adc_digi_output_data_t`). Note: For single convert mode. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   92 |     ADC_DIGI_FORMAT_11BIT __attribute__((deprecated)),  /*!<ADC to DMA data format, [15]-adc unit, [14:11]-channel, [10: 0]-11 bits ADC data (`adc_digi_output_data_t`). Note: For multi or alter convert mode. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   93 |     ADC_DIGI_FORMAT_MAX   __attribute__((deprecated)),
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 | 
   95 |     ADC_DIGI_OUTPUT_FORMAT_TYPE1,   ///< See `adc_digi_output_data_t.type1`
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   96 |     ADC_DIGI_OUTPUT_FORMAT_TYPE2,   ///< See `adc_digi_output_data_t.type2`
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   97 | } adc_digi_output_format_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:90:9: warning: enum 'adc_digi_output_format_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   90 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  102 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  103 |     uint8_t atten;      ///< Attenuation of this ADC channel
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |     uint8_t channel;    ///< ADC channel
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  105 |     uint8_t unit;       ///< ADC unit
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  106 |     uint8_t bit_width;  ///< ADC output bit width
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  107 | } adc_digi_pattern_config_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:162:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  162 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  163 |     union {
      |     ~~~~~~~
  164 |         struct {
      |         ~~~~~~~~
  165 |             uint32_t data:          12; /*!<ADC real output data info. Resolution: 12 bit. */
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  166 |             uint32_t reserved12:    1;  /*!<Reserved12. */
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  167 |             uint32_t channel:       4;  /*!<ADC channel index info.
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  168 |                                             If (channel < ADC_CHANNEL_MAX), The data is valid.
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  169 |                                             If (channel > ADC_CHANNEL_MAX), The data is invalid. */
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  170 |             uint32_t unit:          1;  /*!<ADC unit index info. 0: ADC1; 1: ADC2.  */
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  171 |             uint32_t reserved17_31: 14; /*!<Reserved17. */
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  172 |         } type2;                         /*!<When the configured output format is 12bit. `ADC_DIGI_FORMAT_11BIT` */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  173 |         uint32_t val;                   /*!<Raw data value */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  174 |     };
      |     ~~
  175 | } adc_digi_output_data_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:188:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  188 | typedef enum {
      | ^~~~~~~~~~~~~~
  189 |     ADC_ARB_MODE_SHIELD,/*!<Force shield arbiter, Select the highest priority controller to work. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  190 |     ADC_ARB_MODE_FIX,   /*!<Fixed priority switch controller mode. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  191 |     ADC_ARB_MODE_LOOP,  /*!<Loop priority switch controller mode. Each controller has the same priority,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  192 |                             and the arbiter will switch to the next controller after the measurement is completed. */
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  193 | } adc_arbiter_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:188:9: warning: enum 'adc_arbiter_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  188 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:200:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  200 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  201 |     adc_arbiter_mode_t mode; /*!<Refer to ``adc_arbiter_mode_t``. Note: only support ADC2. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  202 |     uint8_t rtc_pri;        /*!<RTC controller priority. Range: 0 ~ 2. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  203 |     uint8_t dig_pri;        /*!<Digital controller priority. Range: 0 ~ 2. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  204 |     uint8_t pwdet_pri;      /*!<Wi-Fi controller priority. Range: 0 ~ 2. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  205 | } adc_arbiter_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:229:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  229 | typedef enum {
      | ^~~~~~~~~~~~~~
  230 |     ADC_DIGI_FILTER_IDX0 = 0, /*!<The filter index 0.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |                                   For ESP32-S2, It can only be used to filter all enabled channels of ADC1 unit at the same time. */
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |     ADC_DIGI_FILTER_IDX1,     /*!<The filter index 1.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |                                   For ESP32-S2, It can only be used to filter all enabled channels of ADC2 unit at the same time. */
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |     ADC_DIGI_FILTER_IDX_MAX
      |     ~~~~~~~~~~~~~~~~~~~~~~~
  235 | } adc_digi_filter_idx_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:229:9: warning: enum 'adc_digi_filter_idx_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  229 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:241:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  241 | typedef enum {
      | ^~~~~~~~~~~~~~
  242 | #if CONFIG_IDF_TARGET_ESP32C3 || CONFIG_IDF_TARGET_ESP32H2
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  243 |     ADC_DIGI_FILTER_DIS = -1,  /*!< Disable filter */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  244 | #endif
      | ~~~~~~
  245 |     ADC_DIGI_FILTER_IIR_2 = 0, /*!<The filter mode is first-order IIR filter. The coefficient is 2. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  246 |     ADC_DIGI_FILTER_IIR_4,     /*!<The filter mode is first-order IIR filter. The coefficient is 4. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  247 |     ADC_DIGI_FILTER_IIR_8,     /*!<The filter mode is first-order IIR filter. The coefficient is 8. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  248 |     ADC_DIGI_FILTER_IIR_16,    /*!<The filter mode is first-order IIR filter. The coefficient is 16. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  249 |     ADC_DIGI_FILTER_IIR_64,    /*!<The filter mode is first-order IIR filter. The coefficient is 64. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  250 |     ADC_DIGI_FILTER_IIR_MAX
      |     ~~~~~~~~~~~~~~~~~~~~~~~
  251 | } adc_digi_filter_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:241:9: warning: enum 'adc_digi_filter_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  241 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:259:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  259 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  260 |     adc_unit_t adc_unit;        /*!<Set adc unit number for filter.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  261 |                                     For ESP32-S2, Filter IDX0/IDX1 can only be used to filter all enabled channels of ADC1/ADC2 unit at the same time. */
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  262 |     adc_channel_t channel;      /*!<Set adc channel number for filter.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  263 |                                     For ESP32-S2, it's always `ADC_CHANNEL_MAX` */
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  264 |     adc_digi_filter_mode_t mode;/*!<Set adc filter mode for filter. See ``adc_digi_filter_mode_t``. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  265 | } adc_digi_filter_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:277:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  277 | typedef enum {
      | ^~~~~~~~~~~~~~
  278 |     ADC_DIGI_MONITOR_IDX0 = 0, /*!<The monitor index 0.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  279 |                                   For ESP32-S2, It can only be used to monitor all enabled channels of ADC1 unit at the same time. */
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  280 |     ADC_DIGI_MONITOR_IDX1,     /*!<The monitor index 1.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  281 |                                   For ESP32-S2, It can only be used to monitor all enabled channels of ADC2 unit at the same time. */
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  282 |     ADC_DIGI_MONITOR_IDX_MAX
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
  283 | } adc_digi_monitor_idx_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:277:9: warning: enum 'adc_digi_monitor_idx_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  277 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:290:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  290 | typedef enum {
      | ^~~~~~~~~~~~~~
  291 | #if CONFIG_IDF_TARGET_ESP32C3 || CONFIG_IDF_TARGET_ESP32H2
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  292 |     ADC_DIGI_MONITOR_DIS = 0,  /*!<Disable monitor. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  293 |     ADC_DIGI_MONITOR_EN,       /*!<If ADC_OUT <  threshold, Generates monitor interrupt. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |                                /*!<If ADC_OUT >  threshold, Generates monitor interrupt. */
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 | #else
      | ~~~~~
  296 |     ADC_DIGI_MONITOR_HIGH = 0,  /*!<If ADC_OUT >  threshold, Generates monitor interrupt. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |     ADC_DIGI_MONITOR_LOW,       /*!<If ADC_OUT <  threshold, Generates monitor interrupt. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 | #endif
      | ~~~~~~
  299 |     ADC_DIGI_MONITOR_MAX
      |     ~~~~~~~~~~~~~~~~~~~~
  300 | } adc_digi_monitor_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:290:9: warning: enum 'adc_digi_monitor_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  290 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:308:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  308 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  309 |     adc_unit_t adc_unit;            /*!<Set adc unit number for monitor.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  310 |                                         For ESP32-S2, monitor IDX0/IDX1 can only be used to monitor all enabled channels of ADC1/ADC2 unit at the same time. */
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |     adc_channel_t channel;          /*!<Set adc channel number for monitor.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |                                         For ESP32-S2, it's always `ADC_CHANNEL_MAX` */
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  313 |     adc_digi_monitor_mode_t mode;   /*!<Set adc monitor mode. See ``adc_digi_monitor_mode_t``. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  314 | #if CONFIG_IDF_TARGET_ESP32C3 || CONFIG_IDF_TARGET_ESP32H2
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  315 |     uint32_t h_threshold;             /*!<Set monitor threshold of adc digital controller. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  316 |     uint32_t l_threshold;             /*!<Set monitor threshold of adc digital controller. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 | #else
      | ~~~~~
  318 |     uint32_t threshold;             /*!<Set monitor threshold of adc digital controller. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  319 | #endif
      | ~~~~~~
  320 | } adc_digi_monitor_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:337:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  337 | typedef enum {
      | ^~~~~~~~~~~~~~
  338 |     ADC_I2S_DATA_SRC_IO_SIG = 0, /*!< I2S data from GPIO matrix signal  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  339 |     ADC_I2S_DATA_SRC_ADC = 1,    /*!< I2S data from ADC */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |     ADC_I2S_DATA_SRC_MAX,
      |     ~~~~~~~~~~~~~~~~~~~~~
  341 | } adc_i2s_source_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:337:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  337 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/adc_types.h:337:9: warning: enum 'adc_i2s_source_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:83:33: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
   83 | void cpu_hal_set_breakpoint(int id, const void* addr);
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:90:35: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
   90 | void cpu_hal_clear_breakpoint(int id);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:104:33: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  104 | void cpu_hal_set_watchpoint(int id, const void* addr, size_t size, watchpoint_trigger_t trigger);
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_hal.h:111:35: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  111 | void cpu_hal_clear_watchpoint(int id);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_types.h:17:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   17 | typedef enum {
      | ^~~~~~~~~~~~~~
   18 |     WATCHPOINT_TRIGGER_ON_RO,       // on read
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   19 |     WATCHPOINT_TRIGGER_ON_WO,       // on write
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   20 |     WATCHPOINT_TRIGGER_ON_RW        // on either read or write
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 | } watchpoint_trigger_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/cpu_types.h:17:9: warning: enum 'watchpoint_trigger_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   17 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:26:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   26 | typedef enum {
      | ^~~~~~~~~~~~~~
   27 |     EMAC_DATA_INTERFACE_RMII,    /*!< Reduced Media Independent Interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   28 |     EMAC_DATA_INTERFACE_MII,     /*!< Media Independent Interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 | } eth_data_interface_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:26:9: warning: enum 'eth_data_interface_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   26 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:35:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   35 | typedef enum {
      | ^~~~~~~~~~~~~~
   36 |     ETH_LINK_UP,  /*!< Ethernet link is up */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     ETH_LINK_DOWN /*!< Ethernet link is down */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 | } eth_link_t;
      | ~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:35:9: warning: enum 'eth_link_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   35 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:44:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   44 | typedef enum {
      | ^~~~~~~~~~~~~~
   45 |     ETH_SPEED_10M,  /*!< Ethernet speed is 10Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   46 |     ETH_SPEED_100M, /*!< Ethernet speed is 100Mbps */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 |     ETH_SPEED_MAX   /*!< Max speed mode (for checking purpose) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 | } eth_speed_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:44:9: warning: enum 'eth_speed_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   44 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:54:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   54 | typedef enum {
      | ^~~~~~~~~~~~~~
   55 |     ETH_DUPLEX_HALF,    /*!< Ethernet is in half duplex */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   56 |     ETH_DUPLEX_FULL,    /*!< Ethernet is in full duplex */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   57 | } eth_duplex_t;
      | ~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:54:9: warning: enum 'eth_duplex_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   54 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   62 | typedef enum {
      | ^~~~~~~~~~~~~~
   63 |     ETH_CHECKSUM_SW, /*!< Ethernet checksum calculate by software */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |     ETH_CHECKSUM_HW  /*!< Ethernet checksum calculate by hardware */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   65 | } eth_checksum_t;
      | ~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/eth_types.h:62:9: warning: enum 'eth_checksum_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   62 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:24:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   24 | typedef enum {
      | ^~~~~~~~~~~~~~
   25 |     GPIO_PORT_0 = 0,
      |     ~~~~~~~~~~~~~~~~
   26 |     GPIO_PORT_MAX,
      |     ~~~~~~~~~~~~~~
   27 | } gpio_port_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:24:9: warning: enum 'gpio_port_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   24 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:230:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  230 | typedef enum {
      | ^~~~~~~~~~~~~~
  231 |     GPIO_NUM_NC = -1,    /*!< Use to signal not connected to S/W */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |     GPIO_NUM_0 = 0,     /*!< GPIO0, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |     GPIO_NUM_1 = 1,     /*!< GPIO1, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |     GPIO_NUM_2 = 2,     /*!< GPIO2, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |     GPIO_NUM_3 = 3,     /*!< GPIO3, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |     GPIO_NUM_4 = 4,     /*!< GPIO4, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |     GPIO_NUM_5 = 5,     /*!< GPIO5, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  238 |     GPIO_NUM_6 = 6,     /*!< GPIO6, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  239 |     GPIO_NUM_7 = 7,     /*!< GPIO7, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  240 |     GPIO_NUM_8 = 8,     /*!< GPIO8, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  241 |     GPIO_NUM_9 = 9,     /*!< GPIO9, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  242 |     GPIO_NUM_10 = 10,   /*!< GPIO10, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  243 |     GPIO_NUM_11 = 11,   /*!< GPIO11, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  244 |     GPIO_NUM_12 = 12,   /*!< GPIO12, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  245 |     GPIO_NUM_13 = 13,   /*!< GPIO13, input and output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:230:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  230 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:230:9: warning: enum 'gpio_num_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:354:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  354 | typedef enum {
      | ^~~~~~~~~~~~~~
  355 |     GPIO_INTR_DISABLE = 0,     /*!< Disable GPIO interrupt                             */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  356 |     GPIO_INTR_POSEDGE = 1,     /*!< GPIO interrupt type : rising edge                  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  357 |     GPIO_INTR_NEGEDGE = 2,     /*!< GPIO interrupt type : falling edge                 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  358 |     GPIO_INTR_ANYEDGE = 3,     /*!< GPIO interrupt type : both rising and falling edge */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  359 |     GPIO_INTR_LOW_LEVEL = 4,   /*!< GPIO interrupt type : input low level trigger      */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |     GPIO_INTR_HIGH_LEVEL = 5,  /*!< GPIO interrupt type : input high level trigger     */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |     GPIO_INTR_MAX,
      |     ~~~~~~~~~~~~~~
  362 | } gpio_int_type_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:354:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  354 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:354:9: warning: enum 'gpio_int_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:371:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  371 | typedef enum {
      | ^~~~~~~~~~~~~~
  372 |     GPIO_MODE_DISABLE = GPIO_MODE_DEF_DISABLE,                                                         /*!< GPIO mode : disable input and output             */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  373 |     GPIO_MODE_INPUT = GPIO_MODE_DEF_INPUT,                                                             /*!< GPIO mode : input only                           */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  374 |     GPIO_MODE_OUTPUT = GPIO_MODE_DEF_OUTPUT,                                                           /*!< GPIO mode : output only mode                     */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  375 |     GPIO_MODE_OUTPUT_OD = ((GPIO_MODE_DEF_OUTPUT) | (GPIO_MODE_DEF_OD)),                               /*!< GPIO mode : output only with open-drain mode     */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  376 |     GPIO_MODE_INPUT_OUTPUT_OD = ((GPIO_MODE_DEF_INPUT) | (GPIO_MODE_DEF_OUTPUT) | (GPIO_MODE_DEF_OD)), /*!< GPIO mode : output and input with open-drain mode*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  377 |     GPIO_MODE_INPUT_OUTPUT = ((GPIO_MODE_DEF_INPUT) | (GPIO_MODE_DEF_OUTPUT)),                         /*!< GPIO mode : output and input mode                */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  378 | } gpio_mode_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:371:9: warning: enum 'gpio_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  371 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:380:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  380 | typedef enum {
      | ^~~~~~~~~~~~~~
  381 |     GPIO_PULLUP_DISABLE = 0x0,     /*!< Disable GPIO pull-up resistor */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     GPIO_PULLUP_ENABLE = 0x1,      /*!< Enable GPIO pull-up resistor */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  383 | } gpio_pullup_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:380:9: warning: enum 'gpio_pullup_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  380 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:385:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  385 | typedef enum {
      | ^~~~~~~~~~~~~~
  386 |     GPIO_PULLDOWN_DISABLE = 0x0,   /*!< Disable GPIO pull-down resistor */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  387 |     GPIO_PULLDOWN_ENABLE = 0x1,    /*!< Enable GPIO pull-down resistor  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  388 | } gpio_pulldown_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:385:9: warning: enum 'gpio_pulldown_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  385 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:393:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  393 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  394 |     uint64_t pin_bit_mask;          /*!< GPIO pin: set with bit mask, each bit maps to a GPIO */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  395 |     gpio_mode_t mode;               /*!< GPIO mode: set input/output mode                     */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  396 |     gpio_pullup_t pull_up_en;       /*!< GPIO pull-up                                         */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |     gpio_pulldown_t pull_down_en;   /*!< GPIO pull-down                                       */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  398 |     gpio_int_type_t intr_type;      /*!< GPIO interrupt type                                  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  399 | } gpio_config_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:401:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  401 | typedef enum {
      | ^~~~~~~~~~~~~~
  402 |     GPIO_PULLUP_ONLY,               /*!< Pad pull up            */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  403 |     GPIO_PULLDOWN_ONLY,             /*!< Pad pull down          */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  404 |     GPIO_PULLUP_PULLDOWN,           /*!< Pad pull up + pull down*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  405 |     GPIO_FLOATING,                  /*!< Pad floating           */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  406 | } gpio_pull_mode_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:401:9: warning: enum 'gpio_pull_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  401 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:408:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  408 | typedef enum {
      | ^~~~~~~~~~~~~~
  409 |     GPIO_DRIVE_CAP_0       = 0,    /*!< Pad drive capability: weak          */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  410 |     GPIO_DRIVE_CAP_1       = 1,    /*!< Pad drive capability: stronger      */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  411 |     GPIO_DRIVE_CAP_2       = 2,    /*!< Pad drive capability: medium */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  412 |     GPIO_DRIVE_CAP_DEFAULT = 2,    /*!< Pad drive capability: medium */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  413 |     GPIO_DRIVE_CAP_3       = 3,    /*!< Pad drive capability: strongest     */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  414 |     GPIO_DRIVE_CAP_MAX,
      |     ~~~~~~~~~~~~~~~~~~~
  415 | } gpio_drive_cap_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:408:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  408 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:408:9: warning: enum 'gpio_drive_cap_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/gpio_types.h:417:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  417 | typedef void (*gpio_isr_t)(void *);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using gpio_isr_t = void (*)(void *)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:26:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   26 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   27 |     uint8_t reserved;           ///< Reserved, must be 0.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   28 |     uint8_t mosi_len;           ///< Output data length, in bytes
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 |     uint8_t miso_len;           ///< Input data length, in bytes
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   30 |     uint8_t address_bitlen;     ///< Length of address in bits, set to 0 if command does not need an address
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |     uint32_t address;           ///< Address to perform operation on
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   32 |     const uint8_t *mosi_data;   ///< Output data to salve
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   33 |     uint8_t *miso_data;         ///< [out] Input data from slave, little endian
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |     uint32_t flags;             ///< Flags for this transaction. Set to 0 for now.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   35 | #define SPI_FLASH_TRANS_FLAG_CMD16          BIT(0)  ///< Send command of 16 bits
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   36 | #define SPI_FLASH_TRANS_FLAG_IGNORE_BASEIO  BIT(1)  ///< Not applying the basic io mode configuration for this transaction
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 | #define SPI_FLASH_TRANS_FLAG_BYTE_SWAP      BIT(2)  ///< Used for DTR mode, to swap the bytes of a pair of rising/falling edge
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     uint16_t command;           ///< Command to send
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     uint8_t dummy_bitlen;       ///< Basic dummy bits to use
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     uint32_t io_mode;           ///< Flash working mode when `SPI_FLASH_IGNORE_BASEIO` is specified.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 | } spi_flash_trans_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:51:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   51 | typedef enum {
      | ^~~~~~~~~~~~~~
   52 |     ESP_FLASH_5MHZ = 0, ///< The flash runs under 5MHz
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |     ESP_FLASH_10MHZ,    ///< The flash runs under 10MHz
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |     ESP_FLASH_20MHZ,    ///< The flash runs under 20MHz
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 |     ESP_FLASH_26MHZ,    ///< The flash runs under 26MHz
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   56 |     ESP_FLASH_40MHZ,    ///< The flash runs under 40MHz
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   57 |     ESP_FLASH_80MHZ,    ///< The flash runs under 80MHz
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   58 |     ESP_FLASH_120MHZ,   ///< The flash runs under 120MHz, 120MHZ can only be used by main flash after timing tuning in system. Do not use this directely in any API.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   59 |     ESP_FLASH_SPEED_MAX, ///< The maximum frequency supported by the host is ``ESP_FLASH_SPEED_MAX-1``.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   60 | } esp_flash_speed_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:51:9: warning: enum 'esp_flash_speed_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   51 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   69 | typedef enum {
      | ^~~~~~~~~~~~~~
   70 |     SPI_FLASH_SLOWRD = 0, ///< Data read using single I/O, some limits on speed
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |     SPI_FLASH_FASTRD, ///< Data read using single I/O, no limit on speed
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     SPI_FLASH_DOUT,   ///< Data read using dual I/O
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     SPI_FLASH_DIO,    ///< Both address & data transferred using dual I/O
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   74 |     SPI_FLASH_QOUT,   ///< Data read using quad I/O
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |     SPI_FLASH_QIO,    ///< Both address & data transferred using quad I/O
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 | #define SPI_FLASH_OPI_FLAG 16    ///< A flag for flash work in opi mode, the io mode below are opi, above are SPI/QSPI mode. DO NOT use this value in any API.
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |     SPI_FLASH_OPI_STR = SPI_FLASH_OPI_FLAG,///< Only support on OPI flash, flash read and write under STR mode
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |     SPI_FLASH_OPI_DTR,///< Only support on OPI flash, flash read and write under DTR mode
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |     SPI_FLASH_READ_MODE_MAX,    ///< The fastest io mode supported by the host is ``ESP_FLASH_READ_MODE_MAX-1``.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 | } esp_flash_io_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:69:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   69 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:69:9: warning: enum 'esp_flash_io_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:83:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   83 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   84 |     uint32_t sus_mask;     ///< SUS/SUS1/SUS2 bit in flash register.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   85 |     struct {
      |     ~~~~~~~~
   86 |         uint32_t cmd_rdsr    :8;             ///< Read flash status register(2) command.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   87 |         uint32_t sus_cmd     :8;             ///< Flash suspend command.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   88 |         uint32_t res_cmd     :8;             ///< Flash resume command.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         uint32_t reserved    :8;             ///< Reserved, set to 0.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |     };
      |     ~~
   91 | } spi_flash_sus_cmd_conf;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:94:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   94 | typedef struct
      | ^~~~~~~~~~~~~~
   95 | {
      | ~
   96 |     /**
      |     ~~~
   97 |      * @brief Enable the flash encryption
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   98 |     */
      |     ~~
   99 |     void (*flash_encryption_enable)(void);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  100 |     /**
      |     ~~~
  101 |      * @brief Disable the flash encryption
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  102 |     */
      |     ~~
  103 |     void (*flash_encryption_disable)(void);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |     /**
      |     ~~~
  105 |      * Prepare flash encryption before operation.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  106 |      *
      |      ~
  107 |      * @param address The destination address in flash for the write operation.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  108 |      * @param buffer Data for programming
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  109 |      * @param size Size to program.
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:99:37: warning: redundant void argument list in field declaration [modernize-redundant-void-arg]
   99 |     void (*flash_encryption_enable)(void);
      |                                     ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:103:38: warning: redundant void argument list in field declaration [modernize-redundant-void-arg]
  103 |     void (*flash_encryption_disable)(void);
      |                                      ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:117:35: warning: redundant void argument list in field declaration [modernize-redundant-void-arg]
  117 |     void (*flash_encryption_done)(void);
      |                                   ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:121:38: warning: redundant void argument list in field declaration [modernize-redundant-void-arg]
  121 |     void (*flash_encryption_destroy)(void);
      |                                      ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:135:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  135 | typedef struct spi_flash_host_driver_s spi_flash_host_driver_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_host_driver_t = struct spi_flash_host_driver_s
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:138:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  138 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  139 |     const struct spi_flash_host_driver_s* driver;  ///< Pointer to the implementation function table
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  140 |     // Implementations can wrap this structure into their own ones, and append other data here
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 | } spi_flash_host_inst_t ;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:154:81: warning: parameter name 't' is too short, expected at least 3 characters [readability-identifier-length]
  154 |     esp_err_t (*common_command)(spi_flash_host_inst_t *host, spi_flash_trans_t *t);
      |                                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:158:65: warning: parameter name 'id' is too short, expected at least 3 characters [readability-identifier-length]
  158 |     esp_err_t (*read_id)(spi_flash_host_inst_t *host, uint32_t *id);
      |                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:178:70: warning: parameter name 'wp' is too short, expected at least 3 characters [readability-identifier-length]
  178 |     esp_err_t (*set_write_protect)(spi_flash_host_inst_t *host, bool wp);
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:184:76: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  184 |     bool (*supports_direct_write)(spi_flash_host_inst_t *host, const void *p);
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/spi_flash_types.h:202:75: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  202 |     bool (*supports_direct_read)(spi_flash_host_inst_t *host, const void *p);
      |                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:16:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   16 | typedef enum {
      | ^~~~~~~~~~~~~~
   17 |     TOUCH_PAD_NUM0 = 0, /*!< Touch pad channel 0 is GPIO4(ESP32) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   18 |     TOUCH_PAD_NUM1,     /*!< Touch pad channel 1 is GPIO0(ESP32) / GPIO1(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   19 |     TOUCH_PAD_NUM2,     /*!< Touch pad channel 2 is GPIO2(ESP32) / GPIO2(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   20 |     TOUCH_PAD_NUM3,     /*!< Touch pad channel 3 is GPIO15(ESP32) / GPIO3(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   21 |     TOUCH_PAD_NUM4,     /*!< Touch pad channel 4 is GPIO13(ESP32) / GPIO4(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   22 |     TOUCH_PAD_NUM5,     /*!< Touch pad channel 5 is GPIO12(ESP32) / GPIO5(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   23 |     TOUCH_PAD_NUM6,     /*!< Touch pad channel 6 is GPIO14(ESP32) / GPIO6(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   24 |     TOUCH_PAD_NUM7,     /*!< Touch pad channel 7 is GPIO27(ESP32) / GPIO7(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   25 |     TOUCH_PAD_NUM8,     /*!< Touch pad channel 8 is GPIO33(ESP32) / GPIO8(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   26 |     TOUCH_PAD_NUM9,     /*!< Touch pad channel 9 is GPIO32(ESP32) / GPIO9(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   27 | #if SOC_TOUCH_SENSOR_NUM > 10
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   28 |     TOUCH_PAD_NUM10,    /*!< Touch channel 10 is GPIO10(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 |     TOUCH_PAD_NUM11,    /*!< Touch channel 11 is GPIO11(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   30 |     TOUCH_PAD_NUM12,    /*!< Touch channel 12 is GPIO12(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |     TOUCH_PAD_NUM13,    /*!< Touch channel 13 is GPIO13(ESP32-S2) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:16:9: warning: enum 'touch_pad_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   16 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:38:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   38 | typedef enum {
      | ^~~~~~~~~~~~~~
   39 |     TOUCH_HVOLT_KEEP = -1, /*!<Touch sensor high reference voltage, no change  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     TOUCH_HVOLT_2V4 = 0,   /*!<Touch sensor high reference voltage, 2.4V  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     TOUCH_HVOLT_2V5,       /*!<Touch sensor high reference voltage, 2.5V  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |     TOUCH_HVOLT_2V6,       /*!<Touch sensor high reference voltage, 2.6V  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     TOUCH_HVOLT_2V7,       /*!<Touch sensor high reference voltage, 2.7V  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     TOUCH_HVOLT_MAX,
      |     ~~~~~~~~~~~~~~~~
   45 | } touch_high_volt_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:38:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   38 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:38:9: warning: enum 'touch_high_volt_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   48 | typedef enum {
      | ^~~~~~~~~~~~~~
   49 |     TOUCH_LVOLT_KEEP = -1, /*!<Touch sensor low reference voltage, no change  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     TOUCH_LVOLT_0V5 = 0,   /*!<Touch sensor low reference voltage, 0.5V  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |     TOUCH_LVOLT_0V6,       /*!<Touch sensor low reference voltage, 0.6V  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |     TOUCH_LVOLT_0V7,       /*!<Touch sensor low reference voltage, 0.7V  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |     TOUCH_LVOLT_0V8,       /*!<Touch sensor low reference voltage, 0.8V  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |     TOUCH_LVOLT_MAX,
      |     ~~~~~~~~~~~~~~~~
   55 | } touch_low_volt_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:48:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   48 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:48:9: warning: enum 'touch_low_volt_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   58 | typedef enum {
      | ^~~~~~~~~~~~~~
   59 |     TOUCH_HVOLT_ATTEN_KEEP = -1,  /*!<Touch sensor high reference voltage attenuation, no change  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   60 |     TOUCH_HVOLT_ATTEN_1V5 = 0,    /*!<Touch sensor high reference voltage attenuation, 1.5V attenuation  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   61 |     TOUCH_HVOLT_ATTEN_1V,         /*!<Touch sensor high reference voltage attenuation, 1.0V attenuation  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   62 |     TOUCH_HVOLT_ATTEN_0V5,        /*!<Touch sensor high reference voltage attenuation, 0.5V attenuation  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |     TOUCH_HVOLT_ATTEN_0V,         /*!<Touch sensor high reference voltage attenuation,   0V attenuation  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |     TOUCH_HVOLT_ATTEN_MAX,
      |     ~~~~~~~~~~~~~~~~~~~~~~
   65 | } touch_volt_atten_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:58:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   58 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:58:9: warning: enum 'touch_volt_atten_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   68 | typedef enum {
      | ^~~~~~~~~~~~~~
   69 |     TOUCH_PAD_SLOPE_0 = 0,       /*!<Touch sensor charge / discharge speed, always zero  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   70 |     TOUCH_PAD_SLOPE_1 = 1,       /*!<Touch sensor charge / discharge speed, slowest  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |     TOUCH_PAD_SLOPE_2 = 2,       /*!<Touch sensor charge / discharge speed */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     TOUCH_PAD_SLOPE_3 = 3,       /*!<Touch sensor charge / discharge speed  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     TOUCH_PAD_SLOPE_4 = 4,       /*!<Touch sensor charge / discharge speed  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   74 |     TOUCH_PAD_SLOPE_5 = 5,       /*!<Touch sensor charge / discharge speed  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |     TOUCH_PAD_SLOPE_6 = 6,       /*!<Touch sensor charge / discharge speed  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |     TOUCH_PAD_SLOPE_7 = 7,       /*!<Touch sensor charge / discharge speed, fast  */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |     TOUCH_PAD_SLOPE_MAX,
      |     ~~~~~~~~~~~~~~~~~~~~
   78 | } touch_cnt_slope_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:68:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   68 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:68:9: warning: enum 'touch_cnt_slope_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:81:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   81 | typedef enum {
      | ^~~~~~~~~~~~~~
   82 |     TOUCH_PAD_TIE_OPT_LOW = 0,    /*!<Initial level of charging voltage, low level */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   83 |     TOUCH_PAD_TIE_OPT_HIGH = 1,   /*!<Initial level of charging voltage, high level */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   84 |     TOUCH_PAD_TIE_OPT_MAX,
      |     ~~~~~~~~~~~~~~~~~~~~~~
   85 | } touch_tie_opt_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:81:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   81 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:81:9: warning: enum 'touch_tie_opt_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:88:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   88 | typedef enum {
      | ^~~~~~~~~~~~~~
   89 |     TOUCH_FSM_MODE_TIMER = 0,   /*!<To start touch FSM by timer */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |     TOUCH_FSM_MODE_SW,          /*!<To start touch FSM by software trigger */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   91 |     TOUCH_FSM_MODE_MAX,
      |     ~~~~~~~~~~~~~~~~~~~
   92 | } touch_fsm_mode_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:88:9: warning: enum 'touch_fsm_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   88 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:96:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   96 | typedef enum {
      | ^~~~~~~~~~~~~~
   97 |     TOUCH_TRIGGER_BELOW = 0,   /*!<Touch interrupt will happen if counter value is less than threshold.*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   98 |     TOUCH_TRIGGER_ABOVE = 1,   /*!<Touch interrupt will happen if counter value is larger than threshold.*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   99 |     TOUCH_TRIGGER_MAX,
      |     ~~~~~~~~~~~~~~~~~~
  100 | } touch_trigger_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:96:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   96 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:96:9: warning: enum 'touch_trigger_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:102:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  102 | typedef enum {
      | ^~~~~~~~~~~~~~
  103 |     TOUCH_TRIGGER_SOURCE_BOTH = 0,  /*!< wakeup interrupt is generated if both SET1 and SET2 are "touched"*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |     TOUCH_TRIGGER_SOURCE_SET1 = 1,  /*!< wakeup interrupt is generated if SET1 is "touched"*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  105 |     TOUCH_TRIGGER_SOURCE_MAX,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
  106 | } touch_trigger_src_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:102:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  102 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:102:9: warning: enum 'touch_trigger_src_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:144:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  144 | typedef enum {
      | ^~~~~~~~~~~~~~
  145 |     TOUCH_PAD_INTR_MASK_DONE = BIT(0),      /*!<Measurement done for one of the enabled channels. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |     TOUCH_PAD_INTR_MASK_ACTIVE = BIT(1),    /*!<Active for one of the enabled channels. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |     TOUCH_PAD_INTR_MASK_INACTIVE = BIT(2),  /*!<Inactive for one of the enabled channels. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |     TOUCH_PAD_INTR_MASK_SCAN_DONE = BIT(3), /*!<Measurement done for all the enabled channels. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |     TOUCH_PAD_INTR_MASK_TIMEOUT = BIT(4),   /*!<Timeout for one of the enabled channels. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 | #if SOC_TOUCH_PROXIMITY_MEAS_DONE_SUPPORTED
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |     TOUCH_PAD_INTR_MASK_PROXI_MEAS_DONE = BIT(5),   /*!<For proximity sensor, when the number of measurements reaches the set count of measurements, an interrupt will be generated. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |     TOUCH_PAD_INTR_MASK_MAX
      |     ~~~~~~~~~~~~~~~~~~~~~~~
  153 | #define TOUCH_PAD_INTR_MASK_ALL (TOUCH_PAD_INTR_MASK_TIMEOUT    \
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  154 |                                 | TOUCH_PAD_INTR_MASK_SCAN_DONE \
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |                                 | TOUCH_PAD_INTR_MASK_INACTIVE  \
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |                                 | TOUCH_PAD_INTR_MASK_ACTIVE    \
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |                                 | TOUCH_PAD_INTR_MASK_DONE      \
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |                                 | TOUCH_PAD_INTR_MASK_PROXI_MEAS_DONE) /*!<All touch interrupt type enable. */
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 | #else
      | ~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:144:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  144 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:144:9: warning: enum 'touch_pad_intr_mask_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator&' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:131:61: note: expanded from macro 'FLAG_ATTR_IMPL'
  131 | FORCE_INLINE_ATTR TYPE& operator&=(TYPE& a, TYPE b) { a = a & b; return a; } \
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: note: resolves to this declaration
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:126:34: note: expanded from macro 'FLAG_ATTR_IMPL'
  126 | FORCE_INLINE_ATTR constexpr TYPE operator& (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a & (INT_TYPE)b); } \
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator<<' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:134:61: note: expanded from macro 'FLAG_ATTR_IMPL'
  134 | FORCE_INLINE_ATTR TYPE& operator<<=(TYPE& a, int b) { a = a << b; return a; }
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: note: resolves to this declaration
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:129:34: note: expanded from macro 'FLAG_ATTR_IMPL'
  129 | FORCE_INLINE_ATTR constexpr TYPE operator<< (TYPE a, int b) { return (TYPE)((INT_TYPE)a << b); } \
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator>>' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:133:61: note: expanded from macro 'FLAG_ATTR_IMPL'
  133 | FORCE_INLINE_ATTR TYPE& operator>>=(TYPE& a, int b) { a = a >> b; return a; } \
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: note: resolves to this declaration
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:128:34: note: expanded from macro 'FLAG_ATTR_IMPL'
  128 | FORCE_INLINE_ATTR constexpr TYPE operator>> (TYPE a, int b) { return (TYPE)((INT_TYPE)a >> b); } \
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator^' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:132:61: note: expanded from macro 'FLAG_ATTR_IMPL'
  132 | FORCE_INLINE_ATTR TYPE& operator^=(TYPE& a, TYPE b) { a = a ^ b; return a; } \
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: note: resolves to this declaration
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:127:34: note: expanded from macro 'FLAG_ATTR_IMPL'
  127 | FORCE_INLINE_ATTR constexpr TYPE operator^ (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a ^ (INT_TYPE)b); } \
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator|' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:130:61: note: expanded from macro 'FLAG_ATTR_IMPL'
  130 | FORCE_INLINE_ATTR TYPE& operator|=(TYPE& a, TYPE b) { a = a | b; return a; } \
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: note: resolves to this declaration
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:125:34: note: expanded from macro 'FLAG_ATTR_IMPL'
  125 | FORCE_INLINE_ATTR constexpr TYPE operator| (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a | (INT_TYPE)b); } \
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator&' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:125:107: note: expanded from macro 'FLAG_ATTR_IMPL'
  125 | FORCE_INLINE_ATTR constexpr TYPE operator| (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a | (INT_TYPE)b); } \
      |                                                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator&=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:130:78: note: expanded from macro 'FLAG_ATTR_IMPL'
  130 | FORCE_INLINE_ATTR TYPE& operator|=(TYPE& a, TYPE b) { a = a | b; return a; } \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator<<' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:128:98: note: expanded from macro 'FLAG_ATTR_IMPL'
  128 | FORCE_INLINE_ATTR constexpr TYPE operator>> (TYPE a, int b) { return (TYPE)((INT_TYPE)a >> b); } \
      |                                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator<<=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:133:79: note: expanded from macro 'FLAG_ATTR_IMPL'
  133 | FORCE_INLINE_ATTR TYPE& operator>>=(TYPE& a, int b) { a = a >> b; return a; } \
      |                                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator>>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:127:107: note: expanded from macro 'FLAG_ATTR_IMPL'
  127 | FORCE_INLINE_ATTR constexpr TYPE operator^ (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a ^ (INT_TYPE)b); } \
      |                                                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator>>=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:132:78: note: expanded from macro 'FLAG_ATTR_IMPL'
  132 | FORCE_INLINE_ATTR TYPE& operator^=(TYPE& a, TYPE b) { a = a ^ b; return a; } \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator^' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:126:107: note: expanded from macro 'FLAG_ATTR_IMPL'
  126 | FORCE_INLINE_ATTR constexpr TYPE operator& (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a & (INT_TYPE)b); } \
      |                                                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator^=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:131:78: note: expanded from macro 'FLAG_ATTR_IMPL'
  131 | FORCE_INLINE_ATTR TYPE& operator&=(TYPE& a, TYPE b) { a = a & b; return a; } \
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator|' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:124:84: note: expanded from macro 'FLAG_ATTR_IMPL'
  124 | FORCE_INLINE_ATTR constexpr TYPE operator~ (TYPE a) { return (TYPE)~(INT_TYPE)a; } \
      |                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator|=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:129:98: note: expanded from macro 'FLAG_ATTR_IMPL'
  129 | FORCE_INLINE_ATTR constexpr TYPE operator<< (TYPE a, int b) { return (TYPE)((INT_TYPE)a << b); } \
      |                                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: 'operator~' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:123:40: note: expanded from macro 'FLAG_ATTR_IMPL'
  123 | #define FLAG_ATTR_IMPL(TYPE, INT_TYPE) \
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:58:27: note: expanded from macro '\
FORCE_INLINE_ATTR'
   58 | #define FORCE_INLINE_ATTR static inline __attribute__((always_inline))
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:124:50: note: expanded from macro 'FLAG_ATTR_IMPL'
  124 | FORCE_INLINE_ATTR constexpr TYPE operator~ (TYPE a) { return (TYPE)~(INT_TYPE)a; } \
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:168:1: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  168 | FLAG_ATTR(touch_pad_intr_mask_t)
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:137:19: note: expanded from macro 'FLAG_ATTR'
  137 | #define FLAG_ATTR FLAG_ATTR_U32
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:136:29: note: expanded from macro 'FLAG_ATTR_U32'
  136 | #define FLAG_ATTR_U32(TYPE) FLAG_ATTR_IMPL(TYPE, uint32_t)
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_common\include\esp_attr.h:125:58: note: expanded from macro 'FLAG_ATTR_IMPL'
  125 | FORCE_INLINE_ATTR constexpr TYPE operator| (TYPE a, TYPE b) { return (TYPE)((INT_TYPE)a | (INT_TYPE)b); } \
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:170:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  170 | typedef enum {
      | ^~~~~~~~~~~~~~
  171 |     TOUCH_PAD_DENOISE_BIT12 = 0,    /*!<Denoise range is 12bit */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  172 |     TOUCH_PAD_DENOISE_BIT10 = 1,    /*!<Denoise range is 10bit */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  173 |     TOUCH_PAD_DENOISE_BIT8 = 2,     /*!<Denoise range is 8bit */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  174 |     TOUCH_PAD_DENOISE_BIT4 = 3,     /*!<Denoise range is 4bit */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  175 |     TOUCH_PAD_DENOISE_MAX
      |     ~~~~~~~~~~~~~~~~~~~~~
  176 | } touch_pad_denoise_grade_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:170:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  170 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:170:9: warning: enum 'touch_pad_denoise_grade_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:178:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  178 | typedef enum {
      | ^~~~~~~~~~~~~~
  179 |     TOUCH_PAD_DENOISE_CAP_L0 = 0,   /*!<Denoise channel internal reference capacitance is 5pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  180 |     TOUCH_PAD_DENOISE_CAP_L1 = 1,   /*!<Denoise channel internal reference capacitance is 6.4pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  181 |     TOUCH_PAD_DENOISE_CAP_L2 = 2,   /*!<Denoise channel internal reference capacitance is 7.8pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  182 |     TOUCH_PAD_DENOISE_CAP_L3 = 3,   /*!<Denoise channel internal reference capacitance is 9.2pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  183 |     TOUCH_PAD_DENOISE_CAP_L4 = 4,   /*!<Denoise channel internal reference capacitance is 10.6pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  184 |     TOUCH_PAD_DENOISE_CAP_L5 = 5,   /*!<Denoise channel internal reference capacitance is 12.0pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |     TOUCH_PAD_DENOISE_CAP_L6 = 6,   /*!<Denoise channel internal reference capacitance is 13.4pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  186 |     TOUCH_PAD_DENOISE_CAP_L7 = 7,   /*!<Denoise channel internal reference capacitance is 14.8pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  187 |     TOUCH_PAD_DENOISE_CAP_MAX = 8
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  188 | } touch_pad_denoise_cap_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:178:9: warning: enum 'touch_pad_denoise_cap_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  178 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:191:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  191 | typedef struct touch_pad_denoise {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  192 |     touch_pad_denoise_grade_t grade;    /*!<Select denoise range of denoise channel.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  193 |                                             Determined by measuring the noise amplitude of the denoise channel. */
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  194 |     touch_pad_denoise_cap_t cap_level;  /*!<Select internal reference capacitance of denoise channel.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  195 |                                             Ensure that the denoise readings are closest to the readings of the channel being measured.
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  196 |                                             Use `touch_pad_denoise_read_data` to get the reading of denoise channel.
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  197 |                                             The equivalent capacitance of the shielded channel can be calculated
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  198 |                                             from the reading of denoise channel. */
      |                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  199 | } touch_pad_denoise_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:202:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  202 | typedef enum {
      | ^~~~~~~~~~~~~~
  203 |     TOUCH_PAD_SHIELD_DRV_L0 = 0,/*!<The max equivalent capacitance in shield channel is 40pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  204 |     TOUCH_PAD_SHIELD_DRV_L1,    /*!<The max equivalent capacitance in shield channel is 80pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  205 |     TOUCH_PAD_SHIELD_DRV_L2,    /*!<The max equivalent capacitance in shield channel is 120pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  206 |     TOUCH_PAD_SHIELD_DRV_L3,    /*!<The max equivalent capacitance in shield channel is 160pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  207 |     TOUCH_PAD_SHIELD_DRV_L4,    /*!<The max equivalent capacitance in shield channel is 200pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  208 |     TOUCH_PAD_SHIELD_DRV_L5,    /*!<The max equivalent capacitance in shield channel is 240pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  209 |     TOUCH_PAD_SHIELD_DRV_L6,    /*!<The max equivalent capacitance in shield channel is 280pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  210 |     TOUCH_PAD_SHIELD_DRV_L7,    /*!<The max equivalent capacitance in shield channel is 320pf */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |     TOUCH_PAD_SHIELD_DRV_MAX
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
  212 | } touch_pad_shield_driver_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:202:9: warning: enum 'touch_pad_shield_driver_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  202 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:215:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  215 | typedef struct touch_pad_waterproof {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |     touch_pad_t guard_ring_pad;             /*!<Waterproof. Select touch channel use for guard pad.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |                                                 Guard pad is used to detect the large area of water covering the touch panel. */
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |     touch_pad_shield_driver_t shield_driver;/*!<Waterproof. Shield channel drive capability configuration.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |                                                 Shield pad is used to shield the influence of water droplets covering the touch panel.
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |                                                 When the waterproof function is enabled, Touch14 is set as shield channel by default.
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |                                                 The larger the parasitic capacitance on the shielding channel, the higher the drive capability needs to be set.
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |                                                 The equivalent capacitance of the shield channel can be estimated through the reading value of the denoise channel(Touch0).*/
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 | } touch_pad_waterproof_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:229:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  229 | typedef enum {
      | ^~~~~~~~~~~~~~
  230 |     TOUCH_PAD_CONN_HIGHZ = 0,   /*!<Idle status of touch channel is high resistance state */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |     TOUCH_PAD_CONN_GND = 1,     /*!<Idle status of touch channel is ground connection */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |     TOUCH_PAD_CONN_MAX
      |     ~~~~~~~~~~~~~~~~~~
  233 | } touch_pad_conn_type_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:229:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  229 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:229:9: warning: enum 'touch_pad_conn_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:241:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  241 | typedef enum {
      | ^~~~~~~~~~~~~~
  242 |     TOUCH_PAD_FILTER_IIR_4 = 0, /*!<The filter mode is first-order IIR filter. The coefficient is 4. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  243 |     TOUCH_PAD_FILTER_IIR_8,     /*!<The filter mode is first-order IIR filter. The coefficient is 8. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  244 |     TOUCH_PAD_FILTER_IIR_16,    /*!<The filter mode is first-order IIR filter. The coefficient is 16 (Typical value). */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  245 |     TOUCH_PAD_FILTER_IIR_32,    /*!<The filter mode is first-order IIR filter. The coefficient is 32. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  246 |     TOUCH_PAD_FILTER_IIR_64,    /*!<The filter mode is first-order IIR filter. The coefficient is 64. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  247 |     TOUCH_PAD_FILTER_IIR_128,   /*!<The filter mode is first-order IIR filter. The coefficient is 128. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  248 |     TOUCH_PAD_FILTER_IIR_256,   /*!<The filter mode is first-order IIR filter. The coefficient is 256. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  249 |     TOUCH_PAD_FILTER_JITTER,    /*!<The filter mode is jitter filter */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  250 |     TOUCH_PAD_FILTER_MAX
      |     ~~~~~~~~~~~~~~~~~~~~
  251 | } touch_filter_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:241:9: warning: enum 'touch_filter_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  241 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:259:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  259 | typedef enum {
      | ^~~~~~~~~~~~~~
  260 |     TOUCH_PAD_SMOOTH_OFF   = 0, /*!<No filtering of raw data. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  261 |     TOUCH_PAD_SMOOTH_IIR_2 = 1, /*!<Filter the raw data. The coefficient is 2 (Typical value). */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  262 |     TOUCH_PAD_SMOOTH_IIR_4 = 2, /*!<Filter the raw data. The coefficient is 4. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  263 |     TOUCH_PAD_SMOOTH_IIR_8 = 3, /*!<Filter the raw data. The coefficient is 8. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  264 |     TOUCH_PAD_SMOOTH_MAX,
      |     ~~~~~~~~~~~~~~~~~~~~~
  265 | } touch_smooth_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:259:9: warning: initial values in enum '<unnamed>' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
  259 | typedef enum {
      |         ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:259:9: warning: enum 'touch_smooth_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:268:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  268 | typedef struct touch_filter_config {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  269 |     touch_filter_mode_t mode;   /*!<Set filter mode. The input of the filter is the raw value of touch reading,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  270 |                                     and the output of the filter is involved in the judgment of the touch state. */
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  271 |     uint32_t debounce_cnt;      /*!<Set debounce count, such as `n`. If the measured values continue to exceed
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  272 |                                     the threshold for `n+1` times, the touch sensor state changes.
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  273 |                                     Range: 0 ~ 7 */
      |                                     ~~~~~~~~~~~~~~~
  274 |     uint32_t noise_thr;         /*!<Noise threshold coefficient. Higher = More noise resistance.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  275 |                                     The actual noise should be less than (noise coefficient * touch threshold).
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  276 |                                     Range: 0 ~ 3. The coefficient is 0: 4/8;  1: 3/8;   2: 2/8;   3: 1; */
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  277 |     uint32_t jitter_step;       /*!<Set jitter filter step size. Range: 0 ~ 15 */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  278 |     touch_smooth_mode_t smh_lvl;/*!<Level of filter applied on the original data against large noise interference. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  279 | #define TOUCH_DEBOUNCE_CNT_MAX      (7)
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  280 | #define TOUCH_NOISE_THR_MAX         (3)
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  281 | #define TOUCH_JITTER_STEP_MAX       (15)
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  282 | } touch_filter_config_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/touch_sensor_types.h:285:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  285 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  286 |     touch_pad_t touch_num;          /*!<Set touch channel number for sleep pad.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  287 |                                         Only one touch sensor channel is supported in deep sleep mode.
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  288 |                                         If clear the sleep channel, point this pad to `TOUCH_PAD_NUM0`  */
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  289 |     bool en_proximity;              /*!<enable proximity function for sleep pad */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  290 | } touch_pad_sleep_channel_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:29:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   29 | typedef int uart_port_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~
      | using uart_port_t = int
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:34:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   34 | typedef enum {
      | ^~~~~~~~~~~~~~
   35 |     UART_MODE_UART = 0x00,                      /*!< mode: regular UART mode*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   36 |     UART_MODE_RS485_HALF_DUPLEX = 0x01,         /*!< mode: half duplex RS485 UART mode control by RTS pin */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     UART_MODE_IRDA = 0x02,                      /*!< mode: IRDA  UART mode*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     UART_MODE_RS485_COLLISION_DETECT = 0x03,    /*!< mode: RS485 collision detection UART mode (used for test purposes)*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     UART_MODE_RS485_APP_CTRL = 0x04,            /*!< mode: application control RS485 UART mode (used for test purposes)*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 | } uart_mode_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:34:9: warning: enum 'uart_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   34 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:45:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   45 | typedef enum {
      | ^~~~~~~~~~~~~~
   46 |     UART_DATA_5_BITS   = 0x0,    /*!< word length: 5bits*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 |     UART_DATA_6_BITS   = 0x1,    /*!< word length: 6bits*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 |     UART_DATA_7_BITS   = 0x2,    /*!< word length: 7bits*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |     UART_DATA_8_BITS   = 0x3,    /*!< word length: 8bits*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     UART_DATA_BITS_MAX = 0x4,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   51 | } uart_word_length_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:45:9: warning: enum 'uart_word_length_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   45 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:56:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   56 | typedef enum {
      | ^~~~~~~~~~~~~~
   57 |     UART_STOP_BITS_1   = 0x1,  /*!< stop bit: 1bit*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   58 |     UART_STOP_BITS_1_5 = 0x2,  /*!< stop bit: 1.5bits*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   59 |     UART_STOP_BITS_2   = 0x3,  /*!< stop bit: 2bits*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   60 |     UART_STOP_BITS_MAX = 0x4,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   61 | } uart_stop_bits_t;
      | ~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:56:9: warning: enum 'uart_stop_bits_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   56 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:66:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   66 | typedef enum {
      | ^~~~~~~~~~~~~~
   67 |     UART_PARITY_DISABLE  = 0x0,  /*!< Disable UART parity*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   68 |     UART_PARITY_EVEN     = 0x2,  /*!< Enable UART even parity*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   69 |     UART_PARITY_ODD      = 0x3   /*!< Enable UART odd parity*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   70 | } uart_parity_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:66:9: warning: enum 'uart_parity_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   66 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:75:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   75 | typedef enum {
      | ^~~~~~~~~~~~~~
   76 |     UART_HW_FLOWCTRL_DISABLE = 0x0,   /*!< disable hardware flow control*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |     UART_HW_FLOWCTRL_RTS     = 0x1,   /*!< enable RX hardware flow control (rts)*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |     UART_HW_FLOWCTRL_CTS     = 0x2,   /*!< enable TX hardware flow control (cts)*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   79 |     UART_HW_FLOWCTRL_CTS_RTS = 0x3,   /*!< enable hardware flow control*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   80 |     UART_HW_FLOWCTRL_MAX     = 0x4,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   81 | } uart_hw_flowcontrol_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:75:9: warning: enum 'uart_hw_flowcontrol_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   75 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:86:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   86 | typedef enum {
      | ^~~~~~~~~~~~~~
   87 |     UART_SIGNAL_INV_DISABLE  =  0,            /*!< Disable UART signal inverse*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   88 |     UART_SIGNAL_IRDA_TX_INV  = (0x1 << 0),    /*!< inverse the UART irda_tx signal*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |     UART_SIGNAL_IRDA_RX_INV  = (0x1 << 1),    /*!< inverse the UART irda_rx signal*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |     UART_SIGNAL_RXD_INV      = (0x1 << 2),    /*!< inverse the UART rxd signal*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   91 |     UART_SIGNAL_CTS_INV      = (0x1 << 3),    /*!< inverse the UART cts signal*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   92 |     UART_SIGNAL_DSR_INV      = (0x1 << 4),    /*!< inverse the UART dsr signal*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   93 |     UART_SIGNAL_TXD_INV      = (0x1 << 5),    /*!< inverse the UART txd signal*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |     UART_SIGNAL_RTS_INV      = (0x1 << 6),    /*!< inverse the UART rts signal*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   95 |     UART_SIGNAL_DTR_INV      = (0x1 << 7),    /*!< inverse the UART dtr signal*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   96 | } uart_signal_inv_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:86:9: warning: enum 'uart_signal_inv_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   86 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:101:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  101 | typedef enum {
      | ^~~~~~~~~~~~~~
  102 |     UART_SCLK_APB = 0x0,            /*!< UART source clock from APB*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  103 | #if SOC_UART_SUPPORT_RTC_CLK
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |     UART_SCLK_RTC = 0x1,            /*!< UART source clock from RTC*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  105 | #endif
      | ~~~~~~
  106 | #if SOC_UART_SUPPORT_XTAL_CLK
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  107 |     UART_SCLK_XTAL = 0x2,           /*!< UART source clock from XTAL*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  108 | #endif
      | ~~~~~~
  109 | #if SOC_UART_SUPPORT_REF_TICK
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  110 |     UART_SCLK_REF_TICK = 0x3,       /*!< UART source clock from REF_TICK*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  111 | #endif
      | ~~~~~~
  112 | } uart_sclk_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:101:9: warning: enum 'uart_sclk_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  101 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:118:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  118 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  119 |     uint8_t  cmd_char;             /*!< UART AT cmd char*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  120 |     uint8_t  char_num;             /*!< AT cmd char repeat number*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  121 |     uint32_t gap_tout;             /*!< gap time(in baud-rate) between AT cmd char*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  122 |     uint32_t pre_idle;             /*!< the idle time(in baud-rate) between the non AT char and first AT char*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  123 |     uint32_t post_idle;            /*!< the idle time(in baud-rate) between the last AT char and the none AT char*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  124 | } uart_at_cmd_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:129:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  129 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  130 |     uint8_t  xon_char;      /*!< Xon flow control char*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  131 |     uint8_t  xoff_char;     /*!< Xoff flow control char*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  132 |     uint8_t xon_thrd;      /*!< If the software flow control is enabled and the data amount in rxfifo is less than xon_thrd, an xon_char will be sent*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  133 |     uint8_t xoff_thrd;       /*!< If the software flow control is enabled and the data amount in rxfifo is more than xoff_thrd, an xoff_char will be sent*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  134 | } uart_sw_flowctrl_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal/uart_types.h:139:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  139 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  140 |     int baud_rate;                      /*!< UART baud rate*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |     uart_word_length_t data_bits;       /*!< UART byte size*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  142 |     uart_parity_t parity;               /*!< UART parity mode*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |     uart_stop_bits_t stop_bits;         /*!< UART stop bits*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |     uart_hw_flowcontrol_t flow_ctrl;    /*!< UART HW flow control mode (cts/rts)*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |     uint8_t rx_flow_ctrl_thresh;        /*!< UART HW RTS threshold*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |     union {
      |     ~~~~~~~
  147 |         uart_sclk_t source_clk;         /*!< UART source clock selection */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |         bool use_ref_tick  __attribute__((deprecated)); /*!< Deprecated method to select ref tick clock source, set source_clk field instead */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |     };
      |     ~~
  150 | } uart_config_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal\esp_flash_err.h:31:1: warning: enum '(unnamed enum at C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\hal\include\hal\esp_flash_err.h:31:1)' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint16_t' (2 bytes) as the base type to reduce its size [performance-enum-size]
   31 | enum {
      | ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\esp_heap_caps.h:10:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\esp_heap_caps.h [llvmlibc-restrict-system-libc-headers]
   10 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   11 | #include "multi_heap.h"
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\esp_heap_caps.h:47:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   47 | typedef void (*esp_alloc_failed_hook_t) (size_t size, uint32_t caps, const char * function_name);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_alloc_failed_hook_t = void (*) (size_t size, uint32_t caps, const char * function_name)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\multi_heap.h:16:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\multi_heap.h [llvmlibc-restrict-system-libc-headers]
   16 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   17 | #include <stdbool.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\multi_heap.h:30:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   30 | typedef struct multi_heap_info *multi_heap_handle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using multi_heap_handle_t = struct multi_heap_info *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\multi_heap.h:60:90: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   60 | void __attribute__((deprecated)) multi_heap_aligned_free(multi_heap_handle_t heap, void *p);
      |                                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\multi_heap.h:69:54: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   69 | void multi_heap_free(multi_heap_handle_t heap, void *p);
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\multi_heap.h:81:58: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   81 | void *multi_heap_realloc(multi_heap_handle_t heap, void *p, size_t size);
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\multi_heap.h:92:70: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   92 | size_t multi_heap_get_allocated_size(multi_heap_handle_t heap, void *p);
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\multi_heap.h:169:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  169 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  170 |     size_t total_free_bytes;      ///<  Total free bytes in the heap. Equivalent to multi_free_heap_size().
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  171 |     size_t total_allocated_bytes; ///<  Total bytes allocated to data in the heap.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  172 |     size_t largest_free_block;    ///<  Size of largest free block in the heap. This is the largest malloc-able size.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  173 |     size_t minimum_free_bytes;    ///<  Lifetime minimum free heap size. Equivalent to multi_minimum_free_heap_size().
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  174 |     size_t allocated_blocks;      ///<  Number of (variable size) blocks allocated in the heap.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  175 |     size_t free_blocks;           ///<  Number of (variable size) free blocks in the heap.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  176 |     size_t total_blocks;          ///<  Total number of (variable size) blocks in the heap.
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  177 | } multi_heap_info_t;
      | ~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\log\include\esp_log.h:8:9: warning: declaration uses identifier '__ESP_LOG_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define __ESP_LOG_H__
      |         ^~~~~~~~~~~~~
      |         ESP_LOG_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\log\include\esp_log.h:34:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   34 | typedef enum {
      | ^~~~~~~~~~~~~~
   35 |     ESP_LOG_NONE,       /*!< No log output */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   36 |     ESP_LOG_ERROR,      /*!< Critical errors, software module can not recover on its own */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   37 |     ESP_LOG_WARN,       /*!< Error conditions from which recovery measures have been taken */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |     ESP_LOG_INFO,       /*!< Information messages which describe normal flow of events */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     ESP_LOG_DEBUG,      /*!< Extra information which is not necessary for normal use (values, pointers, sizes, etc). */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     ESP_LOG_VERBOSE     /*!< Bigger chunks of debugging information, or frequent messages which can potentially flood the output. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 | } esp_log_level_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\log\include\esp_log.h:34:9: warning: enum 'esp_log_level_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   34 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\log\include\esp_log.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   43 | typedef int (*vprintf_like_t)(const char *, va_list);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using vprintf_like_t = int (*)(const char *, va_list)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\log\include\esp_log.h:335:9: warning: declaration uses identifier '_ESP_LOG_EARLY_ENABLED', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  335 | #define _ESP_LOG_EARLY_ENABLED(log_level) (LOG_LOCAL_LEVEL >= (log_level) && esp_log_default_level >= (log_level))
      |         ^~~~~~~~~~~~~~~~~~~~~~
      |         ESP_LOG_EARLY_ENABLED
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\log\include\esp_log.h:486:9: warning: declaration uses identifier '_ESP_LOG_DRAM_LOG_FORMAT', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  486 | #define _ESP_LOG_DRAM_LOG_FORMAT(letter, format)  DRAM_STR(#letter " %s: " format "\n")
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
      |         ESP_LOG_DRAM_LOG_FORMAT
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\log\include\esp_log_internal.h:8:9: warning: declaration uses identifier '__ESP_LOG_INTERNAL_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define __ESP_LOG_INTERNAL_H__
      |         ^~~~~~~~~~~~~~~~~~~~~~
      |         ESP_LOG_INTERNAL_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:15:9: warning: declaration uses identifier '__DHCPS_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define __DHCPS_H__
      |         ^~~~~~~~~~~
      |         DHCPS_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:25:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   25 | typedef struct dhcps_state{
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
   26 |         s16_t state;
      |         ~~~~~~~~~~~~
   27 | } dhcps_state;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:29:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   29 | typedef struct dhcps_msg {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
   30 |         u8_t op, htype, hlen, hops;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |         u8_t xid[4];
      |         ~~~~~~~~~~~~
   32 |         u16_t secs, flags;
      |         ~~~~~~~~~~~~~~~~~~
   33 |         u8_t ciaddr[4];
      |         ~~~~~~~~~~~~~~~
   34 |         u8_t yiaddr[4];
      |         ~~~~~~~~~~~~~~~
   35 |         u8_t siaddr[4];
      |         ~~~~~~~~~~~~~~~
   36 |         u8_t giaddr[4];
      |         ~~~~~~~~~~~~~~~
   37 |         u8_t chaddr[16];
      |         ~~~~~~~~~~~~~~~~
   38 |         u8_t sname[64];
      |         ~~~~~~~~~~~~~~~
   39 |         u8_t file[128];
      |         ~~~~~~~~~~~~~~~
   40 |         u8_t options[312];
      |         ~~~~~~~~~~~~~~~~~~
   41 | }dhcps_msg;
      | ~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:44:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   44 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   45 |         bool enable;
      |         ~~~~~~~~~~~~
   46 |         ip4_addr_t start_ip;
      |         ~~~~~~~~~~~~~~~~~~~~
   47 |         ip4_addr_t end_ip;
      |         ~~~~~~~~~~~~~~~~~~
   48 | } dhcps_lease_t;
      | ~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:50:1: warning: initial values in enum 'dhcps_offer_option' are not consistent, consider explicit initialization of all, none or only the first enumerator [cert-int09-c,readability-enum-initial-value]
   50 | enum dhcps_offer_option{
      | ^
   51 |         OFFER_START = 0x00,
   52 |         OFFER_ROUTER = 0x01,
   53 |         OFFER_DNS = 0x02,
   54 |         OFFER_END
      |                  
      |                   = 3
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:50:6: warning: enum 'dhcps_offer_option' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   50 | enum dhcps_offer_option{
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:68:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   68 | typedef u32_t dhcps_time_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
      | using dhcps_time_t = u32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   69 | typedef u8_t dhcps_offer_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
      | using dhcps_offer_t = u8_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:71:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   71 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   72 |         dhcps_offer_t dhcps_offer;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |         dhcps_offer_t dhcps_dns;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
   74 |         dhcps_time_t  dhcps_time;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         dhcps_lease_t dhcps_poll;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
   76 | } dhcps_options_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:78:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   78 | typedef void (*dhcps_cb_t)(u8_t client_ip[4]);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using dhcps_cb_t = void (*)(u8_t client_ip[4])
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:78:28: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   78 | typedef void (*dhcps_cb_t)(u8_t client_ip[4]);
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:80:1: warning: 'dhcps_router_enabled' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   80 | static inline bool dhcps_router_enabled (dhcps_offer_t offer)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:85:1: warning: 'dhcps_dns_enabled' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   85 | static inline bool dhcps_dns_enabled (dhcps_offer_t offer)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:90:51: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   90 | err_t dhcps_start(struct netif *netif, ip4_addr_t ip);
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:94:51: warning: parameter name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   94 | bool dhcp_search_ip_on_mac(u8_t *mac, ip4_addr_t *ip);
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\include\apps\dhcpserver/dhcpserver.h:97:40: warning: parameter name 'cb' is too short, expected at least 3 characters [readability-identifier-length]
   97 | void dhcps_set_new_lease_cb(dhcps_cb_t cb);
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:125:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  125 | typedef uint8_t   u8_t;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using u8_t = uint8_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:126:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  126 | typedef int8_t    s8_t;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using s8_t = int8_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:127:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  127 | typedef uint16_t  u16_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~
      | using u16_t = uint16_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:128:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  128 | typedef int16_t   s16_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~
      | using s16_t = int16_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:129:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  129 | typedef uint32_t  u32_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~
      | using u32_t = uint32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:130:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  130 | typedef int32_t   s32_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~
      | using s32_t = int32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:132:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  132 | typedef uint64_t  u64_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~
      | using u64_t = uint64_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:133:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  133 | typedef int64_t   s64_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~
      | using s64_t = int64_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:135:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  135 | typedef uintptr_t mem_ptr_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using mem_ptr_t = uintptr_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:202:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  202 | typedef int ssize_t;
      | ^~~~~~~~~~~~~~~~~~~
      | using ssize_t = int
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:228:1: warning: system include ctype.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h [llvmlibc-restrict-system-libc-headers]
  228 | #include <ctype.h>
      | ^~~~~~~~~~~~~~~~~~
  229 | #define lwip_isdigit(c)           isdigit((unsigned char)(c))
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/arch.h:240:69: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  240 | #define LWIP_CONST_CAST(target_type, val) ((target_type)((ptrdiff_t)val))
      |                                                                     ^  
      |                                                                     (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/debug.h:41:10: warning: circular header file dependency detected while including 'opt.h', please check the include path [misc-header-include-cycle]
   41 | #include "lwip/opt.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/opt.h:52:10: note: 'debug.h' included from here
   52 | #include "lwip/debug.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:40:10: note: 'opt.h' included from here
   40 | #include "lwip/opt.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/def.h:96:24: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
   96 | u16_t lwip_htons(u16_t x);
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/def.h:101:24: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
  101 | u32_t lwip_htonl(u32_t x);
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/err.h:53:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   53 | typedef enum {
      | ^~~~~~~~~~~~~~
   54 | /** No error, everything OK. */
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 |   ERR_OK         = 0,
      |   ~~~~~~~~~~~~~~~~~~~
   56 | /** Out of memory error.     */
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   57 |   ERR_MEM        = -1,
      |   ~~~~~~~~~~~~~~~~~~~~
   58 | /** Buffer error.            */
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   59 |   ERR_BUF        = -2,
      |   ~~~~~~~~~~~~~~~~~~~~
   60 | /** Timeout.                 */
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   61 |   ERR_TIMEOUT    = -3,
      |   ~~~~~~~~~~~~~~~~~~~~
   62 | /** Routing problem.         */
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |   ERR_RTE        = -4,
      |   ~~~~~~~~~~~~~~~~~~~~
   64 | /** Operation in progress    */
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   65 |   ERR_INPROGRESS = -5,
      |   ~~~~~~~~~~~~~~~~~~~~
   66 | /** Illegal value.           */
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   67 |   ERR_VAL        = -6,
      |   ~~~~~~~~~~~~~~~~~~~~
   68 | /** Operation would block.   */
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/err.h:53:9: warning: enum 'err_enum_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::int8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   53 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/err.h:96:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   96 | typedef s8_t err_t;
      | ^~~~~~~~~~~~~~~~~~
      | using err_t = s8_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip4_addr.h:57:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   57 | typedef struct ip4_addr ip4_addr_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ip4_addr_t = struct ip4_addr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip4_addr.h:183:71: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  183 | #define ip4_addr_get_byte_val(ipaddr, idx) ((u8_t)(((ipaddr).addr >> (idx * 8)) & 0xff))
      |                                                                       ^
      |                                                                       (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip4_addr.h:204:31: warning: parameter name 'cp' is too short, expected at least 3 characters [readability-identifier-length]
  204 | u32_t ipaddr_addr(const char *cp);
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip4_addr.h:205:30: warning: parameter name 'cp' is too short, expected at least 3 characters [readability-identifier-length]
  205 | int ip4addr_aton(const char *cp, ip4_addr_t *addr);
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   67 | typedef struct ip6_addr ip6_addr_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using ip6_addr_t = struct ip6_addr
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:117:58: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  117 |                                     ip6_addr_clear_zone(&dest); }while(0)
      |                                                          ^   
      |                                                          (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:299:41: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  299 | #define ip6_addr_isinvalid(addr_state) (addr_state == IP6_ADDR_INVALID)
      |                                         ^
      |                                         (         )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:300:43: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  300 | #define ip6_addr_istentative(addr_state) (addr_state & IP6_ADDR_TENTATIVE)
      |                                           ^
      |                                           (         )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:301:39: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  301 | #define ip6_addr_isvalid(addr_state) (addr_state & IP6_ADDR_VALID) /* Include valid, preferred, and deprecated. */
      |                                       ^
      |                                       (         )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:302:43: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  302 | #define ip6_addr_ispreferred(addr_state) (addr_state == IP6_ADDR_PREFERRED)
      |                                           ^
      |                                           (         )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:303:44: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  303 | #define ip6_addr_isdeprecated(addr_state) (addr_state == IP6_ADDR_DEPRECATED)
      |                                            ^
      |                                            (         )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:304:44: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  304 | #define ip6_addr_isduplicated(addr_state) (addr_state == IP6_ADDR_DUPLICATED)
      |                                            ^
      |                                            (         )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_addr.h:339:30: warning: parameter name 'cp' is too short, expected at least 3 characters [readability-identifier-length]
  339 | int ip6addr_aton(const char *cp, ip6_addr_t *addr);
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip6_zone.h:136:6: warning: enum 'lwip_ipv6_scope_type' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  136 | enum lwip_ipv6_scope_type
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:54:6: warning: enum 'lwip_ip_addr_type' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   54 | enum lwip_ip_addr_type {
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   69 | typedef struct ip_addr {
      | ^~~~~~~~~~~~~~~~~~~~~~~~
   70 |   union {
      |   ~~~~~~~
   71 |     ip6_addr_t ip6;
      |     ~~~~~~~~~~~~~~~
   72 |     ip4_addr_t ip4;
      |     ~~~~~~~~~~~~~~~
   73 |   } u_addr;
      |   ~~~~~~~~~
   74 |   /** @ref lwip_ip_addr_type */
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |   u8_t type;
      |   ~~~~~~~~~~
   76 | } ip_addr_t;
      | ~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:91:53: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   91 | #define IP_IS_ANY_TYPE_VAL(ipaddr)    (IP_GET_TYPE(&ipaddr) == IPADDR_TYPE_ANY)
      |                                                     ^     
      |                                                     (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:96:53: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   96 | #define IP_IS_V4_VAL(ipaddr)          (IP_GET_TYPE(&ipaddr) == IPADDR_TYPE_V4)
      |                                                     ^     
      |                                                     (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:98:53: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   98 | #define IP_IS_V6_VAL(ipaddr)          (IP_GET_TYPE(&ipaddr) == IPADDR_TYPE_V6)
      |                                                     ^     
      |                                                     (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:108:53: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  108 | #define IP_ADDR_RAW_SIZE(ipaddr)      (IP_GET_TYPE(&ipaddr) == IPADDR_TYPE_V4 ? sizeof(ip4_addr_t) : sizeof(ip6_addr_t))
      |                                                     ^     
      |                                                     (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:110:68: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  110 | #define IP_ADDR_PCB_VERSION_MATCH_EXACT(pcb, ipaddr) (IP_GET_TYPE(&pcb->local_ip) == IP_GET_TYPE(ipaddr))
      |                                                                    ^  
      |                                                                    (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:111:68: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  111 | #define IP_ADDR_PCB_VERSION_MATCH(pcb, ipaddr) (IP_IS_ANY_TYPE_VAL(pcb->local_ip) || IP_ADDR_PCB_VERSION_MATCH_EXACT(pcb, ipaddr))
      |                                                                    ^  
      |                                                                    (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:142:77: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  142 | #define ip_addr_copy(dest, src)      do{ IP_SET_TYPE_VAL(dest, IP_GET_TYPE(&src)); if(IP_IS_V6_VAL(src)){ \
      |                                                                             ^  
      |                                                                             (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:144:71: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  144 |   ip4_addr_copy(*ip_2_ip4(&(dest)), *ip_2_ip4(&(src))); ip_clear_no4(&dest); }}while(0)
      |                                                                       ^   
      |                                                                       (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:153:96: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  153 |   ip4_addr_copy(*ip_2_ip4(&(dest)), src); IP_SET_TYPE_VAL(dest, IPADDR_TYPE_V4); ip_clear_no4(&dest); }while(0)
      |                                                                                                ^   
      |                                                                                                (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:159:58: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  159 |   IP_SET_TYPE_VAL(ipaddr, IPADDR_TYPE_V4); ip_clear_no4(&ipaddr); }while(0)
      |                                                          ^     
      |                                                          (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:185:97: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  185 |   ip4_addr_set_any(ip_2_ip4(&(ipaddr))); IP_SET_TYPE_VAL(ipaddr, IPADDR_TYPE_V4); ip_clear_no4(&ipaddr); }}while(0)
      |                                                                                                 ^     
      |                                                                                                 (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:193:102: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  193 |   ip4_addr_set_loopback(ip_2_ip4(&(ipaddr))); IP_SET_TYPE_VAL(ipaddr, IPADDR_TYPE_V4); ip_clear_no4(&ipaddr); }}while(0)
      |                                                                                                      ^     
      |                                                                                                      (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/ip_addr.h:246:29: warning: parameter name 'cp' is too short, expected at least 3 characters [readability-identifier-length]
  246 | int ipaddr_aton(const char *cp, ip_addr_t *addr);
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:89:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   89 | typedef enum {
      | ^~~~~~~~~~~~~~
   90 |   /** Includes spare room for transport layer header, e.g. UDP header.
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   91 |    * Use this if you intend to pass the pbuf to functions like udp_send().
      |    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   92 |    */
      |    ~~
   93 |   PBUF_TRANSPORT = PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN + PBUF_TRANSPORT_HLEN,
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |   /** Includes spare room for IP header.
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   95 |    * Use this if you intend to pass the pbuf to functions like raw_send().
      |    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   96 |    */
      |    ~~
   97 |   PBUF_IP = PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN + PBUF_IP_HLEN,
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   98 |   /** Includes spare room for link layer header (ethernet header).
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   99 |    * Use this if you intend to pass the pbuf to functions like ethernet_output().
      |    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  100 |    * @see PBUF_LINK_HLEN
      |    ~~~~~~~~~~~~~~~~~~~~~
  101 |    */
      |    ~~
  102 |   PBUF_LINK = PBUF_LINK_ENCAPSULATION_HLEN + PBUF_LINK_HLEN,
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  103 |   /** Includes spare room for additional encapsulation header before ethernet
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |    * headers (e.g. 802.11).
      |    ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:89:9: warning: enum 'pbuf_layer' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   89 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:145:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  145 | typedef enum {
      | ^~~~~~~~~~~~~~
  146 |   /** pbuf data is stored in RAM, used for TX mostly, struct pbuf and its payload
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |       are allocated in one piece of contiguous memory (so the first payload byte
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |       can be calculated from struct pbuf).
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |       pbuf_alloc() allocates PBUF_RAM pbufs as unchained pbufs (although that might
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |       change in future versions).
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |       This should be used for all OUTGOING packets (TX).*/
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |   PBUF_RAM = (PBUF_ALLOC_FLAG_DATA_CONTIGUOUS | PBUF_TYPE_FLAG_STRUCT_DATA_CONTIGUOUS | PBUF_TYPE_ALLOC_SRC_MASK_STD_HEAP),
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |   /** pbuf data is stored in ROM, i.e. struct pbuf and its payload are located in
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  154 |       totally different memory areas. Since it points to ROM, payload does not
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |       have to be copied when queued for transmission. */
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |   PBUF_ROM = PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF,
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |   /** pbuf comes from the pbuf pool. Much like PBUF_ROM but payload might change
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |       so it has to be duplicated when queued before transmitting, depending on
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |       who has a 'ref' to it. */
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |   PBUF_REF = (PBUF_TYPE_FLAG_DATA_VOLATILE | PBUF_TYPE_ALLOC_SRC_MASK_STD_MEMP_PBUF),
      |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:145:9: warning: enum 'pbuf_type' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint16_t' (2 bytes) as the base type to reduce its size [performance-enum-size]
  145 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:246:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  246 | typedef void (*pbuf_free_custom_fn)(struct pbuf *p);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using pbuf_free_custom_fn = void (*)(struct pbuf *p)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:246:50: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  246 | typedef void (*pbuf_free_custom_fn)(struct pbuf *p);
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:279:36: warning: parameter name 'l' is too short, expected at least 3 characters [readability-identifier-length]
  279 | struct pbuf *pbuf_alloc(pbuf_layer l, u16_t length, pbuf_type type);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:282:45: warning: parameter name 'l' is too short, expected at least 3 characters [readability-identifier-length]
  282 | struct pbuf *pbuf_alloced_custom(pbuf_layer l, u16_t length, pbuf_type type,
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:283:54: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  283 |                                  struct pbuf_custom *p, void *payload_mem,
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:286:32: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  286 | void pbuf_realloc(struct pbuf *p, u16_t size);
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:290:31: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  290 | u8_t pbuf_header(struct pbuf *p, s16_t header_size);
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:291:37: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  291 | u8_t pbuf_header_force(struct pbuf *p, s16_t header_size);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:292:35: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  292 | u8_t pbuf_add_header(struct pbuf *p, size_t header_size_increment);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:293:41: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  293 | u8_t pbuf_add_header_force(struct pbuf *p, size_t header_size_increment);
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:294:38: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  294 | u8_t pbuf_remove_header(struct pbuf *p, size_t header_size);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:295:44: warning: parameter name 'q' is too short, expected at least 3 characters [readability-identifier-length]
  295 | struct pbuf *pbuf_free_header(struct pbuf *q, u16_t size);
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:296:28: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  296 | void pbuf_ref(struct pbuf *p);
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:297:29: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  297 | u8_t pbuf_free(struct pbuf *p);
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:298:36: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  298 | u16_t pbuf_clen(const struct pbuf *p);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:301:40: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  301 | struct pbuf *pbuf_dechain(struct pbuf *p);
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:304:44: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  304 | u16_t pbuf_copy_partial(const struct pbuf *p, void *dataptr, u16_t len, u16_t offset);
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:305:46: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  305 | void *pbuf_get_contiguous(const struct pbuf *p, void *buffer, size_t bufsize, u16_t len, u16_t offset);
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:308:37: warning: parameter name 'in' is too short, expected at least 3 characters [readability-identifier-length]
  308 | struct pbuf *pbuf_skip(struct pbuf* in, u16_t in_offset, u16_t* out_offset);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:309:41: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  309 | struct pbuf *pbuf_coalesce(struct pbuf *p, pbuf_layer layer);
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:310:36: warning: parameter name 'l' is too short, expected at least 3 characters [readability-identifier-length]
  310 | struct pbuf *pbuf_clone(pbuf_layer l, pbuf_type type, struct pbuf *p);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:310:68: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  310 | struct pbuf *pbuf_clone(pbuf_layer l, pbuf_type type, struct pbuf *p);
      |                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:319:37: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  319 | u8_t pbuf_get_at(const struct pbuf* p, u16_t offset);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:320:40: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  320 | int pbuf_try_get_at(const struct pbuf* p, u16_t offset);
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:321:31: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  321 | void pbuf_put_at(struct pbuf* p, u16_t offset, u8_t data);
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:322:38: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  322 | u16_t pbuf_memcmp(const struct pbuf* p, u16_t offset, const void* s2, u16_t n);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:322:67: warning: parameter name 's2' is too short, expected at least 3 characters [readability-identifier-length]
  322 | u16_t pbuf_memcmp(const struct pbuf* p, u16_t offset, const void* s2, u16_t n);
      |                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:323:39: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  323 | u16_t pbuf_memfind(const struct pbuf* p, const void* mem, u16_t mem_len, u16_t start_offset);
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\lwip\src\include\lwip/pbuf.h:324:38: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  324 | u16_t pbuf_strstr(const struct pbuf* p, const char* substr);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:35:9: warning: declaration uses identifier '__ARCH_CC_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   35 | #define __ARCH_CC_H__
      |         ^~~~~~~~~~~~~
      |         ARCH_CC_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:40:1: warning: system include stdio.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h [llvmlibc-restrict-system-libc-headers]
   40 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   41 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:57:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   57 | typedef uint8_t  u8_t;
      | ^~~~~~~~~~~~~~~~~~~~~
      | using u8_t = uint8_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:58:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   58 | typedef int8_t   s8_t;
      | ^~~~~~~~~~~~~~~~~~~~~
      | using s8_t = int8_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:59:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   59 | typedef uint16_t u16_t;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using u16_t = uint16_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:60:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   60 | typedef int16_t  s16_t;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using s16_t = int16_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   61 | typedef uint32_t u32_t;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using u32_t = uint32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   62 | typedef int32_t  s32_t;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using s32_t = int32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:65:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   65 | typedef int sys_prot_t;
      | ^~~~~~~~~~~~~~~~~~~~~~
      | using sys_prot_t = int
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h:80:1: warning: system include stdio.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/cc.h [llvmlibc-restrict-system-libc-headers]
   80 | #include <stdio.h>
      | ^~~~~~~~~~~~~~~~~~
   81 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:34:9: warning: declaration uses identifier '__SYS_ARCH_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   34 | #define __SYS_ARCH_H__
      |         ^~~~~~~~~~~~~~
      |         SYS_ARCH_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:47:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   47 | typedef SemaphoreHandle_t sys_sem_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using sys_sem_t = SemaphoreHandle_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:48:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   48 | typedef SemaphoreHandle_t sys_mutex_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using sys_mutex_t = SemaphoreHandle_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   49 | typedef TaskHandle_t sys_thread_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using sys_thread_t = TaskHandle_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:51:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   51 | typedef struct sys_mbox_s {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |   QueueHandle_t os_mbox;
      |   ~~~~~~~~~~~~~~~~~~~~~~
   53 |   void *owner;
      |   ~~~~~~~~~~~~
   54 | }* sys_mbox_t;
      | ~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:61:28: warning: parameter name 'ms' is too short, expected at least 3 characters [readability-identifier-length]
   61 | void sys_delay_ms(uint32_t ms);
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:67:37: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   67 | #define sys_mutex_valid( x ) ( ( ( *x ) == NULL) ? pdFALSE : pdTRUE )
      |                                     ^
      |                                     ()
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:68:41: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   68 | #define sys_mutex_set_invalid( x ) ( ( *x ) = NULL )
      |                                         ^
      |                                         ()
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:71:36: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   71 | #define sys_mbox_valid( x ) ( ( ( *x ) == NULL) ? pdFALSE : pdTRUE )
      |                                    ^
      |                                    ()
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:90:37: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   90 | #define sys_mbox_set_invalid( x )  *x = NULL
      |                                     ^
      |                                     ()
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:92:35: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   92 | #define sys_sem_valid( x ) ( ( ( *x ) == NULL) ? pdFALSE : pdTRUE )
      |                                   ^
      |                                   ()
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:93:39: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   93 | #define sys_sem_set_invalid( x ) ( ( *x ) = NULL )
      |                                       ^
      |                                       ()
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:95:6: warning: redundant 'sys_delay_ms' declaration [readability-redundant-declaration]
   95 | void sys_delay_ms(uint32_t ms);
      | ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:61:6: note: previously declared here
   61 | void sys_delay_ms(uint32_t ms);
      |      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:95:28: warning: parameter name 'ms' is too short, expected at least 3 characters [readability-identifier-length]
   95 | void sys_delay_ms(uint32_t ms);
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:100:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  100 | typedef enum {
      | ^~~~~~~~~~~~~~
  101 |     LWIP_CORE_LOCK_QUERY_HOLDER,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  102 |     LWIP_CORE_LOCK_MARK_HOLDER,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  103 |     LWIP_CORE_LOCK_UNMARK_HOLDER,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |     LWIP_CORE_MARK_TCPIP_TASK,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  105 |     LWIP_CORE_IS_TCPIP_INITIALIZED,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  106 | } sys_thread_core_lock_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\arch/sys_arch.h:100:9: warning: enum 'sys_thread_core_lock_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  100 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\lwipopts.h:10:9: warning: declaration uses identifier '__LWIPOPTS_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   10 | #define __LWIPOPTS_H__
      |         ^~~~~~~~~~~~~~
      |         LWIPOPTS_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\lwipopts.h:12:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\lwipopts.h [llvmlibc-restrict-system-libc-headers]
   12 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   13 | #include <unistd.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\lwipopts.h:16:1: warning: system include sys/types.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\lwipopts.h [llvmlibc-restrict-system-libc-headers]
   16 | #include <sys/types.h>
      | ^~~~~~~~~~~~~~~~~~~~~~
   17 | #include <sys/select.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\lwipopts.h:283:1: warning: 'timeout_from_offered' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  283 | static inline uint32_t timeout_from_offered(uint32_t lease, uint32_t min)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\netif/dhcp_state.h:17:9: warning: declaration uses identifier '_DHCP_STATE_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   17 | #define _DHCP_STATE_H_
      |         ^~~~~~~~~~~~~~
      |         DHCP_STATE_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\sntp/sntp_get_set_time.h:16:9: warning: declaration uses identifier '__SNTP_GET_SET_TIME_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define __SNTP_GET_SET_TIME_H__
      |         ^~~~~~~~~~~~~~~~~~~~~~~
      |         SNTP_GET_SET_TIME_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\sntp/sntp_get_set_time.h:43:50: warning: parameter name 'us' is too short, expected at least 3 characters [readability-identifier-length]
   43 | void sntp_set_system_time(uint32_t sec, uint32_t us);
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\lwip\port\esp32\include\sntp/sntp_get_set_time.h:49:52: warning: parameter name 'us' is too short, expected at least 3 characters [readability-identifier-length]
   49 | void sntp_get_system_time(uint32_t* sec, uint32_t* us);
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:21:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h [llvmlibc-restrict-system-libc-headers]
   21 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   22 | #include <stdint.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h:24:1: warning: system include assert.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\assert.h [llvmlibc-restrict-system-libc-headers]
   24 | #include_next <assert.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~
   25 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\esp_newlib.h:16:9: warning: declaration uses identifier '__ESP_NEWLIB_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define __ESP_NEWLIB_H__
      |         ^~~~~~~~~~~~~~~~
      |         ESP_NEWLIB_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\esp_newlib.h:31:36: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
   31 | void esp_reent_init(struct _reent* r);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\sys/ioctl.h:21:15: warning: parameter name 'fd' is too short, expected at least 3 characters [readability-identifier-length]
   21 | int ioctl(int fd, int request, ...);
      |               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\sys/reent.h:23:31: warning: declaration uses identifier '_reent', which is reserved in the global namespace [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   23 | extern void _cleanup_r(struct _reent* r);
      |                               ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\sys/reent.h:23:39: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
   23 | extern void _cleanup_r(struct _reent* r);
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\sys/select.h:16:9: warning: declaration uses identifier '__ESP_SYS_SELECT_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define __ESP_SYS_SELECT_H__
      |         ^~~~~~~~~~~~~~~~~~~~
      |         ESP_SYS_SELECT_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\sys/select.h:19:1: warning: system include sys/types.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\newlib\platform_include\sys/select.h [llvmlibc-restrict-system-libc-headers]
   19 | #include <sys/types.h>
      | ^~~~~~~~~~~~~~~~~~~~~~
   20 | #ifndef fd_set
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:27:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   27 | typedef esp_err_t (*protocomm_req_handler_t)(
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   28 |     uint32_t        session_id, /*!< Session ID for identifying protocomm client */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 |     const uint8_t  *inbuf,      /*!< Pointer to user provided input data buffer */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   30 |     ssize_t         inlen,      /*!< Length o the input buffer */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |     uint8_t       **outbuf,     /*!< Pointer to output buffer allocated by handler */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   32 |     ssize_t        *outlen,     /*!< Length of the allocated output buffer */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   33 |     void           *priv_data   /*!< Private data passed to the handler (NULL if not used) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 | );
      | ~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:43:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   43 | typedef struct protocomm protocomm_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using protocomm_t = struct protocomm
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:65:36: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
   65 | void protocomm_delete(protocomm_t *pc);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:94:47: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
   94 | esp_err_t protocomm_add_endpoint(protocomm_t *pc, const char *ep_name,
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:95:58: warning: parameter name 'h' is too short, expected at least 3 characters [readability-identifier-length]
   95 |                                  protocomm_req_handler_t h, void *priv_data);
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:115:50: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  115 | esp_err_t protocomm_remove_endpoint(protocomm_t *pc, const char *ep_name);
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:132:47: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  132 | esp_err_t protocomm_open_session(protocomm_t *pc, uint32_t session_id);
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:148:48: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  148 | esp_err_t protocomm_close_session(protocomm_t *pc, uint32_t session_id);
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:177:45: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  177 | esp_err_t protocomm_req_handle(protocomm_t *pc, const char *ep_name, uint32_t session_id,
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:206:47: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  206 | esp_err_t protocomm_set_security(protocomm_t *pc, const char *ep_name,
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:224:49: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  224 | esp_err_t protocomm_unset_security(protocomm_t *pc, const char *ep_name);
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:247:46: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  247 | esp_err_t protocomm_set_version(protocomm_t *pc, const char *ep_name,
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\common\protocomm.h:264:48: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  264 | esp_err_t protocomm_unset_version(protocomm_t *pc, const char *ep_name);
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\security\protocomm_security.h:26:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   26 | typedef struct protocomm_security_pop {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   27 |     /**
      |     ~~~
   28 |      * Pointer to buffer containing the proof of possession data
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   29 |      */
      |      ~~
   30 |     const uint8_t *data;
      |     ~~~~~~~~~~~~~~~~~~~~
   31 | 
   32 |     /**
      |     ~~~
   33 |      * Length (in bytes) of the proof of possession data
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |      */
      |      ~~
   35 |     uint16_t len;
      |     ~~~~~~~~~~~~~
   36 | } protocomm_security_pop_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\security\protocomm_security.h:38:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   38 | typedef void * protocomm_security_handle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using protocomm_security_handle_t = void *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\protocomm\include\security\protocomm_security.h:49:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   49 | typedef struct protocomm_security {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     /**
      |     ~~~
   51 |      * Unique version number of security implementation
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |      */
      |      ~~
   53 |     int ver;
      |     ~~~~~~~~
   54 | 
   55 |     /**
      |     ~~~
   56 |      * Function for initializing/allocating security
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   57 |      * infrastructure
      |      ~~~~~~~~~~~~~~~~
   58 |      */
      |      ~~
   59 |     esp_err_t (*init)(protocomm_security_handle_t *handle);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   60 | 
   61 |     /**
      |     ~~~
   62 |      * Function for deallocating security infrastructure
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |      */
      |      ~~
   64 |     esp_err_t (*cleanup)(protocomm_security_handle_t handle);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/adc_channel.h:16:9: warning: declaration uses identifier '_SOC_ADC_CHANNEL_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _SOC_ADC_CHANNEL_H
      |         ^~~~~~~~~~~~~~~~~~
      |         SOC_ADC_CHANNEL_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/gpio_reg.h:15:9: warning: declaration uses identifier '_SOC_GPIO_REG_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define _SOC_GPIO_REG_H_
      |         ^~~~~~~~~~~~~~~~
      |         SOC_GPIO_REG_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/gpio_reg.h:23:1: warning: duplicate include [readability-duplicate-include]
   22 | 
   23 | #include "soc.h"
      | ^~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/gpio_sig_map.h:15:9: warning: declaration uses identifier '_SOC_GPIO_SIG_MAP_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   15 | #define _SOC_GPIO_SIG_MAP_H_
      |         ^~~~~~~~~~~~~~~~~~~~
      |         SOC_GPIO_SIG_MAP_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/gpio_struct.h:8:9: warning: declaration uses identifier '_SOC_GPIO_STRUCT_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define _SOC_GPIO_STRUCT_H_
      |         ^~~~~~~~~~~~~~~~~~~
      |         SOC_GPIO_STRUCT_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/gpio_struct.h:16:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   16 | typedef volatile struct gpio_dev_s {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   17 |     uint32_t bt_select;
      |     ~~~~~~~~~~~~~~~~~~~
   18 |     uint32_t out;
      |     ~~~~~~~~~~~~~
   19 |     uint32_t out_w1ts;
      |     ~~~~~~~~~~~~~~~~~~
   20 |     uint32_t out_w1tc;
      |     ~~~~~~~~~~~~~~~~~~
   21 |     union {
      |     ~~~~~~~
   22 |         struct {
      |         ~~~~~~~~
   23 |             uint32_t data                          :    22;
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   24 |             uint32_t reserved22                    :    10;
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   25 |         };
      |         ~~
   26 |         uint32_t val;
      |         ~~~~~~~~~~~~~
   27 |     } out1;
      |     ~~~~~~~
   28 |     union {
      |     ~~~~~~~
   29 |         struct {
      |         ~~~~~~~~
   30 |             uint32_t data                          :    22;
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 |             uint32_t reserved22                    :    10;
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/reset_reasons.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   37 | typedef enum {
      | ^~~~~~~~~~~~~~
   38 |     RESET_REASON_CHIP_POWER_ON   = 0x01, // Power on reset
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     RESET_REASON_CHIP_BROWN_OUT  = 0x01, // VDD voltage is not stable and resets the chip
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     RESET_REASON_CHIP_SUPER_WDT  = 0x01, // Super watch dog resets the chip
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     RESET_REASON_CORE_SW         = 0x03, // Software resets the digital core by RTC_CNTL_SW_SYS_RST
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 |     RESET_REASON_CORE_DEEP_SLEEP = 0x05, // Deep sleep reset the digital core
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     RESET_REASON_CORE_MWDT0      = 0x07, // Main watch dog 0 resets digital core
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     RESET_REASON_CORE_MWDT1      = 0x08, // Main watch dog 1 resets digital core
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 |     RESET_REASON_CORE_RTC_WDT    = 0x09, // RTC watch dog resets digital core
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   46 |     RESET_REASON_CPU0_MWDT0      = 0x0B, // Main watch dog 0 resets CPU 0
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 |     RESET_REASON_CPU1_MWDT0      = 0x0B, // Main watch dog 0 resets CPU 1
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 |     RESET_REASON_CPU0_SW         = 0x0C, // Software resets CPU 0 by RTC_CNTL_SW_PROCPU_RST
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |     RESET_REASON_CPU1_SW         = 0x0C, // Software resets CPU 1 by RTC_CNTL_SW_APPCPU_RST
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |     RESET_REASON_CPU0_RTC_WDT    = 0x0D, // RTC watch dog resets CPU 0
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   51 |     RESET_REASON_CPU1_RTC_WDT    = 0x0D, // RTC watch dog resets CPU 1
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |     RESET_REASON_SYS_BROWN_OUT   = 0x0F, // VDD voltage is not stable and resets the digital core
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/reset_reasons.h:37:9: warning: enum 'soc_reset_reason_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   37 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/soc.h:122:66: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  122 | #define REG_SPI_BASE(i)         (((i)>=2) ? (DR_REG_SPI2_BASE + (i-2) * 0x1000) : (0))    // GPSPI2 and GPSPI3
      |                                                                  ^
      |                                                                  ()
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/soc.h:225:92: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  225 |             (WRITE_PERI_REG((reg),(READ_PERI_REG(reg)&(~((bit_map)<<(shift))))|(((value) & bit_map)<<(shift)) ));      \
      |                                                                                            ^      
      |                                                                                            (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/soc.h:289:33: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  289 | #define MAP_DRAM_TO_IRAM(addr) (addr + SOC_I_D_OFFSET)
      |                                 ^
      |                                 (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/soc.h:290:33: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  290 | #define MAP_IRAM_TO_DRAM(addr) (addr - SOC_I_D_OFFSET)
      |                                 ^
      |                                 (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/soc_caps.h:54:51: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   54 | #define SOC_ADC_DIG_SUPPORTED_UNIT(UNIT)        ((UNIT == 0) ? 1 : 0)    //Digital controller supported ADC unit
      |                                                   ^
      |                                                   (   )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\esp32s3\include\soc/soc_caps.h:221:65: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
  221 | #define SOC_SPI_PERIPH_SUPPORT_MULTILINE_MODE(host_id)  ({(void)host_id; 1;})
      |                                                                 ^      
      |                                                                 (      )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:16:1: warning: system include stdlib.h not allowed, transitively included from C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h [llvmlibc-restrict-system-libc-headers]
   16 | #include <stdlib.h>
      | ^~~~~~~~~~~~~~~~~~~
   17 | #include <stdint.h>
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:29:1: warning: 'esp_ptr_dma_capable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   29 | inline static bool IRAM_ATTR esp_ptr_dma_capable(const void *p)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:29:62: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   29 | inline static bool IRAM_ATTR esp_ptr_dma_capable(const void *p)
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:31:12: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   31 |     return (intptr_t)p >= SOC_DMA_LOW && (intptr_t)p < SOC_DMA_HIGH;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:31:42: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   31 |     return (intptr_t)p >= SOC_DMA_LOW && (intptr_t)p < SOC_DMA_HIGH;
      |                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:34:1: warning: 'esp_ptr_dma_ext_capable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   34 | inline static bool IRAM_ATTR esp_ptr_dma_ext_capable(const void *p)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:34:66: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   34 | inline static bool IRAM_ATTR esp_ptr_dma_ext_capable(const void *p)
      |                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:37:12: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   37 |     return (intptr_t)p >= SOC_DMA_EXT_LOW && (intptr_t)p < SOC_DMA_EXT_HIGH;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:37:46: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   37 |     return (intptr_t)p >= SOC_DMA_EXT_LOW && (intptr_t)p < SOC_DMA_EXT_HIGH;
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:43:1: warning: 'esp_ptr_word_aligned' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   43 | inline static bool IRAM_ATTR esp_ptr_word_aligned(const void *p)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:43:63: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   43 | inline static bool IRAM_ATTR esp_ptr_word_aligned(const void *p)
      |                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:45:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   45 |     return ((intptr_t)p) % 4 == 0;
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:48:1: warning: 'esp_ptr_executable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   48 | inline static bool IRAM_ATTR esp_ptr_executable(const void *p)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:48:61: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   48 | inline static bool IRAM_ATTR esp_ptr_executable(const void *p)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:50:5: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
   50 |     intptr_t ip = (intptr_t) p;
      |     ^~~~~~~~
      |     auto
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:50:5: warning: variable 'ip' of type 'intptr_t' (aka 'long long') can be declared 'const' [misc-const-correctness]
   50 |     intptr_t ip = (intptr_t) p;
      |     ^
      |              const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:50:14: warning: variable name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   50 |     intptr_t ip = (intptr_t) p;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:50:19: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   50 |     intptr_t ip = (intptr_t) p;
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:60:1: warning: 'esp_ptr_byte_accessible' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   60 | inline static bool IRAM_ATTR esp_ptr_byte_accessible(const void *p)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:60:66: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   60 | inline static bool IRAM_ATTR esp_ptr_byte_accessible(const void *p)
      |                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:62:5: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
   62 |     intptr_t ip = (intptr_t) p;
      |     ^~~~~~~~
      |     auto
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:62:5: warning: variable 'ip' of type 'intptr_t' (aka 'long long') can be declared 'const' [misc-const-correctness]
   62 |     intptr_t ip = (intptr_t) p;
      |     ^
      |              const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:62:14: warning: variable name 'ip' is too short, expected at least 3 characters [readability-identifier-length]
   62 |     intptr_t ip = (intptr_t) p;
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:62:19: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   62 |     intptr_t ip = (intptr_t) p;
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:63:10: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
   63 |     bool r;
      |          ^
      |            = false
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:63:10: warning: variable name 'r' is too short, expected at least 3 characters [readability-identifier-length]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:90:1: warning: 'esp_ptr_internal' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   90 | inline static bool IRAM_ATTR esp_ptr_internal(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:90:59: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   90 | inline static bool IRAM_ATTR esp_ptr_internal(const void *p) {
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:91:10: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
   91 |     bool r;
      |          ^
      |            = false
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:91:10: warning: variable name 'r' is too short, expected at least 3 characters [readability-identifier-length]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:92:10: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   92 |     r = ((intptr_t)p >= SOC_MEM_INTERNAL_LOW && (intptr_t)p < SOC_MEM_INTERNAL_HIGH);
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:92:49: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   92 |     r = ((intptr_t)p >= SOC_MEM_INTERNAL_LOW && (intptr_t)p < SOC_MEM_INTERNAL_HIGH);
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:93:11: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   93 |     r |= ((intptr_t)p >= SOC_RTC_DATA_LOW && (intptr_t)p < SOC_RTC_DATA_HIGH);
      |           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:93:46: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   93 |     r |= ((intptr_t)p >= SOC_RTC_DATA_LOW && (intptr_t)p < SOC_RTC_DATA_HIGH);
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:98:11: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   98 |     r |= ((intptr_t)p >= SOC_RTC_DRAM_LOW && (intptr_t)p < SOC_RTC_DRAM_HIGH);
      |           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:98:46: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
   98 |     r |= ((intptr_t)p >= SOC_RTC_DRAM_LOW && (intptr_t)p < SOC_RTC_DRAM_HIGH);
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:113:1: warning: 'esp_ptr_external_ram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  113 | inline static bool IRAM_ATTR esp_ptr_external_ram(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:113:63: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  113 | inline static bool IRAM_ATTR esp_ptr_external_ram(const void *p) {
      |                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:115:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  115 |     return ((intptr_t)p >= SOC_EXTRAM_DATA_LOW && (intptr_t)p < SOC_EXTRAM_DATA_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:115:51: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  115 |     return ((intptr_t)p >= SOC_EXTRAM_DATA_LOW && (intptr_t)p < SOC_EXTRAM_DATA_HIGH);
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:121:1: warning: 'esp_ptr_in_iram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  121 | inline static bool IRAM_ATTR esp_ptr_in_iram(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:121:58: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  121 | inline static bool IRAM_ATTR esp_ptr_in_iram(const void *p) {
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:125:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  125 |     return ((intptr_t)p >= SOC_IRAM_LOW && (intptr_t)p < SOC_IRAM_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:125:44: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  125 |     return ((intptr_t)p >= SOC_IRAM_LOW && (intptr_t)p < SOC_IRAM_HIGH);
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:129:1: warning: 'esp_ptr_in_drom' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  129 | inline static bool IRAM_ATTR esp_ptr_in_drom(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:129:58: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  129 | inline static bool IRAM_ATTR esp_ptr_in_drom(const void *p) {
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:130:5: warning: variable 'drom_start_addr' of type 'int32_t' (aka 'int') can be declared 'const' [misc-const-correctness]
  130 |     int32_t drom_start_addr = SOC_DROM_LOW;
      |     ^
      |             const 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:140:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  140 |     return ((intptr_t)p >= drom_start_addr && (intptr_t)p < SOC_DROM_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:140:47: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  140 |     return ((intptr_t)p >= drom_start_addr && (intptr_t)p < SOC_DROM_HIGH);
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:144:1: warning: 'esp_ptr_in_dram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  144 | inline static bool IRAM_ATTR esp_ptr_in_dram(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:144:58: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  144 | inline static bool IRAM_ATTR esp_ptr_in_dram(const void *p) {
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:145:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  145 |     return ((intptr_t)p >= SOC_DRAM_LOW && (intptr_t)p < SOC_DRAM_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:145:44: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  145 |     return ((intptr_t)p >= SOC_DRAM_LOW && (intptr_t)p < SOC_DRAM_HIGH);
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:148:1: warning: 'esp_ptr_in_diram_dram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  148 | inline static bool IRAM_ATTR esp_ptr_in_diram_dram(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:148:64: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  148 | inline static bool IRAM_ATTR esp_ptr_in_diram_dram(const void *p) {
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:149:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  149 |     return ((intptr_t)p >= SOC_DIRAM_DRAM_LOW && (intptr_t)p < SOC_DIRAM_DRAM_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:149:50: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  149 |     return ((intptr_t)p >= SOC_DIRAM_DRAM_LOW && (intptr_t)p < SOC_DIRAM_DRAM_HIGH);
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:152:1: warning: 'esp_ptr_in_diram_iram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  152 | inline static bool IRAM_ATTR esp_ptr_in_diram_iram(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:152:64: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  152 | inline static bool IRAM_ATTR esp_ptr_in_diram_iram(const void *p) {
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:153:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  153 |     return ((intptr_t)p >= SOC_DIRAM_IRAM_LOW && (intptr_t)p < SOC_DIRAM_IRAM_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:153:50: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  153 |     return ((intptr_t)p >= SOC_DIRAM_IRAM_LOW && (intptr_t)p < SOC_DIRAM_IRAM_HIGH);
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:156:1: warning: 'esp_ptr_in_rtc_iram_fast' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  156 | inline static bool IRAM_ATTR esp_ptr_in_rtc_iram_fast(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:156:67: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  156 | inline static bool IRAM_ATTR esp_ptr_in_rtc_iram_fast(const void *p) {
      |                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:157:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  157 |     return ((intptr_t)p >= SOC_RTC_IRAM_LOW && (intptr_t)p < SOC_RTC_IRAM_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:157:48: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  157 |     return ((intptr_t)p >= SOC_RTC_IRAM_LOW && (intptr_t)p < SOC_RTC_IRAM_HIGH);
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:160:1: warning: 'esp_ptr_in_rtc_dram_fast' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  160 | inline static bool IRAM_ATTR esp_ptr_in_rtc_dram_fast(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:160:67: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  160 | inline static bool IRAM_ATTR esp_ptr_in_rtc_dram_fast(const void *p) {
      |                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:161:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  161 |     return ((intptr_t)p >= SOC_RTC_DRAM_LOW && (intptr_t)p < SOC_RTC_DRAM_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:161:48: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  161 |     return ((intptr_t)p >= SOC_RTC_DRAM_LOW && (intptr_t)p < SOC_RTC_DRAM_HIGH);
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:164:1: warning: 'esp_ptr_in_rtc_slow' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  164 | inline static bool IRAM_ATTR esp_ptr_in_rtc_slow(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:164:62: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  164 | inline static bool IRAM_ATTR esp_ptr_in_rtc_slow(const void *p) {
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:165:13: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  165 |     return ((intptr_t)p >= SOC_RTC_DATA_LOW && (intptr_t)p < SOC_RTC_DATA_HIGH);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:165:48: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  165 |     return ((intptr_t)p >= SOC_RTC_DATA_LOW && (intptr_t)p < SOC_RTC_DATA_HIGH);
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:173:1: warning: 'esp_ptr_diram_dram_to_iram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  173 | inline static void * IRAM_ATTR esp_ptr_diram_dram_to_iram(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:173:71: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  173 | inline static void * IRAM_ATTR esp_ptr_diram_dram_to_iram(const void *p) {
      |                                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:177:12: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  177 |     return (void *) ( SOC_DIRAM_IRAM_LOW + ((intptr_t)p - SOC_DIRAM_DRAM_LOW) );
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:177:12: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:177:45: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  177 |     return (void *) ( SOC_DIRAM_IRAM_LOW + ((intptr_t)p - SOC_DIRAM_DRAM_LOW) );
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:186:1: warning: 'esp_ptr_diram_iram_to_dram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  186 | inline static void * IRAM_ATTR esp_ptr_diram_iram_to_dram(const void *p) {
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:186:71: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  186 | inline static void * IRAM_ATTR esp_ptr_diram_iram_to_dram(const void *p) {
      |                                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:190:12: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  190 |     return (void *) ( SOC_DIRAM_DRAM_LOW + ((intptr_t)p - SOC_DIRAM_IRAM_LOW) );
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:190:12: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:190:45: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  190 |     return (void *) ( SOC_DIRAM_DRAM_LOW + ((intptr_t)p - SOC_DIRAM_IRAM_LOW) );
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:194:1: warning: 'esp_stack_ptr_in_dram' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  194 | inline static bool IRAM_ATTR esp_stack_ptr_in_dram(uint32_t sp)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:194:61: warning: parameter name 'sp' is too short, expected at least 3 characters [readability-identifier-length]
  194 | inline static bool IRAM_ATTR esp_stack_ptr_in_dram(uint32_t sp)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:197:12: warning: boolean expression can be simplified by DeMorgan's theorem [readability-simplify-boolean-expr]
  197 |     return !(sp < SOC_DRAM_LOW + 0x10 || sp > SOC_DRAM_HIGH - 0x10 || ((sp & 0xF) != 0));
      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                 >=                    &&    <=                     &&             ==
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:208:1: warning: 'esp_stack_ptr_is_sane' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  208 | inline static bool IRAM_ATTR esp_stack_ptr_is_sane(uint32_t sp)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:208:61: warning: parameter name 'sp' is too short, expected at least 3 characters [readability-identifier-length]
  208 | inline static bool IRAM_ATTR esp_stack_ptr_is_sane(uint32_t sp)
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:210:12: warning: 'esp_stack_ptr_in_dram' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  210 |     return esp_stack_ptr_in_dram(sp)
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:194:30: note: resolves to this declaration
  194 | inline static bool IRAM_ATTR esp_stack_ptr_in_dram(uint32_t sp)
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:215:12: warning: 'esp_ptr_in_rtc_dram_fast' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  215 |         || esp_ptr_in_rtc_dram_fast((void*) sp)
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:160:30: note: resolves to this declaration
  160 | inline static bool IRAM_ATTR esp_ptr_in_rtc_dram_fast(const void *p) {
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:215:37: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  215 |         || esp_ptr_in_rtc_dram_fast((void*) sp)
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\soc\include\soc/soc_memory_types.h:215:37: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_flash.h:27:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   27 | typedef struct spi_flash_chip_t spi_flash_chip_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_chip_t = struct spi_flash_chip_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_flash.h:29:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   29 | typedef struct esp_flash_t esp_flash_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_flash_t = struct esp_flash_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_flash.h:32:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   32 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   33 |     uint32_t offset;    ///< Start address of this region
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   34 |     uint32_t size;      ///< Size of the region
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   35 | } esp_flash_region_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_flash.h:46:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   46 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   47 |     /**
      |     ~~~
   48 |      * Called before commencing any flash operation. Does not need to be
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |      * recursive (ie is called at most once for each call to 'end').
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |      */
      |      ~~
   51 |     esp_err_t (*start)(void *arg);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 | 
   53 |     /** Called after completing any flash operation. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |     esp_err_t (*end)(void *arg);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 | 
   56 |     /** Called before any erase/write operations to check whether the region is limited by the OS */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   57 |     esp_err_t (*region_protected)(void* arg, size_t start_addr, size_t size);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   58 | 
   59 |     /** Delay for at least 'us' microseconds. Called in between 'start' and 'end'. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   60 |     esp_err_t (*delay_us)(void *arg, uint32_t us);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   61 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_flash.h:60:47: warning: parameter name 'us' is too short, expected at least 3 characters [readability-identifier-length]
   60 |     esp_err_t (*delay_us)(void *arg, uint32_t us);
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_flash.h:377:1: warning: 'esp_flash_is_quad_mode' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  377 | static inline bool esp_flash_is_quad_mode(const esp_flash_t *chip)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_partition.h:16:9: warning: declaration uses identifier '__ESP_PARTITION_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define __ESP_PARTITION_H__
      |         ^~~~~~~~~~~~~~~~~~~
      |         ESP_PARTITION_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_partition.h:45:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   45 | typedef enum {
      | ^~~~~~~~~~~~~~
   46 |     ESP_PARTITION_TYPE_APP = 0x00,       //!< Application partition type
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   47 |     ESP_PARTITION_TYPE_DATA = 0x01,      //!< Data partition type
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 | 
   49 |     ESP_PARTITION_TYPE_ANY = 0xff,       //!< Used to search for partitions with any type
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 | } esp_partition_type_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_partition.h:45:9: warning: enum 'esp_partition_type_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   45 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_partition.h:62:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   62 | typedef enum {
      | ^~~~~~~~~~~~~~
   63 |     ESP_PARTITION_SUBTYPE_APP_FACTORY = 0x00,                                 //!< Factory application partition
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |     ESP_PARTITION_SUBTYPE_APP_OTA_MIN = 0x10,                                 //!< Base for OTA partition subtypes
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   65 |     ESP_PARTITION_SUBTYPE_APP_OTA_0 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 0,  //!< OTA partition 0
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   66 |     ESP_PARTITION_SUBTYPE_APP_OTA_1 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 1,  //!< OTA partition 1
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   67 |     ESP_PARTITION_SUBTYPE_APP_OTA_2 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 2,  //!< OTA partition 2
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   68 |     ESP_PARTITION_SUBTYPE_APP_OTA_3 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 3,  //!< OTA partition 3
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   69 |     ESP_PARTITION_SUBTYPE_APP_OTA_4 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 4,  //!< OTA partition 4
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   70 |     ESP_PARTITION_SUBTYPE_APP_OTA_5 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 5,  //!< OTA partition 5
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |     ESP_PARTITION_SUBTYPE_APP_OTA_6 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 6,  //!< OTA partition 6
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     ESP_PARTITION_SUBTYPE_APP_OTA_7 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 7,  //!< OTA partition 7
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     ESP_PARTITION_SUBTYPE_APP_OTA_8 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 8,  //!< OTA partition 8
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   74 |     ESP_PARTITION_SUBTYPE_APP_OTA_9 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 9,  //!< OTA partition 9
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |     ESP_PARTITION_SUBTYPE_APP_OTA_10 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 10,//!< OTA partition 10
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |     ESP_PARTITION_SUBTYPE_APP_OTA_11 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 11,//!< OTA partition 11
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |     ESP_PARTITION_SUBTYPE_APP_OTA_12 = ESP_PARTITION_SUBTYPE_APP_OTA_MIN + 12,//!< OTA partition 12
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_partition.h:62:9: warning: enum 'esp_partition_subtype_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   62 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_partition.h:107:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  107 | typedef struct esp_partition_iterator_opaque_* esp_partition_iterator_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using esp_partition_iterator_t = struct esp_partition_iterator_opaque_*
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_partition.h:116:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  116 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  117 |     esp_flash_t* flash_chip;            /*!< SPI flash chip on which the partition resides */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  118 |     esp_partition_type_t type;          /*!< partition type (app/data) */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  119 |     esp_partition_subtype_t subtype;    /*!< partition subtype */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  120 |     uint32_t address;                   /*!< starting address of the partition in flash */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  121 |     uint32_t size;                      /*!< size of the partition, in bytes */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  122 |     char label[17];                     /*!< partition label, zero-terminated ASCII string */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  123 |     bool encrypted;                     /*!< flag is set to true if partition is encrypted */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  124 | } esp_partition_t;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:36:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   36 | typedef enum {
      | ^~~~~~~~~~~~~~
   37 |     FLASH_WRAP_MODE_8B = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~~
   38 |     FLASH_WRAP_MODE_16B = 2,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   39 |     FLASH_WRAP_MODE_32B = 4,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   40 |     FLASH_WRAP_MODE_64B = 6,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   41 |     FLASH_WRAP_MODE_DISABLE = 1
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   42 | } spi_flash_wrap_mode_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:36:9: warning: enum 'spi_flash_wrap_mode_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   36 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:179:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  179 | typedef enum {
      | ^~~~~~~~~~~~~~
  180 |     SPI_FLASH_MMAP_DATA,    /**< map to data memory (Vaddr0), allows byte-aligned access, 4 MB total */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  181 |     SPI_FLASH_MMAP_INST,    /**< map to instruction memory (Vaddr1-3), allows only 4-byte-aligned access, 11 MB total */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  182 | } spi_flash_mmap_memory_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:179:9: warning: enum 'spi_flash_mmap_memory_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  179 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:187:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  187 | typedef uint32_t spi_flash_mmap_handle_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_mmap_handle_t = uint32_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:342:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  342 | typedef void (*spi_flash_guard_start_func_t)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_guard_start_func_t = void (*)(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:342:46: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
  342 | typedef void (*spi_flash_guard_start_func_t)(void);
      |                                              ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:346:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  346 | typedef void (*spi_flash_guard_end_func_t)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_guard_end_func_t = void (*)(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:346:44: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
  346 | typedef void (*spi_flash_guard_end_func_t)(void);
      |                                            ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:350:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  350 | typedef void (*spi_flash_op_lock_func_t)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_op_lock_func_t = void (*)(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:350:42: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
  350 | typedef void (*spi_flash_op_lock_func_t)(void);
      |                                          ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:354:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  354 | typedef void (*spi_flash_op_unlock_func_t)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_op_unlock_func_t = void (*)(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:354:44: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
  354 | typedef void (*spi_flash_op_unlock_func_t)(void);
      |                                            ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:358:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  358 | typedef bool (*spi_flash_is_safe_write_address_t)(size_t addr, size_t size);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_is_safe_write_address_t = bool (*)(size_t addr, size_t size)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:362:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  362 | typedef void (*spi_flash_os_yield_t)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using spi_flash_os_yield_t = void (*)(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:362:38: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
  362 | typedef void (*spi_flash_os_yield_t)(void);
      |                                      ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\spi_flash\include\esp_spi_flash.h:395:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  395 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  396 |     spi_flash_guard_start_func_t        start;      /**< critical section start function. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  397 |     spi_flash_guard_end_func_t          end;        /**< critical section end function. */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  398 |     spi_flash_op_lock_func_t            op_lock;    /**< flash access API lock function.*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  399 |     spi_flash_op_unlock_func_t          op_unlock;  /**< flash access API unlock function.*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 | #if !CONFIG_SPI_FLASH_DANGEROUS_WRITE_ALLOWED
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |     spi_flash_is_safe_write_address_t   is_safe_write_address; /**< checks flash write addresses.*/
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 | #endif
      | ~~~~~~
  403 |     spi_flash_os_yield_t                yield;      /**< yield to the OS during flash erase */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  404 | } spi_flash_guard_funcs_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter.h:20:9: warning: declaration uses identifier '_TCPIP_ADAPTER_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   20 | #define _TCPIP_ADAPTER_H_
      |         ^~~~~~~~~~~~~~~~~
      |         TCPIP_ADAPTER_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter.h:22:10: warning: circular header file dependency detected while including 'esp_netif.h', please check the include path [misc-header-include-cycle]
   22 | #include "esp_netif.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_netif\include\esp_netif.h:35:10: note: 'tcpip_adapter.h' included from here
   35 | #include "tcpip_adapter.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_event\include\esp_event_legacy.h:22:10: note: 'esp_netif.h' included from here
   22 | #include "esp_netif.h"
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter.h:117:69: warning: parameter name 'eb' is too short, expected at least 3 characters [readability-identifier-length]
  117 | esp_err_t tcpip_adapter_eth_input(void *buffer, uint16_t len, void *eb);
      |                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter.h:122:69: warning: parameter name 'eb' is too short, expected at least 3 characters [readability-identifier-length]
  122 | esp_err_t tcpip_adapter_sta_input(void *buffer, uint16_t len, void *eb);
      |                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter.h:127:68: warning: parameter name 'eb' is too short, expected at least 3 characters [readability-identifier-length]
  127 | esp_err_t tcpip_adapter_ap_input(void *buffer, uint16_t len, void *eb);
      |                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:16:9: warning: declaration uses identifier '_TCPIP_ADAPTER_TYPES_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   16 | #define _TCPIP_ADAPTER_TYPES_H_
      |         ^~~~~~~~~~~~~~~~~~~~~~~
      |         TCPIP_ADAPTER_TYPES_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:51:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   51 | typedef enum {
      | ^~~~~~~~~~~~~~
   52 |     TCPIP_ADAPTER_IF_STA = 0,     /**< Wi-Fi STA (station) interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |     TCPIP_ADAPTER_IF_AP,          /**< Wi-Fi soft-AP interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |     TCPIP_ADAPTER_IF_ETH,         /**< Ethernet interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   55 |     TCPIP_ADAPTER_IF_TEST,        /**< tcpip stack test interface */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   56 |     TCPIP_ADAPTER_IF_MAX
      |     ~~~~~~~~~~~~~~~~~~~~
   57 | } tcpip_adapter_if_t;
      | ~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:51:9: warning: enum 'tcpip_adapter_if_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   51 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:61:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   61 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   62 |     ip4_addr_t ip;      /**< Interface IPV4 address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |     ip4_addr_t netmask; /**< Interface IPV4 netmask */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |     ip4_addr_t gw;      /**< Interface IPV4 gateway address */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   65 | } tcpip_adapter_ip_info_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   69 | typedef esp_netif_dhcp_status_t tcpip_adapter_dhcp_status_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using tcpip_adapter_dhcp_status_t = esp_netif_dhcp_status_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:70:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   70 | typedef dhcps_lease_t tcpip_adapter_dhcps_lease_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using tcpip_adapter_dhcps_lease_t = dhcps_lease_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:71:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   71 | typedef esp_netif_dhcp_option_mode_t tcpip_adapter_dhcp_option_mode_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using tcpip_adapter_dhcp_option_mode_t = esp_netif_dhcp_option_mode_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:72:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   72 | typedef esp_netif_dhcp_option_id_t tcpip_adapter_dhcp_option_id_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using tcpip_adapter_dhcp_option_id_t = esp_netif_dhcp_option_id_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:73:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   73 | typedef esp_netif_dns_type_t tcpip_adapter_dns_type_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using tcpip_adapter_dns_type_t = esp_netif_dns_type_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:74:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   74 | typedef esp_netif_dns_info_t tcpip_adapter_dns_info_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using tcpip_adapter_dns_info_t = esp_netif_dns_info_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:75:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   75 | typedef esp_netif_sta_list_t tcpip_adapter_sta_list_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using tcpip_adapter_sta_list_t = esp_netif_sta_list_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\tcpip_adapter\include\tcpip_adapter_types.h:76:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   76 | typedef esp_netif_sta_info_t tcpip_adapter_sta_info_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using tcpip_adapter_sta_info_t = esp_netif_sta_info_t
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:35:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   35 | typedef enum {
      | ^~~~~~~~~~~~~~
   36 |     /**
      |     ~~~
   37 |      * Emitted when the manager is initialized
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   38 |      */
      |      ~~
   39 |     WIFI_PROV_INIT,
      |     ~~~~~~~~~~~~~~~
   40 | 
   41 |     /**
      |     ~~~
   42 |      * Indicates that provisioning has started
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |      */
      |      ~~
   44 |     WIFI_PROV_START,
      |     ~~~~~~~~~~~~~~~~
   45 | 
   46 |     /**
      |     ~~~
   47 |      * Emitted when Wi-Fi AP credentials are received via `protocomm`
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   48 |      * endpoint `wifi_config`. The event data in this case is a pointer
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |      * to the corresponding `wifi_sta_config_t` structure
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   50 |      */
      |      ~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:35:9: warning: enum 'wifi_prov_cb_event_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   35 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:78:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   78 | typedef void (*wifi_prov_cb_func_t)(void *user_data, wifi_prov_cb_event_t event, void *event_data);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using wifi_prov_cb_func_t = void (*)(void *user_data, wifi_prov_cb_event_t event, void *event_data)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:84:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   84 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   85 |     /**
      |     ~~~
   86 |      * Callback function to be executed on provisioning events
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   87 |      */
      |      ~~
   88 |     wifi_prov_cb_func_t event_cb;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 | 
   90 |     /**
      |     ~~~
   91 |      * User context data to pass as parameter to callback function
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   92 |      */
      |      ~~
   93 |     void *user_data;
      |     ~~~~~~~~~~~~~~~~
   94 | } wifi_prov_event_handler_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:113:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  113 | typedef struct wifi_prov_scheme {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  114 |     /**
      |     ~~~
  115 |      * Function which is to be called by the manager when it is to
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  116 |      * start the provisioning service associated with a protocomm instance
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  117 |      * and a scheme specific configuration
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  118 |      */
      |      ~~
  119 |     esp_err_t (*prov_start) (protocomm_t *pc, void *config);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  120 | 
  121 |     /**
      |     ~~~
  122 |      * Function which is to be called by the manager to stop the
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  123 |      * provisioning service previously associated with a protocomm instance
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  124 |      */
      |      ~~
  125 |     esp_err_t (*prov_stop) (protocomm_t *pc);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  126 | 
  127 |     /**
      |     ~~~
  128 |      * Function which is to be called by the manager to generate
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:119:43: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  119 |     esp_err_t (*prov_start) (protocomm_t *pc, void *config);
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:125:42: warning: parameter name 'pc' is too short, expected at least 3 characters [readability-identifier-length]
  125 |     esp_err_t (*prov_stop) (protocomm_t *pc);
      |                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:132:26: warning: redundant void argument list in field declaration [modernize-redundant-void-arg]
  132 |     void *(*new_config) (void);
      |                          ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:164:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  164 | typedef struct {
      | ^~~~~~~~~~~~~~~~
  165 |     /**
      |     ~~~
  166 |      * Provisioning scheme to use. Following schemes are already available:
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  167 |      *     - wifi_prov_scheme_ble     : for provisioning over BLE transport + GATT server
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  168 |      *     - wifi_prov_scheme_softap  : for provisioning over SoftAP transport + HTTP server + mDNS (optional)
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  169 |      *     - wifi_prov_scheme_console : for provisioning over Serial UART transport + Console (for debugging)
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  170 |      */
      |      ~~
  171 |     wifi_prov_scheme_t scheme;
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
  172 | 
  173 |     /**
      |     ~~~
  174 |      * Event handler required by the scheme for incorporating scheme specific
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  175 |      * behavior while provisioning manager is running. Various options may be
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  176 |      * provided by the scheme for setting this field. Use WIFI_PROV_EVENT_HANDLER_NONE
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  177 |      * when not used. When using scheme wifi_prov_scheme_ble, the following
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  178 |      * options are available:
      |      ~~~~~~~~~~~~~~~~~~~~~~~~
  179 |      *     - WIFI_PROV_SCHEME_BLE_EVENT_HANDLER_FREE_BTDM
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:197:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  197 | typedef enum wifi_prov_security {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  198 |     /**
      |     ~~~
  199 |      * No security (plain-text communication)
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  200 |      */
      |      ~~
  201 |     WIFI_PROV_SECURITY_0 = 0,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
  202 | 
  203 |     /**
      |     ~~~
  204 |      * This secure communication mode consists of
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  205 |      *   X25519 key exchange
      |      ~~~~~~~~~~~~~~~~~~~~~~~
  206 |      * + proof of possession (pop) based authentication
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  207 |      * + AES-CTR encryption
      |      ~~~~~~~~~~~~~~~~~~~~~~
  208 |      */
      |      ~~
  209 |     WIFI_PROV_SECURITY_1
      |     ~~~~~~~~~~~~~~~~~~~~
  210 | } wifi_prov_security_t;
      | ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/manager.h:197:14: warning: enum 'wifi_prov_security' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
  197 | typedef enum wifi_prov_security {
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:8:9: warning: declaration uses identifier '_WIFI_PROV_CONFIG_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
    8 | #define _WIFI_PROV_CONFIG_H_
      |         ^~~~~~~~~~~~~~~~~~~~
      |         WIFI_PROV_CONFIG_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:19:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   19 | typedef enum {
      | ^~~~~~~~~~~~~~
   20 |     WIFI_PROV_STA_CONNECTING,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   21 |     WIFI_PROV_STA_CONNECTED,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~
   22 |     WIFI_PROV_STA_DISCONNECTED
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   23 | } wifi_prov_sta_state_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:19:9: warning: enum 'wifi_prov_sta_state_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   19 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:28:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   28 | typedef enum {
      | ^~~~~~~~~~~~~~
   29 |     WIFI_PROV_STA_AUTH_ERROR,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
   30 |     WIFI_PROV_STA_AP_NOT_FOUND
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~
   31 | } wifi_prov_sta_fail_reason_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:28:9: warning: enum 'wifi_prov_sta_fail_reason_t' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
   28 | typedef enum {
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:36:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   36 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   37 |     /**
      |     ~~~
   38 |      * IP Address received by station
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   39 |      */
      |      ~~
   40 |     char    ip_addr[IP4ADDR_STRLEN_MAX];
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   41 | 
   42 |     char    bssid[6];   /*!< BSSID of the AP to which connection was estalished */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   43 |     char    ssid[33];   /*!< SSID of the to which connection was estalished */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   44 |     uint8_t channel;    /*!< Channel of the AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   45 |     uint8_t auth_mode;  /*!< Authorization mode of the AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   46 | } wifi_prov_sta_conn_info_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:51:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   51 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   52 |     wifi_prov_sta_state_t wifi_state;    /*!< WiFi state of the station */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |     union {
      |     ~~~~~~~
   54 |         /**
      |         ~~~
   55 |          * Reason for disconnection (valid only when `wifi_state` is `WIFI_STATION_DISCONNECTED`)
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   56 |          */
      |          ~~
   57 |         wifi_prov_sta_fail_reason_t fail_reason;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   58 | 
   59 |         /**
      |         ~~~
   60 |          * Connection information (valid only when `wifi_state` is `WIFI_STATION_CONNECTED`)
      |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   61 |          */
      |          ~~
   62 |         wifi_prov_sta_conn_info_t   conn_info;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |     };
      |     ~~
   64 | } wifi_prov_config_get_data_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:69:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   69 | typedef struct {
      | ^~~~~~~~~~~~~~~~
   70 |     char    ssid[33];       /*!< SSID of the AP to which the slave is to be connected */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |     char    password[64];   /*!< Password of the AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   72 |     char    bssid[6];       /*!< BSSID of the AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   73 |     uint8_t channel;        /*!< Channel of the AP */
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   74 | } wifi_prov_config_set_data_t;
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:83:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   83 | typedef struct wifi_prov_ctx wifi_prov_ctx_t;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using wifi_prov_ctx_t = struct wifi_prov_ctx
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\wifi_provisioning\include\wifi_provisioning/wifi_config.h:92:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   92 | typedef struct wifi_prov_config_handlers {
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   93 |     /**
      |     ~~~
   94 |      * Handler function called when connection status
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   95 |      * of the slave (in WiFi station mode) is requested
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   96 |      */
      |      ~~
   97 |     esp_err_t (*get_status_handler)(wifi_prov_config_get_data_t *resp_data,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   98 |                                     wifi_prov_ctx_t **ctx);
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~
   99 | 
  100 |     /**
      |     ~~~
  101 |      * Handler function called when WiFi connection configuration
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  102 |      * (eg. AP SSID, password, etc.) of the slave (in WiFi station mode)
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  103 |      * is to be set to user provided values
      |      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  104 |      */
      |      ~~
  105 |     esp_err_t (*set_config_handler)(const wifi_prov_config_set_data_t *req_data,
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  106 |                                     wifi_prov_ctx_t **ctx);
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~
  107 | 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:44:10: error: '../hal.h' file not found [clang-diagnostic-error]
   44 | #include "../hal.h"
      |          ^~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:155:9: warning: declaration uses identifier '_XCHAL_INTLEVEL_MASK', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  155 | #define _XCHAL_INTLEVEL_MASK(n)     XCHAL_INTLEVEL ## n ## _MASK
      |         ^~~~~~~~~~~~~~~~~~~~
      |         XCHAL_INTLEVEL_MASK
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:157:9: warning: declaration uses identifier '_XCHAL_INTLEVEL_ANDBELOWMASK', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  157 | #define _XCHAL_INTLEVEL_ANDBELOWMASK(n) XCHAL_INTLEVEL ## n ## _ANDBELOW_MASK
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XCHAL_INTLEVEL_ANDBELOWMASK
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:159:9: warning: declaration uses identifier '_XCHAL_INTLEVEL_NUM', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  159 | #define _XCHAL_INTLEVEL_NUM(n)      XCHAL_INTLEVEL ## n ## _NUM
      |         ^~~~~~~~~~~~~~~~~~~
      |         XCHAL_INTLEVEL_NUM
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:161:9: warning: declaration uses identifier '_XCHAL_INT_LEVEL', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  161 | #define _XCHAL_INT_LEVEL(n)     XCHAL_INT ## n ## _LEVEL
      |         ^~~~~~~~~~~~~~~~
      |         XCHAL_INT_LEVEL
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:163:9: warning: declaration uses identifier '_XCHAL_INT_TYPE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  163 | #define _XCHAL_INT_TYPE(n)      XCHAL_INT ## n ## _TYPE
      |         ^~~~~~~~~~~~~~~
      |         XCHAL_INT_TYPE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:165:9: warning: declaration uses identifier '_XCHAL_TIMER_INTERRUPT', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  165 | #define _XCHAL_TIMER_INTERRUPT(n)   XCHAL_TIMER ## n ## _INTERRUPT
      |         ^~~~~~~~~~~~~~~~~~~~~~
      |         XCHAL_TIMER_INTERRUPT
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:238:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  238 | #if 0 /*XCHAL_HAVE_NMI*/
      |  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:563:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  563 | #if 0
      |  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:572:9: warning: declaration uses identifier '_XCHAL_INTLEVEL_VECTOR_VADDR', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  572 | #define _XCHAL_INTLEVEL_VECTOR_VADDR(n)     XCHAL_INTLEVEL ## n ## _VECTOR_VADDR
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XCHAL_INTLEVEL_VECTOR_VADDR
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:849:9: warning: declaration uses identifier '_MEMCTL_SNOOP_EN', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  849 | #define _MEMCTL_SNOOP_EN        0x00        /* Don't enable snoop */
      |         ^~~~~~~~~~~~~~~~
      |         MEMCTL_SNOOP_EN
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:855:9: warning: declaration uses identifier '_MEMCTL_L0IBUF_EN', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  855 | #define _MEMCTL_L0IBUF_EN       0x01        /* Enable loop buffer */
      |         ^~~~~~~~~~~~~~~~~
      |         MEMCTL_L0IBUF_EN
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:880:9: warning: declaration uses identifier '_XCHAL_ITLB_SET', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  880 | #define _XCHAL_ITLB_SET(n,_what)    XCHAL_ITLB_SET ## n ## _what
      |         ^~~~~~~~~~~~~~~
      |         XCHAL_ITLB_SET
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:882:9: warning: declaration uses identifier '_XCHAL_ITLB_SET_E', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  882 | #define _XCHAL_ITLB_SET_E(n,i,_what)    XCHAL_ITLB_SET ## n ## _E ## i ## _what
      |         ^~~~~~~~~~~~~~~~~
      |         XCHAL_ITLB_SET_E
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:884:9: warning: declaration uses identifier '_XCHAL_DTLB_SET', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  884 | #define _XCHAL_DTLB_SET(n,_what)    XCHAL_DTLB_SET ## n ## _what
      |         ^~~~~~~~~~~~~~~
      |         XCHAL_DTLB_SET
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:886:9: warning: declaration uses identifier '_XCHAL_DTLB_SET_E', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  886 | #define _XCHAL_DTLB_SET_E(n,i,_what)    XCHAL_DTLB_SET ## n ## _E ## i ## _what
      |         ^~~~~~~~~~~~~~~~~
      |         XCHAL_DTLB_SET_E
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:901:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  901 | #if 0
      |  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:1316:9: warning: declaration uses identifier '_XCHAL_CP_SA_SIZE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1316 | #define _XCHAL_CP_SA_SIZE(n)        XCHAL_CP ## n ## _SA_SIZE
      |         ^~~~~~~~~~~~~~~~~
      |         XCHAL_CP_SA_SIZE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config/core.h:1318:9: warning: declaration uses identifier '_XCHAL_CP_SA_ALIGN', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1318 | #define _XCHAL_CP_SA_ALIGN(n)       XCHAL_CP ## n ## _SA_ALIGN
      |         ^~~~~~~~~~~~~~~~~~
      |         XCHAL_CP_SA_ALIGN
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config\core-isa.h:32:9: warning: declaration uses identifier '_XTENSA_CORE_CONFIGURATION_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   32 | #define _XTENSA_CORE_CONFIGURATION_H
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTENSA_CORE_CONFIGURATION_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\esp32s3\include\xtensa/config\tie.h:33:9: warning: declaration uses identifier '_XTENSA_CORE_TIE_H', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   33 | #define _XTENSA_CORE_TIE_H
      |         ^~~~~~~~~~~~~~~~~~
      |         XTENSA_CORE_TIE_H
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:85:33: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   85 |         uint32_t sp = (uint32_t)new_sp - SAVE_AREA_OFFSET; \
      |                                 ^
      |                                 (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xt_instr_macros.h:86:60: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   86 |         *(uint32_t*)(sp - BASE_AREA_SP_OFFSET) = (uint32_t)new_sp; \
      |                                                            ^     
      |                                                            (     )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:120:22: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  120 | #define XTHAL_MAYBE             -1      /* 0=NO, 1=YES, -1=MAYBE */
      |                                 ^
      |                                 ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:314:32: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  314 | #define XTHAL_PREFETCH_ENABLE           -1      /* enable inst+data prefetch */
      |                                         ^
      |                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:330:9: warning: declaration uses identifier '_XTHAL_PREFETCH_BLOCKS', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
  330 | #define _XTHAL_PREFETCH_BLOCKS(n)       ((n)<0?0:(n)<5?(n):(n)<15?((n)>>1)+2:9)
      |         ^~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_PREFETCH_BLOCKS
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:481:34: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  481 | #define XTHAL_TIMER_UNCONFIGURED        -1      /* Xthal_timer_interrupt[] value for non-existent timers */
      |                                         ^
      |                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:516:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  516 | #if 0
      |  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:541:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  541 | #if 0
      |  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:615:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  615 | #if 0
      |  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:779:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
  779 | typedef void (XtHalVoidFunc)(void);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using XtHalVoidFunc = void ()(void)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:779:30: warning: redundant void argument list in typedef [modernize-redundant-void-arg]
  779 | typedef void (XtHalVoidFunc)(void);
      |                              ^
note: this fix will not be applied because it overlaps with another fix
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:947:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  947 | #define XTHAL_NO_REGIONS_COVERED                        -1
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:949:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  949 | #define XTHAL_INEXACT                                   -2
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:951:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  951 | #define XTHAL_INVALID_ADDRESS                           -3
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:953:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  953 | #define XTHAL_UNSUPPORTED                               -4
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:955:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  955 | #define XTHAL_ADDRESS_MISALIGNED                        -5
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:957:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  957 | #define XTHAL_NO_MAPPING                                -6
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:959:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  959 | #define XTHAL_BAD_ACCESS_RIGHTS                         -7
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:961:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  961 | #define XTHAL_BAD_MEMORY_TYPE                           -8
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:963:57: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  963 | #define XTHAL_MAP_NOT_ALIGNED                           -9
      |                                                         ^ 
      |                                                         ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:965:56: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  965 | #define XTHAL_OUT_OF_ENTRIES                           -10
      |                                                        ^  
      |                                                        (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:967:56: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  967 | #define XTHAL_OUT_OF_ORDER_MAP                         -11
      |                                                        ^  
      |                                                        (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:969:56: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  969 | #define XTHAL_INVALID                                  -12
      |                                                        ^  
      |                                                        (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:971:56: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  971 | #define XTHAL_ZERO_SIZED_REGION                        -13
      |                                                        ^  
      |                                                        (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:973:56: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  973 | #define XTHAL_INVALID_ADDRESS_RANGE                    -14
      |                                                        ^  
      |                                                        (  )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1149:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
 1149 | typedef struct xthal_MPU_entry
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1150 | {
      | ~
 1151 |         uint32_t as;    /* virtual start address, and valid bit */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1152 |         uint32_t at;    /* access rights, and memory type (and space for entry index) */
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1153 | } xthal_MPU_entry;
      | ~~~~~~~~~~~~~~~~~
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1173:35: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
 1173 |     { (((vaddr) & 0xffffffe0) | ((valid & 0x1))), \
      |                                   ^
      |                                   (    )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1182:22: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
 1181 | #define XTHAL_MPU_ENTRY_SET_VSTARTADDR(x, vaddr) (x).as = \
      |                                                  (
 1182 |     (((x).as) & 0x1) | ((vaddr) & 0xffffffe0)
      |                      ^                       
      |                                              )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1223:46: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
 1223 | extern int xthal_encode_memory_type(uint32_t x);
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1310:54: warning: parameter name 'e' is too short, expected at least 3 characters [readability-identifier-length]
 1310 | xthal_calc_cacheadrdis(const struct xthal_MPU_entry* e, uint32_t n);
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1384:9: warning: declaration uses identifier '_XTHAL_SYSTEM_CACHE_BITS', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1384 | #define _XTHAL_SYSTEM_CACHE_BITS 0x000f0000
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_SYSTEM_CACHE_BITS
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1385:9: warning: declaration uses identifier '_XTHAL_LOCAL_CACHE_BITS', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1385 | #define _XTHAL_LOCAL_CACHE_BITS 0x00f00000
      |         ^~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_LOCAL_CACHE_BITS
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1386:9: warning: declaration uses identifier '_XTHAL_MEM_SYSTEM_RWC_MASK', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1386 | #define _XTHAL_MEM_SYSTEM_RWC_MASK 0x00070000
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_MEM_SYSTEM_RWC_MASK
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1387:9: warning: declaration uses identifier '_XTHAL_MEM_LOCAL_RWC_MASK', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1387 | #define _XTHAL_MEM_LOCAL_RWC_MASK  0x00700000
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_MEM_LOCAL_RWC_MASK
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1388:9: warning: declaration uses identifier '_XTHAL_SHIFT_RWC', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1388 | #define _XTHAL_SHIFT_RWC 16
      |         ^~~~~~~~~~~~~~~~
      |         XTHAL_SHIFT_RWC
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1390:9: warning: declaration uses identifier '_XTHAL_MEM_ANY_SHAREABLE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1390 | #define _XTHAL_MEM_ANY_SHAREABLE(x) (((x) & XTHAL_MEM_SYSTEM_SHAREABLE) ? 1 : 0)
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_MEM_ANY_SHAREABLE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1392:9: warning: declaration uses identifier '_XTHAL_MEM_INNER_SHAREABLE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1392 | #define _XTHAL_MEM_INNER_SHAREABLE(x) ((((x) & XTHAL_MEM_SYSTEM_SHAREABLE) \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_MEM_INNER_SHAREABLE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1395:9: warning: declaration uses identifier '_XTHAL_MEM_IS_BUFFERABLE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1395 | #define _XTHAL_MEM_IS_BUFFERABLE(x) (((x) & XTHAL_MEM_BUFFERABLE) ? 1 : 0)
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_MEM_IS_BUFFERABLE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1397:9: warning: declaration uses identifier '_XTHAL_MEM_IS_DEVICE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1397 | #define _XTHAL_MEM_IS_DEVICE(x) (((x) & XTHAL_MEM_DEVICE) ? 1 : 0)
      |         ^~~~~~~~~~~~~~~~~~~~
      |         XTHAL_MEM_IS_DEVICE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1399:9: warning: declaration uses identifier '_XTHAL_NON_CACHEABLE_DOMAIN', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1399 | #define _XTHAL_NON_CACHEABLE_DOMAIN(x) \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_NON_CACHEABLE_DOMAIN
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1402:9: warning: declaration uses identifier '_XTHAL_CACHEABLE_DOMAIN', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1402 | #define _XTHAL_CACHEABLE_DOMAIN(x)  (_XTHAL_MEM_ANY_SHAREABLE(x) ? \
      |         ^~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_CACHEABLE_DOMAIN
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1405:9: warning: declaration uses identifier '_XTHAL_MEM_CACHE_MASK', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1405 | #define _XTHAL_MEM_CACHE_MASK(x) ((x) & _XTHAL_SYSTEM_CACHE_BITS)
      |         ^~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_MEM_CACHE_MASK
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1407:9: warning: declaration uses identifier '_XTHAL_IS_SYSTEM_NONCACHEABLE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1407 | #define _XTHAL_IS_SYSTEM_NONCACHEABLE(x) \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_IS_SYSTEM_NONCACHEABLE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1411:9: warning: declaration uses identifier '_XTHAL_ENCODE_DEVICE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1411 | #define _XTHAL_ENCODE_DEVICE(x) \
      |         ^~~~~~~~~~~~~~~~~~~~
      |         XTHAL_ENCODE_DEVICE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1415:9: warning: declaration uses identifier '_XTHAL_ENCODE_SYSTEM_NONCACHEABLE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1415 | #define _XTHAL_ENCODE_SYSTEM_NONCACHEABLE(x) \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_ENCODE_SYSTEM_NONCACHEABLE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1419:9: warning: declaration uses identifier '_XTHAL_ENCODE_SYSTEM_CACHEABLE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1419 | #define _XTHAL_ENCODE_SYSTEM_CACHEABLE(x) \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_ENCODE_SYSTEM_CACHEABLE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1423:61: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
 1420 |         (((((((x) & _XTHAL_LOCAL_CACHE_BITS) >> 4) & XTHAL_MEM_NON_CACHEABLE) == \
      |         (
 1421 |                 XTHAL_MEM_NON_CACHEABLE) ? 1 : 0) ? \
 1422 |          (_XTHAL_CACHEABLE_DOMAIN(x) << 4) : \
 1423 |          _XTHAL_ENCODE_SYSTEM_CACHEABLE_LOCAL_CACHEABLE(x)) | \
      |                                                             ^
 1424 |          ((_XTHAL_MEM_INNER_SHAREABLE(x) << 3) | \
 1425 |                   (_XTHAL_MEM_CACHE_MASK(x) & _XTHAL_MEM_SYSTEM_RWC_MASK) \
 1426 |                   >> _XTHAL_SHIFT_RWC)
      |                                       
      |                                       )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:1428:9: warning: declaration uses identifier '_XTHAL_ENCODE_SYSTEM_CACHEABLE_LOCAL_CACHEABLE', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
 1428 | #define _XTHAL_ENCODE_SYSTEM_CACHEABLE_LOCAL_CACHEABLE(x) \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         XTHAL_ENCODE_SYSTEM_CACHEABLE_LOCAL_CACHEABLE
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:29:9: warning: declaration uses identifier '__XTENSA_API_H__', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   29 | #define __XTENSA_API_H__
      |         ^~~~~~~~~~~~~~~~
      |         XTENSA_API_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:37:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   37 | typedef void (*xt_handler)(void *);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using xt_handler = void (*)(void *)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:40:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   40 | typedef void (*xt_exc_handler)(XtExcFrame *);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using xt_exc_handler = void (*)(XtExcFrame *)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:60:70: warning: parameter name 'f' is too short, expected at least 3 characters [readability-identifier-length]
   60 | extern xt_exc_handler xt_set_exception_handler(int n, xt_exc_handler f);
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:73:62: warning: parameter name 'f' is too short, expected at least 3 characters [readability-identifier-length]
   73 | extern xt_handler xt_set_interrupt_handler(int n, xt_handler f, void * arg);
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:103:1: warning: 'xt_set_intset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  103 | static inline void xt_set_intset(unsigned int arg)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:105:5: warning: 'xthal_set_intset' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  105 |     xthal_set_intset(arg);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:704:18: note: resolves to this declaration
  704 | extern void      xthal_set_intset( unsigned );
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:115:1: warning: 'xt_set_intclear' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  115 | static inline void xt_set_intclear(unsigned int arg)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_api.h:117:5: warning: 'xthal_set_intclear' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  117 |     xthal_set_intclear(arg);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/hal.h:705:18: note: resolves to this declaration
  705 | extern void      xthal_set_intclear( unsigned );
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtensa_context.h:79:35: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   79 | #define STRUCT_END(sname)       } sname;
      |                                   ^    
      |                                   (    )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime-core-state.h:28:9: warning: declaration uses identifier '_XTOS_CORE_STATE_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   28 | #define _XTOS_CORE_STATE_H_
      |         ^~~~~~~~~~~~~~~~~~~
      |         XTOS_CORE_STATE_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime-frames.h:28:9: warning: declaration uses identifier '_XTRUNTIME_FRAMES_H_', which is a reserved identifier [bugprone-reserved-identifier,cert-dcl37-c,cert-dcl51-cpp]
   28 | #define _XTRUNTIME_FRAMES_H_
      |         ^~~~~~~~~~~~~~~~~~~~
      |         XTRUNTIME_FRAMES_H_
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime-frames.h:44:29: warning: macro argument should be enclosed in parentheses [bugprone-macro-parentheses]
   44 | #define STRUCT_END(sname)       } sname;
      |                                   ^    
      |                                   (    )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:63:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   63 | typedef void (_xtos_handler_func)(...);
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using _xtos_handler_func = void ()(...)
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:67:1: warning: use 'using' instead of 'typedef' [modernize-use-using]
   67 | typedef _xtos_handler_func *_xtos_handler;
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | using _xtos_handler = _xtos_handler_func *
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:145:2: warning: preprocessor condition is always 'false', consider removing both the condition and its contents [readability-avoid-unconditional-preprocessor-if]
  145 | #if 0 /* XTOS_LOCK_LEVEL is not exported to applications */
      |  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:159:1: warning: '_xtos_interrupt_enable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  159 | static inline void _xtos_interrupt_enable(unsigned int intnum)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:161:5: warning: '_xtos_ints_on' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  161 |     _xtos_ints_on(1U << intnum);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:156:21: note: resolves to this declaration
  156 | extern unsigned int     _xtos_ints_on( unsigned int mask );
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:164:1: warning: '_xtos_interrupt_disable' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  164 | static inline void _xtos_interrupt_disable(unsigned int intnum)
      | ^
      | LIBC_INLINE 
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:166:5: warning: '_xtos_ints_off' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  166 |     _xtos_ints_off(1U << intnum);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:155:21: note: resolves to this declaration
  155 | extern unsigned int     _xtos_ints_off( unsigned int mask );
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:173:72: warning: parameter name 'f' is too short, expected at least 3 characters [readability-identifier-length]
  173 | extern _xtos_handler    _xtos_set_interrupt_handler( int n, _xtos_handler f );
      |                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:174:76: warning: parameter name 'f' is too short, expected at least 3 characters [readability-identifier-length]
  174 | extern _xtos_handler    _xtos_set_interrupt_handler_arg( int n, _xtos_handler f, void *arg );
      |                                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\xtensa\include\xtensa/xtruntime.h:175:72: warning: parameter name 'f' is too short, expected at least 3 characters [readability-identifier-length]
  175 | extern _xtos_handler    _xtos_set_exception_handler( int n, _xtos_handler f );
      |                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:92:55: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
   92 | #define CONFIG_ARDUINO_SERIAL_EVENT_TASK_RUNNING_CORE -1
      |                                                       ^ 
      |                                                       ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:143:9: warning: 'CONFIG_BT_ENABLED' macro redefined [clang-diagnostic-macro-redefined]
  143 | #define CONFIG_BT_ENABLED 1
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:184:9: warning: 'CONFIG_BT_BLE_ENABLED' macro redefined [clang-diagnostic-macro-redefined]
  184 | #define CONFIG_BT_BLE_ENABLED 1
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:309:9: warning: 'CONFIG_SPIRAM_SIZE' macro redefined [clang-diagnostic-macro-redefined]
  309 | #define CONFIG_SPIRAM_SIZE -1
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:309:28: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  309 | #define CONFIG_SPIRAM_SIZE -1
      |                            ^ 
      |                            ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:315:9: warning: 'CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL' macro redefined [clang-diagnostic-macro-redefined]
  315 | #define CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL 4096
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:317:9: warning: 'CONFIG_SPIRAM_MALLOC_RESERVE_INTERNAL' macro redefined [clang-diagnostic-macro-redefined]
  317 | #define CONFIG_SPIRAM_MALLOC_RESERVE_INTERNAL 0
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:400:9: warning: 'CONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM' macro redefined [clang-diagnostic-macro-redefined]
  400 | #define CONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM 8
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:403:9: warning: 'CONFIG_ESP32_WIFI_TX_BUFFER_TYPE' macro redefined [clang-diagnostic-macro-redefined]
  403 | #define CONFIG_ESP32_WIFI_TX_BUFFER_TYPE 0
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:404:9: warning: 'CONFIG_ESP32_WIFI_STATIC_TX_BUFFER_NUM' macro redefined [clang-diagnostic-macro-redefined]
  404 | #define CONFIG_ESP32_WIFI_STATIC_TX_BUFFER_NUM 8
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:644:42: warning: macro replacement list should be enclosed in parentheses [bugprone-macro-parentheses]
  644 | #define CONFIG_PTHREAD_TASK_CORE_DEFAULT -1
      |                                          ^ 
      |                                          ( )
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\qio_qspi\include\sdkconfig.h:786:9: warning: 'CONFIG_BLUEDROID_ENABLED' macro redefined [clang-diagnostic-macro-redefined]
  786 | #define CONFIG_BLUEDROID_ENABLED CONFIG_BT_BLUEDROID_ENABLED
      |         ^
note: previous definition is here
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:13:22: warning: variable name 'TX' is too short, expected at least 3 characters [readability-identifier-length]
   13 | static const uint8_t TX = 43;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:14:22: warning: variable name 'RX' is too short, expected at least 3 characters [readability-identifier-length]
   14 | static const uint8_t RX = 44;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:19:22: warning: variable name 'SS' is too short, expected at least 3 characters [readability-identifier-length]
   19 | static const uint8_t SS    = 34;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:26:22: warning: variable name 'A0' is too short, expected at least 3 characters [readability-identifier-length]
   26 | static const uint8_t A0 = 1;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:27:22: warning: variable name 'A1' is too short, expected at least 3 characters [readability-identifier-length]
   27 | static const uint8_t A1 = 2;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:28:22: warning: variable name 'A2' is too short, expected at least 3 characters [readability-identifier-length]
   28 | static const uint8_t A2 = 3;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:29:22: warning: variable name 'A3' is too short, expected at least 3 characters [readability-identifier-length]
   29 | static const uint8_t A3 = 4;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:30:22: warning: variable name 'A4' is too short, expected at least 3 characters [readability-identifier-length]
   30 | static const uint8_t A4 = 5;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:31:22: warning: variable name 'A5' is too short, expected at least 3 characters [readability-identifier-length]
   31 | static const uint8_t A5 = 6;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:32:22: warning: variable name 'A6' is too short, expected at least 3 characters [readability-identifier-length]
   32 | static const uint8_t A6 = 7;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:33:22: warning: variable name 'A7' is too short, expected at least 3 characters [readability-identifier-length]
   33 | static const uint8_t A7 = 8;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:34:22: warning: variable name 'A8' is too short, expected at least 3 characters [readability-identifier-length]
   34 | static const uint8_t A8 = 9;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:41:22: warning: variable name 'T1' is too short, expected at least 3 characters [readability-identifier-length]
   41 | static const uint8_t T1 = 1;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:42:22: warning: variable name 'T2' is too short, expected at least 3 characters [readability-identifier-length]
   42 | static const uint8_t T2 = 2;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:43:22: warning: variable name 'T3' is too short, expected at least 3 characters [readability-identifier-length]
   43 | static const uint8_t T3 = 3;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:44:22: warning: variable name 'T4' is too short, expected at least 3 characters [readability-identifier-length]
   44 | static const uint8_t T4 = 4;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:45:22: warning: variable name 'T5' is too short, expected at least 3 characters [readability-identifier-length]
   45 | static const uint8_t T5 = 5;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:46:22: warning: variable name 'T6' is too short, expected at least 3 characters [readability-identifier-length]
   46 | static const uint8_t T6 = 6;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:47:22: warning: variable name 'T7' is too short, expected at least 3 characters [readability-identifier-length]
   47 | static const uint8_t T7 = 7;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:48:22: warning: variable name 'T8' is too short, expected at least 3 characters [readability-identifier-length]
   48 | static const uint8_t T8 = 8;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\variants\um_pros3\pins_arduino.h:49:22: warning: variable name 'T9' is too short, expected at least 3 characters [readability-identifier-length]
   49 | static const uint8_t T9 = 9;
      |                      ^
src\CIEDE2000.h:10:1: warning: system include cmath not allowed, transitively included from src\CIEDE2000.h [llvmlibc-restrict-system-libc-headers]
   10 | #include <cmath>
      | ^~~~~~~~~~~~~~~~
   11 | #include <iostream>
src\CIEDE2000.h:11:1: warning: system include iostream not allowed, transitively included from src\CIEDE2000.h [llvmlibc-restrict-system-libc-headers]
   11 | #include <iostream>
      | ^~~~~~~~~~~~~~~~~~~
   12 | 
src\CIEDE2000.h:58:8: warning: invalid case style for function 'CIEDE2000' [readability-identifier-naming]
   58 | double CIEDE2000(const LAB &lab1, const LAB &lab2);
      |        ^~~~~~~~~
      |        ciedE2000
src\CIEDE2000.h:74:1: warning: 'deg2Rad' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   74 | constexpr double deg2Rad(const double deg);
      | ^
      | LIBC_INLINE 
src\CIEDE2000.h:74:26: warning: parameter 'deg' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   74 | constexpr double deg2Rad(const double deg);
      |                          ^~~~~
src\CIEDE2000.h:74:39: warning: invalid case style for constant 'deg' [readability-identifier-naming]
   74 | constexpr double deg2Rad(const double deg);
      |                                       ^~~
      |                                       DEG
src\CIEDE2000.h:86:1: warning: 'rad2Deg' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   86 | constexpr double rad2Deg(const double rad);
      | ^
      | LIBC_INLINE 
src\CIEDE2000.h:86:26: warning: parameter 'rad' is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions [readability-avoid-const-params-in-decls]
   86 | constexpr double rad2Deg(const double rad);
      |                          ^~~~~
src\CIEDE2000.h:86:39: warning: invalid case style for constant 'rad' [readability-identifier-naming]
   86 | constexpr double rad2Deg(const double rad);
      |                                       ^~~
      |                                       RAD
src\CIEDE2000.h:105:23: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  105 | void rgbToXYZ(uint8_t r, uint8_t g, uint8_t b, double &x, double &y, double &z);
      |                       ^
src\CIEDE2000.h:105:34: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
  105 | void rgbToXYZ(uint8_t r, uint8_t g, uint8_t b, double &x, double &y, double &z);
      |                                  ^
src\CIEDE2000.h:105:45: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  105 | void rgbToXYZ(uint8_t r, uint8_t g, uint8_t b, double &x, double &y, double &z);
      |                                             ^
src\CIEDE2000.h:105:56: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
  105 | void rgbToXYZ(uint8_t r, uint8_t g, uint8_t b, double &x, double &y, double &z);
      |                                                        ^
src\CIEDE2000.h:105:67: warning: parameter name 'y' is too short, expected at least 3 characters [readability-identifier-length]
  105 | void rgbToXYZ(uint8_t r, uint8_t g, uint8_t b, double &x, double &y, double &z);
      |                                                                   ^
src\CIEDE2000.h:105:78: warning: parameter name 'z' is too short, expected at least 3 characters [readability-identifier-length]
  105 | void rgbToXYZ(uint8_t r, uint8_t g, uint8_t b, double &x, double &y, double &z);
      |                                                                              ^
src\CIEDE2000.h:116:22: warning: parameter name 'x' is too short, expected at least 3 characters [readability-identifier-length]
  116 | void xyzToLAB(double x, double y, double z, CIEDE2000::LAB &lab);
      |                      ^
src\CIEDE2000.h:116:32: warning: parameter name 'y' is too short, expected at least 3 characters [readability-identifier-length]
  116 | void xyzToLAB(double x, double y, double z, CIEDE2000::LAB &lab);
      |                                ^
src\CIEDE2000.h:116:42: warning: parameter name 'z' is too short, expected at least 3 characters [readability-identifier-length]
  116 | void xyzToLAB(double x, double y, double z, CIEDE2000::LAB &lab);
      |                                          ^
src\CIEDE2000.h:127:23: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  127 | void rgbToLAB(uint8_t r, uint8_t g, uint8_t b, CIEDE2000::LAB &lab);
      |                       ^
src\CIEDE2000.h:127:34: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
  127 | void rgbToLAB(uint8_t r, uint8_t g, uint8_t b, CIEDE2000::LAB &lab);
      |                                  ^
src\CIEDE2000.h:127:45: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  127 | void rgbToLAB(uint8_t r, uint8_t g, uint8_t b, CIEDE2000::LAB &lab);
      |                                             ^
src\CIEDE2000.h:145:40: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  145 | std::ostream &operator<<(std::ostream &s, const CIEDE2000::LAB &labColor);
      |                                        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:26:11: warning: member variable 'r' has public visibility [misc-non-private-member-variables-in-classes]
   26 |   uint8_t r, g, b;      // RGB values
      |           ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:26:14: warning: member variable 'g' has public visibility [misc-non-private-member-variables-in-classes]
   26 |   uint8_t r, g, b;      // RGB values
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:26:17: warning: member variable 'b' has public visibility [misc-non-private-member-variables-in-classes]
   26 |   uint8_t r, g, b;      // RGB values
      |                 ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:27:12: warning: member variable 'lrv_scaled' has public visibility [misc-non-private-member-variables-in-classes]
   27 |   uint16_t lrv_scaled;  // LRV * 100
      |            ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:28:12: warning: member variable 'id' has public visibility [misc-non-private-member-variables-in-classes]
   28 |   uint32_t id;          // Color ID
      |            ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:29:3: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   29 |   char name[64];        // Fixed-size name buffer
      |   ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:29:8: warning: member variable 'name' has public visibility [misc-non-private-member-variables-in-classes]
   29 |   char name[64];        // Fixed-size name buffer
      |        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:30:3: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
   30 |   char code[16];        // Fixed-size code buffer
      |   ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:30:8: warning: member variable 'code' has public visibility [misc-non-private-member-variables-in-classes]
   30 |   char code[16];        // Fixed-size code buffer
      |        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:31:8: warning: member variable 'light_text' has public visibility [misc-non-private-member-variables-in-classes]
   31 |   bool light_text;      // Light text flag
      |        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:36:3: warning: 'getLRV' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   36 |   float getLRV() const {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:37:12: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
   37 |     return lrv_scaled / 100.0f;
      |            ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:47:7: warning: class 'DuluxSimpleReader' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   47 | class DuluxSimpleReader {
      |       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:50:12: warning: use default member initializer for 'total_colors' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   50 |   uint32_t total_colors;
      |            ^           
      |                        {0}
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:51:12: warning: use default member initializer for 'current_position' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   51 |   uint32_t current_position;
      |            ^               
      |                            {0}
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:52:8: warning: use default member initializer for 'file_open' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   52 |   bool file_open;
      |        ^        
      |                 {false}
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:64:3: warning: 'readStringToBuffer' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   64 |   bool readStringToBuffer(char* buffer, size_t buffer_size) {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:64:8: warning: method 'readStringToBuffer' can be made static [readability-convert-member-functions-to-static]
   64 |   bool readStringToBuffer(char* buffer, size_t buffer_size) {
      |        ^
      |   static 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:65:13: warning: variable 'length' is not initialized [cppcoreguidelines-init-variables]
   65 |     uint8_t length = file.read();
      |             ^                   
      |                                  = 0
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:67:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   67 |       buffer[0] = '\0';
      |       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:74:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   74 |       buffer[buffer_size - 1] = '\0';
      |       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:78:14: warning: variable 'bytes_read' is not initialized [cppcoreguidelines-init-variables]
   78 |       size_t bytes_read = file.readBytes(buffer, length);
      |              ^                                 
      |                                                 = 0
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:78:14: warning: invalid case style for variable 'bytes_read' [readability-identifier-naming]
   78 |       size_t bytes_read = file.readBytes(buffer, length);
      |              ^~~~~~~~~~
      |              bytesRead
   79 |       if (bytes_read != length) {
      |           ~~~~~~~~~~
      |           bytesRead
   80 |         Serial.printf("String read error: expected %d, got %d\n", length, bytes_read);
      |                                                                           ~~~~~~~~~~
      |                                                                           bytesRead
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:80:16: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
   80 |         Serial.printf("String read error: expected %d, got %d\n", length, bytes_read);
      |                ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:83:7: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
   83 |       buffer[length] = '\0';
      |       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:93:3: warning: constructor does not initialize these fields: cache [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
   59 |   DuluxSimpleReader() : total_colors(0), current_position(0), file_open(false) {
      |   ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:93:3: warning: 'DuluxSimpleReader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   93 |   DuluxSimpleReader() : total_colors(0), current_position(0), file_open(false) {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:100:3: warning: '~DuluxSimpleReader' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  100 |   ~DuluxSimpleReader() {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:109:3: warning: 'openDatabase' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  109 |   bool openDatabase(const char* filename) {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:110:12: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  110 |     Serial.printf("Opening simple binary database: %s\n", filename);
      |            ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:114:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  114 |       Serial.printf("Failed to open file: %s\n", filename);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:119:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  119 |     uint32_t magic, version, color_count, reserved;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:119:14: warning: variable 'magic' is not initialized [cppcoreguidelines-init-variables]
  119 |     uint32_t magic, version, color_count, reserved;
      |              ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:119:21: warning: variable 'version' is not initialized [cppcoreguidelines-init-variables]
  119 |     uint32_t magic, version, color_count, reserved;
      |                     ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:119:30: warning: variable 'color_count' is not initialized [cppcoreguidelines-init-variables]
  119 |     uint32_t magic, version, color_count, reserved;
      |                              ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:119:30: warning: invalid case style for variable 'color_count' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:119:43: warning: variable 'reserved' is not initialized [cppcoreguidelines-init-variables]
  119 |     uint32_t magic, version, color_count, reserved;
      |                                           ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:129:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  129 |       Serial.printf("Invalid magic: 0x%08X\n", magic);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:135:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  135 |       Serial.printf("Invalid version: %u\n", version);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:144:12: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  144 |     Serial.printf("Database opened: %u colors\n", total_colors);
      |            ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:151:3: warning: 'getColorCount' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  151 |   uint32_t getColorCount() const {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:158:3: warning: 'readNextColor' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  158 |   bool readNextColor(SimpleColor& color) {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:164:9: warning: variable 'r' is not initialized [cppcoreguidelines-init-variables]
  164 |     int r = file.read();
      |         ^              
      |                         = 0
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:164:9: warning: variable name 'r' is too short, expected at least 3 characters [readability-identifier-length]
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:165:9: warning: variable 'g' is not initialized [cppcoreguidelines-init-variables]
  165 |     int g = file.read();
      |         ^              
      |                         = 0
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:165:9: warning: variable name 'g' is too short, expected at least 3 characters [readability-identifier-length]
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:166:9: warning: variable 'b' is not initialized [cppcoreguidelines-init-variables]
  166 |     int b = file.read();
      |         ^              
      |                         = 0
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:166:9: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:169:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  169 |       Serial.printf("Failed to read RGB at position %u\n", current_position);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:179:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  179 |       Serial.printf("Failed to read LRV at position %u\n", current_position);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:185:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  185 |       Serial.printf("Failed to read ID at position %u\n", current_position);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:190:29: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  190 |     if (!readStringToBuffer(color.name, sizeof(color.name))) {
      |                             ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:191:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  191 |       Serial.printf("Failed to read name at position %u\n", current_position);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:196:29: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  196 |     if (!readStringToBuffer(color.code, sizeof(color.code))) {
      |                             ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:197:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  197 |       Serial.printf("Failed to read code at position %u\n", current_position);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:202:9: warning: variable 'light_flag' is not initialized [cppcoreguidelines-init-variables]
  202 |     int light_flag = file.read();
      |         ^                       
      |                                  = 0
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:202:9: warning: invalid case style for variable 'light_flag' [readability-identifier-naming]
  202 |     int light_flag = file.read();
      |         ^~~~~~~~~~
      |         lightFlag
  203 |     if (light_flag < 0) {
      |         ~~~~~~~~~~
      |         lightFlag
  204 |       Serial.printf("Failed to read light flag at position %u\n", current_position);
  205 |       return false;
  206 |     }
  207 |     color.light_text = (light_flag != 0);
      |                         ~~~~~~~~~~
      |                         lightFlag
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:204:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  204 |       Serial.printf("Failed to read light flag at position %u\n", current_position);
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:216:3: warning: 'getColorByIndex' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  216 |   bool getColorByIndex(uint32_t index, SimpleColor& color) {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:226:18: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  226 |     if (!reset())
      |                  ^
      |                   {
  227 |       return false;
      |                    
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:231:7: warning: uninitialized record type: 'temp' [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  231 |       SimpleColor temp;
      |       ^               
      |                       {}
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:244:3: warning: 'isOpen' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  244 |   bool isOpen() const {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:251:3: warning: 'reset' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  251 |   bool reset() {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:252:20: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  252 |     if (!file_open)
      |                    ^
      |                     {
  253 |       return false;
      |                    
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:264:3: warning: 'findClosestColor' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  264 |   bool findClosestColor(uint8_t target_r, uint8_t target_g, uint8_t target_b, SimpleColor& result) {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:264:8: warning: function 'findClosestColor' has cognitive complexity of 32 (threshold 25) [readability-function-cognitive-complexity]
  264 |   bool findClosestColor(uint8_t target_r, uint8_t target_g, uint8_t target_b, SimpleColor& result) {
      |        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:265:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  265 |     if (!file_open)
      |     ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:269:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  269 |     if (cache.valid && cache.r == target_r && cache.g == target_g && cache.b == target_b) {
      |     ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:269:67: note: +1
  269 |     if (cache.valid && cache.r == target_r && cache.g == target_g && cache.b == target_b) {
      |                                                                   ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:275:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  275 |     if (!reset())
      |     ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:290:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  290 |     while (readNextColor(current_color)) {
      |     ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:292:7: note: +2, including nesting penalty of 1, nesting level increased to 2
  292 |       if (millis() - start_time > MAX_SEARCH_TIME) {
      |       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:301:64: note: +1
  301 |       bool is_light_target = (target_r > 200 && target_g > 200 && target_b > 200);
      |                                                                ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:303:59: note: +1
  303 |           (current_color.r > 200 && current_color.g > 200 && current_color.b > 200);
      |                                                           ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:305:7: note: +2, including nesting penalty of 1, nesting level increased to 2
  305 |       if (is_light_target && is_light_current) {
      |       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:305:27: note: +1
  305 |       if (is_light_target && is_light_current) {
      |                           ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:311:9: note: +1, nesting level increased to 2
  311 |       } else {
      |         ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:318:7: note: +2, including nesting penalty of 1, nesting level increased to 2
  318 |       if (distance < min_distance) {
      |       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:324:9: note: +3, including nesting penalty of 2, nesting level increased to 3
  324 |         if ((is_light_target && is_light_current && distance < 10.0f) ||
      |         ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:324:71: note: +1
  324 |         if ((is_light_target && is_light_current && distance < 10.0f) ||
      |                                                                       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:324:50: note: +1
  324 |         if ((is_light_target && is_light_current && distance < 10.0f) ||
      |                                                  ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:325:53: note: +1
  325 |             (!is_light_target || !is_light_current) && distance < 5.0f) {
      |                                                     ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:325:31: note: +1
  325 |             (!is_light_target || !is_light_current) && distance < 5.0f) {
      |                               ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:331:9: note: +3, including nesting penalty of 2, nesting level increased to 3
  331 |         if ((is_light_target && is_light_current && distance < 3.0f) ||
      |         ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:331:70: note: +1
  331 |         if ((is_light_target && is_light_current && distance < 3.0f) ||
      |                                                                      ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:331:50: note: +1
  331 |         if ((is_light_target && is_light_current && distance < 3.0f) ||
      |                                                  ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:332:54: note: +1
  332 |             ((!is_light_target || !is_light_current) && distance < 1.0f)) {
      |                                                      ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:332:32: note: +1
  332 |             ((!is_light_target || !is_light_current) && distance < 1.0f)) {
      |                                ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:341:7: note: +2, including nesting penalty of 1, nesting level increased to 2
  341 |       if (colors_checked % 2000 == 0) {
      |       ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:346:5: note: +1, including nesting penalty of 0, nesting level increased to 1
  346 |     if (found) {
      |     ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:265:20: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  265 |     if (!file_open)
      |                    ^
      |                     {
  266 |       return false;
      |                    
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:270:14: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  270 |       result = cache.result;
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:25:8: note: resolves to this declaration
   25 | struct SimpleColor {
      |        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:275:18: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  275 |     if (!reset())
      |                  ^
      |                   {
  276 |       return false;
      |                    
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:278:11: warning: invalid case style for variable 'min_distance' [readability-identifier-naming]
  278 |     float min_distance = 999999.0f;
      |           ^~~~~~~~~~~~
      |           minDistance
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:280:5: warning: uninitialized record type: 'current_color' [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  280 |     SimpleColor current_color;
      |     ^                        
      |                              {}
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:280:17: warning: invalid case style for variable 'current_color' [readability-identifier-naming]
  280 |     SimpleColor current_color;
      |                 ^~~~~~~~~~~~~
      |                 currentColor
  281 | 
  282 |     // Convert target RGB to LAB once (optimization)
  283 |     CIEDE2000::LAB target_lab;
  284 |     rgbToLAB(target_r, target_g, target_b, target_lab);
  285 | 
  286 |     uint32_t colors_checked = 0;
  287 |     unsigned long start_time = millis();
  288 |     const unsigned long MAX_SEARCH_TIME = 2000;  // Max 2000ms search time for thorough search
  289 | 
  290 |     while (readNextColor(current_color)) {
      |                          ~~~~~~~~~~~~~
      |                          currentColor
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:283:20: warning: invalid case style for variable 'target_lab' [readability-identifier-naming]
  283 |     CIEDE2000::LAB target_lab;
      |                    ^~~~~~~~~~
      |                    targetLab
  284 |     rgbToLAB(target_r, target_g, target_b, target_lab);
      |                                            ~~~~~~~~~~
      |                                            targetLab
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:284:5: warning: 'rgbToLAB' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  284 |     rgbToLAB(target_r, target_g, target_b, target_lab);
      |     ^
src\CIEDE2000.h:127:6: note: resolves to this declaration
  127 | void rgbToLAB(uint8_t r, uint8_t g, uint8_t b, CIEDE2000::LAB &lab);
      |      ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:286:14: warning: invalid case style for variable 'colors_checked' [readability-identifier-naming]
  286 |     uint32_t colors_checked = 0;
      |              ^~~~~~~~~~~~~~
      |              colorsChecked
  287 |     unsigned long start_time = millis();
  288 |     const unsigned long MAX_SEARCH_TIME = 2000;  // Max 2000ms search time for thorough search
  289 | 
  290 |     while (readNextColor(current_color)) {
  291 |       // Timeout check for responsive live view
  292 |       if (millis() - start_time > MAX_SEARCH_TIME) {
  293 |         Serial.printf("Search timeout after %ums, checked %u colors\n", MAX_SEARCH_TIME,
  294 |                       colors_checked);
      |                       ~~~~~~~~~~~~~~
      |                       colorsChecked
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:287:5: warning: variable 'start_time' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  287 |     unsigned long start_time = millis();
      |     ^
      |                   const 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:287:19: warning: invalid case style for variable 'start_time' [readability-identifier-naming]
  287 |     unsigned long start_time = millis();
      |                   ^~~~~~~~~~
      |                   startTime
  288 |     const unsigned long MAX_SEARCH_TIME = 2000;  // Max 2000ms search time for thorough search
  289 | 
  290 |     while (readNextColor(current_color)) {
  291 |       // Timeout check for responsive live view
  292 |       if (millis() - start_time > MAX_SEARCH_TIME) {
      |                      ~~~~~~~~~~
      |                      startTime
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:287:32: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  287 |     unsigned long start_time = millis();
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:292:11: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  292 |       if (millis() - start_time > MAX_SEARCH_TIME) {
      |           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:293:16: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  293 |         Serial.printf("Search timeout after %ums, checked %u colors\n", MAX_SEARCH_TIME,
      |                ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:298:13: warning: variable 'distance' is not initialized [cppcoreguidelines-init-variables]
   15 |       float distance;
      |             ^       
      |                      = NAN
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:301:7: warning: variable 'is_light_target' of type 'bool' can be declared 'const' [misc-const-correctness]
  301 |       bool is_light_target = (target_r > 200 && target_g > 200 && target_b > 200);
      |       ^
      |            const 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:301:12: warning: invalid case style for variable 'is_light_target' [readability-identifier-naming]
  301 |       bool is_light_target = (target_r > 200 && target_g > 200 && target_b > 200);
      |            ^~~~~~~~~~~~~~~
      |            isLightTarget
  302 |       bool is_light_current =
  303 |           (current_color.r > 200 && current_color.g > 200 && current_color.b > 200);
  304 | 
  305 |       if (is_light_target && is_light_current) {
      |           ~~~~~~~~~~~~~~~
      |           isLightTarget
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:302:7: warning: variable 'is_light_current' of type 'bool' can be declared 'const' [misc-const-correctness]
  302 |       bool is_light_current =
      |       ^
      |            const 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:302:12: warning: invalid case style for variable 'is_light_current' [readability-identifier-naming]
  302 |       bool is_light_current =
      |            ^~~~~~~~~~~~~~~~
      |            isLightCurrent
  303 |           (current_color.r > 200 && current_color.g > 200 && current_color.b > 200);
  304 | 
  305 |       if (is_light_target && is_light_current) {
      |                              ~~~~~~~~~~~~~~~~
      |                              isLightCurrent
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:307:9: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
  307 |         float dr = (float)(target_r - current_color.r);
      |         ^~~~~
      |         auto
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:307:9: warning: variable 'dr' of type 'float' can be declared 'const' [misc-const-correctness]
  307 |         float dr = (float)(target_r - current_color.r);
      |         ^
      |               const 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:307:15: warning: variable name 'dr' is too short, expected at least 3 characters [readability-identifier-length]
  307 |         float dr = (float)(target_r - current_color.r);
      |               ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:308:9: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
  308 |         float dg = (float)(target_g - current_color.g);
      |         ^~~~~
      |         auto
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:308:9: warning: variable 'dg' of type 'float' can be declared 'const' [misc-const-correctness]
  308 |         float dg = (float)(target_g - current_color.g);
      |         ^
      |               const 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:308:15: warning: variable name 'dg' is too short, expected at least 3 characters [readability-identifier-length]
  308 |         float dg = (float)(target_g - current_color.g);
      |               ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:309:9: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
  309 |         float db = (float)(target_b - current_color.b);
      |         ^~~~~
      |         auto
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:309:9: warning: variable 'db' of type 'float' can be declared 'const' [misc-const-correctness]
  309 |         float db = (float)(target_b - current_color.b);
      |         ^
      |               const 
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:309:15: warning: variable name 'db' is too short, expected at least 3 characters [readability-identifier-length]
  309 |         float db = (float)(target_b - current_color.b);
      |               ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:310:20: warning: 'sqrt' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  310 |         distance = sqrt(dr * dr + dg * dg + db * db);
      |                    ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:264:40: note: resolves to this declaration
  264 | _NODISCARD _Check_return_ inline float sqrt(_In_ float _Xx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:310:25: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  310 |         distance = sqrt(dr * dr + dg * dg + db * db);
      |                         ^~~~~~~
      |                         (      )
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:310:35: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  310 |         distance = sqrt(dr * dr + dg * dg + db * db);
      |                                   ^~~~~~~
      |                                   (      )
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:310:45: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  310 |         distance = sqrt(dr * dr + dg * dg + db * db);
      |                                             ^~~~~~~~
      |                                             (      )
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:313:24: warning: invalid case style for variable 'current_lab' [readability-identifier-naming]
  313 |         CIEDE2000::LAB current_lab;
      |                        ^~~~~~~~~~~
      |                        currentLab
  314 |         rgbToLAB(current_color.r, current_color.g, current_color.b, current_lab);
      |                                                                     ~~~~~~~~~~~
      |                                                                     currentLab
  315 |         distance = (float)CIEDE2000::CIEDE2000(target_lab, current_lab);
      |                                                            ~~~~~~~~~~~
      |                                                            currentLab
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:314:9: warning: 'rgbToLAB' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  314 |         rgbToLAB(current_color.r, current_color.g, current_color.b, current_lab);
      |         ^
src\CIEDE2000.h:127:6: note: resolves to this declaration
  127 | void rgbToLAB(uint8_t r, uint8_t g, uint8_t b, CIEDE2000::LAB &lab);
      |      ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:315:27: warning: 'CIEDE2000' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  315 |         distance = (float)CIEDE2000::CIEDE2000(target_lab, current_lab);
      |                           ^
src\CIEDE2000.h:58:8: note: resolves to this declaration
   58 | double CIEDE2000(const LAB &lab1, const LAB &lab2);
      |        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:320:16: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  320 |         result = current_color;
      |                ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:25:8: note: resolves to this declaration
   25 | struct SimpleColor {
      |        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:326:18: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  326 |           Serial.printf("Close match: %s (%d,%d,%d) distance: %.2f\n", current_color.name,
      |                  ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:326:72: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  326 |           Serial.printf("Close match: %s (%d,%d,%d) distance: %.2f\n", current_color.name,
      |                                                                        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:333:18: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  333 |           Serial.printf("Excellent match found, stopping search\n");
      |                  ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:342:16: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  342 |         Serial.printf("Searching... checked %u colors\n", colors_checked);
      |                ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:351:20: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  351 |       cache.result = result;
      |                    ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:25:8: note: resolves to this declaration
   25 | struct SimpleColor {
      |        ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:354:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  354 |       Serial.printf("Final match: %s (%d,%d,%d) distance: %.2f after checking %u colors\n",
      |              ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:355:21: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  355 |                     result.name, result.r, result.g, result.b, min_distance, colors_checked);
      |                     ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:364:3: warning: 'close' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  364 |   void close() {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:16:1: warning: system include algorithm not allowed, transitively included from src\lightweight_kdtree.h [llvmlibc-restrict-system-libc-headers]
   16 | #include <algorithm>
      | ^~~~~~~~~~~~~~~~~~~~
   17 | #include <queue>
src\lightweight_kdtree.h:17:1: warning: system include queue not allowed, transitively included from src\lightweight_kdtree.h [llvmlibc-restrict-system-libc-headers]
   17 | #include <queue>
      | ^~~~~~~~~~~~~~~~
   18 | #include <vector>
src\lightweight_kdtree.h:18:1: warning: system include vector not allowed, transitively included from src\lightweight_kdtree.h [llvmlibc-restrict-system-libc-headers]
   18 | #include <vector>
      | ^~~~~~~~~~~~~~~~~
   19 | 
src\lightweight_kdtree.h:24:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
   24 |   typedef T value_type;
      |   ^~~~~~~~~~~~~~~~~~~~
      |   using value_type = T
src\lightweight_kdtree.h:25:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
   25 |   typedef T* pointer;
      |   ^~~~~~~~~~~~~~~~~~
      |   using pointer = T*
src\lightweight_kdtree.h:26:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
   26 |   typedef const T* const_pointer;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |   using const_pointer = T*
src\lightweight_kdtree.h:27:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
   27 |   typedef T& reference;
      |   ^~~~~~~~~~~~~~~~~~~~
      |   using reference = T&
src\lightweight_kdtree.h:28:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
   28 |   typedef const T& const_reference;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |   using const_reference = T&
src\lightweight_kdtree.h:29:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
   29 |   typedef size_t size_type;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~
      |   using size_type = size_t
src\lightweight_kdtree.h:30:3: warning: use 'using' instead of 'typedef' [modernize-use-using]
   30 |   typedef ptrdiff_t difference_type;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |   using difference_type = ptrdiff_t
src\lightweight_kdtree.h:33:10: warning: invalid case style for class 'rebind' [readability-identifier-naming]
   33 |   struct rebind {
      |          ^~~~~~
      |          Rebind
src\lightweight_kdtree.h:34:5: warning: use 'using' instead of 'typedef' [modernize-use-using]
   34 |     typedef PSRAMAllocator<U> other;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |     using other = PSRAMAllocator<U>
src\lightweight_kdtree.h:37:3: warning: 'PSRAMAllocator<T>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   37 |   PSRAMAllocator() = default;
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:39:3: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]
   39 |   PSRAMAllocator(const PSRAMAllocator<U>&) {
      |   ^
      |   explicit 
src\lightweight_kdtree.h:39:3: warning: 'PSRAMAllocator<T>' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   39 |   PSRAMAllocator(const PSRAMAllocator<U>&) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:39:42: warning: all parameters should be named in a function [hicpp-named-parameter]
   39 |   PSRAMAllocator(const PSRAMAllocator<U>&) {
      |                                          ^
      |                                           /*unused*/
src\lightweight_kdtree.h:42:3: warning: 'allocate' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   42 |   pointer allocate(size_type n) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:54:3: warning: 'deallocate' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   54 |   void deallocate(pointer p, size_type) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:54:27: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
   54 |   void deallocate(pointer p, size_type) {
      |                           ^
src\lightweight_kdtree.h:54:39: warning: all parameters should be named in a function [hicpp-named-parameter]
   54 |   void deallocate(pointer p, size_type) {
      |                                       ^
      |                                        /*unused*/
src\lightweight_kdtree.h:58:3: warning: 'operator==' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   58 |   bool operator==(const PSRAMAllocator&) const {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:58:40: warning: all parameters should be named in a function [hicpp-named-parameter]
   58 |   bool operator==(const PSRAMAllocator&) const {
      |                                        ^
      |                                         /*unused*/
src\lightweight_kdtree.h:61:3: warning: 'operator!=' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   61 |   bool operator!=(const PSRAMAllocator&) const {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:61:40: warning: all parameters should be named in a function [hicpp-named-parameter]
   61 |   bool operator!=(const PSRAMAllocator&) const {
      |                                        ^
      |                                         /*unused*/
src\lightweight_kdtree.h:72:11: warning: member variable 'r' has public visibility [misc-non-private-member-variables-in-classes]
   72 |   uint8_t r, g, b;  // RGB values (3 bytes)
      |           ^
src\lightweight_kdtree.h:72:14: warning: member variable 'g' has public visibility [misc-non-private-member-variables-in-classes]
   72 |   uint8_t r, g, b;  // RGB values (3 bytes)
      |              ^
src\lightweight_kdtree.h:72:17: warning: member variable 'b' has public visibility [misc-non-private-member-variables-in-classes]
   72 |   uint8_t r, g, b;  // RGB values (3 bytes)
      |                 ^
src\lightweight_kdtree.h:73:12: warning: member variable 'index' has public visibility [misc-non-private-member-variables-in-classes]
   73 |   uint16_t index;   // Index in original database (2 bytes)
      |            ^
src\lightweight_kdtree.h:75:3: warning: 'ColorPoint' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   75 |   ColorPoint() : r(0), g(0), b(0), index(0) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:77:3: warning: 'ColorPoint' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   77 |   ColorPoint(uint8_t r, uint8_t g, uint8_t b, uint16_t idx) : r(r), g(g), b(b), index(idx) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:77:22: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
   77 |   ColorPoint(uint8_t r, uint8_t g, uint8_t b, uint16_t idx) : r(r), g(g), b(b), index(idx) {
      |                      ^
src\lightweight_kdtree.h:77:33: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
   77 |   ColorPoint(uint8_t r, uint8_t g, uint8_t b, uint16_t idx) : r(r), g(g), b(b), index(idx) {
      |                                 ^
src\lightweight_kdtree.h:77:44: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
   77 |   ColorPoint(uint8_t r, uint8_t g, uint8_t b, uint16_t idx) : r(r), g(g), b(b), index(idx) {
      |                                            ^
src\lightweight_kdtree.h:83:14: warning: member variable 'point' has public visibility [misc-non-private-member-variables-in-classes]
   83 |   ColorPoint point;  // Color data (5 bytes)
      |              ^
src\lightweight_kdtree.h:84:11: warning: use default member initializer for 'axis' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   84 |   uint8_t axis;      // Splitting axis 0=R, 1=G, 2=B (1 byte)
      |           ^   
      |               {0}
   85 |   uint16_t left;     // Index of left child (2 bytes, 0 = no child)
   86 |   uint16_t right;    // Index of right child (2 bytes, 0 = no child)
   87 | 
   88 |   KDNode() : axis(0), left(0), right(0) {
      |              ~~~~~~~
src\lightweight_kdtree.h:84:11: warning: member variable 'axis' has public visibility [misc-non-private-member-variables-in-classes]
src\lightweight_kdtree.h:85:12: warning: use default member initializer for 'left' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   85 |   uint16_t left;     // Index of left child (2 bytes, 0 = no child)
      |            ^   
      |                {0}
   86 |   uint16_t right;    // Index of right child (2 bytes, 0 = no child)
   87 | 
   88 |   KDNode() : axis(0), left(0), right(0) {
      |                       ~~~~~~~
src\lightweight_kdtree.h:85:12: warning: member variable 'left' has public visibility [misc-non-private-member-variables-in-classes]
src\lightweight_kdtree.h:86:12: warning: use default member initializer for 'right' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   86 |   uint16_t right;    // Index of right child (2 bytes, 0 = no child)
      |            ^    
      |                 {0}
   87 | 
   88 |   KDNode() : axis(0), left(0), right(0) {
      |                                ~~~~~~~~
src\lightweight_kdtree.h:86:12: warning: member variable 'right' has public visibility [misc-non-private-member-variables-in-classes]
src\lightweight_kdtree.h:88:3: warning: 'KDNode' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
   88 |   KDNode() : axis(0), left(0), right(0) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:92:7: warning: class 'LightweightKDTree' defines a non-default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   92 | class LightweightKDTree {
      |       ^
src\lightweight_kdtree.h:96:10: warning: use default member initializer for 'node_count' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   96 |   size_t node_count;
      |          ^         
      |                    {0}
src\lightweight_kdtree.h:97:8: warning: use default member initializer for 'built' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   97 |   bool built;
      |        ^    
      |             {false}
src\lightweight_kdtree.h:98:10: warning: use default member initializer for 'max_tree_size' [cppcoreguidelines-use-default-member-init,modernize-use-default-member-init]
   98 |   size_t max_tree_size;  // Adaptive size limit based on available memory
      |          ^            
      |                       {0}
src\lightweight_kdtree.h:102:14: warning: member variable 'node_index' has public visibility [misc-non-private-member-variables-in-classes]
  102 |     uint16_t node_index;
      |              ^
src\lightweight_kdtree.h:103:12: warning: member variable 'start' has public visibility [misc-non-private-member-variables-in-classes]
  103 |     size_t start;
      |            ^
src\lightweight_kdtree.h:104:12: warning: member variable 'end' has public visibility [misc-non-private-member-variables-in-classes]
  104 |     size_t end;
      |            ^
src\lightweight_kdtree.h:105:13: warning: member variable 'depth' has public visibility [misc-non-private-member-variables-in-classes]
  105 |     uint8_t depth;
      |             ^
src\lightweight_kdtree.h:107:5: warning: 'BuildItem' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  107 |     BuildItem(uint16_t ni, size_t s, size_t e, uint8_t d)
      |     ^
      |     LIBC_INLINE 
src\lightweight_kdtree.h:107:24: warning: parameter name 'ni' is too short, expected at least 3 characters [readability-identifier-length]
  107 |     BuildItem(uint16_t ni, size_t s, size_t e, uint8_t d)
      |                        ^
src\lightweight_kdtree.h:107:35: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
  107 |     BuildItem(uint16_t ni, size_t s, size_t e, uint8_t d)
      |                                   ^
src\lightweight_kdtree.h:107:45: warning: parameter name 'e' is too short, expected at least 3 characters [readability-identifier-length]
  107 |     BuildItem(uint16_t ni, size_t s, size_t e, uint8_t d)
      |                                             ^
src\lightweight_kdtree.h:107:56: warning: parameter name 'd' is too short, expected at least 3 characters [readability-identifier-length]
  107 |     BuildItem(uint16_t ni, size_t s, size_t e, uint8_t d)
      |                                                        ^
src\lightweight_kdtree.h:113:3: warning: 'getCoordinate' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  113 |   uint8_t getCoordinate(const ColorPoint& p, uint8_t axis) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:113:11: warning: method 'getCoordinate' can be made static [readability-convert-member-functions-to-static]
  113 |   uint8_t getCoordinate(const ColorPoint& p, uint8_t axis) {
      |           ^
      |   static 
src\lightweight_kdtree.h:113:43: warning: parameter name 'p' is too short, expected at least 3 characters [readability-identifier-length]
  113 |   uint8_t getCoordinate(const ColorPoint& p, uint8_t axis) {
      |                                           ^
src\lightweight_kdtree.h:127:3: warning: 'distanceSquared' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  127 |   uint32_t distanceSquared(const ColorPoint& a, const ColorPoint& b) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:127:12: warning: method 'distanceSquared' can be made static [readability-convert-member-functions-to-static]
  127 |   uint32_t distanceSquared(const ColorPoint& a, const ColorPoint& b) {
      |            ^
      |   static 
src\lightweight_kdtree.h:127:46: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
  127 |   uint32_t distanceSquared(const ColorPoint& a, const ColorPoint& b) {
      |                                              ^
src\lightweight_kdtree.h:127:67: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  127 |   uint32_t distanceSquared(const ColorPoint& a, const ColorPoint& b) {
      |                                                                   ^
src\lightweight_kdtree.h:128:5: warning: variable 'dr' of type 'int32_t' (aka 'int') can be declared 'const' [misc-const-correctness]
  128 |     int32_t dr = (int32_t)a.r - (int32_t)b.r;
      |     ^
      |             const 
src\lightweight_kdtree.h:128:13: warning: variable name 'dr' is too short, expected at least 3 characters [readability-identifier-length]
  128 |     int32_t dr = (int32_t)a.r - (int32_t)b.r;
      |             ^
src\lightweight_kdtree.h:129:5: warning: variable 'dg' of type 'int32_t' (aka 'int') can be declared 'const' [misc-const-correctness]
  129 |     int32_t dg = (int32_t)a.g - (int32_t)b.g;
      |     ^
      |             const 
src\lightweight_kdtree.h:129:13: warning: variable name 'dg' is too short, expected at least 3 characters [readability-identifier-length]
  129 |     int32_t dg = (int32_t)a.g - (int32_t)b.g;
      |             ^
src\lightweight_kdtree.h:130:5: warning: variable 'db' of type 'int32_t' (aka 'int') can be declared 'const' [misc-const-correctness]
  130 |     int32_t db = (int32_t)a.b - (int32_t)b.b;
      |     ^
      |             const 
src\lightweight_kdtree.h:130:13: warning: variable name 'db' is too short, expected at least 3 characters [readability-identifier-length]
  130 |     int32_t db = (int32_t)a.b - (int32_t)b.b;
      |             ^
src\lightweight_kdtree.h:131:23: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  131 |     return (uint32_t)(dr * dr + dg * dg + db * db);
      |                       ^~~~~~~
      |                       (      )
src\lightweight_kdtree.h:131:33: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  131 |     return (uint32_t)(dr * dr + dg * dg + db * db);
      |                                 ^~~~~~~
      |                                 (      )
src\lightweight_kdtree.h:131:43: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  131 |     return (uint32_t)(dr * dr + dg * dg + db * db);
      |                                           ^~~~~~~~
      |                                           (      )
src\lightweight_kdtree.h:135:3: warning: 'searchNearest' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  135 |   void searchNearest(uint16_t node_index, const ColorPoint& target, ColorPoint& best,
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:137:25: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  137 |     if (node_index == 0)
      |                         ^
      |                          {
  138 |       return;
      |              
src\lightweight_kdtree.h:152:7: warning: variable 'dist' of type 'uint32_t' (aka 'unsigned int') can be declared 'const' [misc-const-correctness]
  152 |       uint32_t dist = distanceSquared(node.point, target);
      |       ^
      |                const 
src\lightweight_kdtree.h:155:14: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  155 |         best = node.point;
      |              ^
src\lightweight_kdtree.h:71:8: note: resolves to this declaration
   71 | struct ColorPoint {
      |        ^
src\lightweight_kdtree.h:159:7: warning: variable 'target_coord' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
  159 |       uint8_t target_coord = getCoordinate(target, node.axis);
      |       ^
      |               const 
src\lightweight_kdtree.h:159:15: warning: invalid case style for variable 'target_coord' [readability-identifier-naming]
  159 |       uint8_t target_coord = getCoordinate(target, node.axis);
      |               ^~~~~~~~~~~~
      |               targetCoord
  160 |       uint8_t node_coord = getCoordinate(node.point, node.axis);
  161 | 
  162 |       uint16_t first_child, second_child;
  163 |       if (target_coord <= node_coord) {
      |           ~~~~~~~~~~~~
      |           targetCoord
  164 |         first_child = node.left;
  165 |         second_child = node.right;
  166 |       } else {
  167 |         first_child = node.right;
  168 |         second_child = node.left;
  169 |       }
  170 | 
  171 |       // Add children to stack (second child first so first child is processed first)
  172 |       if (second_child != 0) {
  173 |         // Check if we need to search the other side
  174 |         int32_t axis_dist = (int32_t)target_coord - (int32_t)node_coord;
      |                                      ~~~~~~~~~~~~
      |                                      targetCoord
src\lightweight_kdtree.h:160:7: warning: variable 'node_coord' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
  160 |       uint8_t node_coord = getCoordinate(node.point, node.axis);
      |       ^
      |               const 
src\lightweight_kdtree.h:160:15: warning: invalid case style for variable 'node_coord' [readability-identifier-naming]
  160 |       uint8_t node_coord = getCoordinate(node.point, node.axis);
      |               ^~~~~~~~~~
      |               nodeCoord
  161 | 
  162 |       uint16_t first_child, second_child;
  163 |       if (target_coord <= node_coord) {
      |                           ~~~~~~~~~~
      |                           nodeCoord
  164 |         first_child = node.left;
  165 |         second_child = node.right;
  166 |       } else {
  167 |         first_child = node.right;
  168 |         second_child = node.left;
  169 |       }
  170 | 
  171 |       // Add children to stack (second child first so first child is processed first)
  172 |       if (second_child != 0) {
  173 |         // Check if we need to search the other side
  174 |         int32_t axis_dist = (int32_t)target_coord - (int32_t)node_coord;
      |                                                              ~~~~~~~~~~
      |                                                              nodeCoord
src\lightweight_kdtree.h:162:7: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  162 |       uint16_t first_child, second_child;
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src\lightweight_kdtree.h:162:16: warning: variable 'first_child' is not initialized [cppcoreguidelines-init-variables]
  162 |       uint16_t first_child, second_child;
      |                ^
note: this fix will not be applied because it overlaps with another fix
src\lightweight_kdtree.h:162:16: warning: invalid case style for variable 'first_child' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
src\lightweight_kdtree.h:162:29: warning: variable 'second_child' is not initialized [cppcoreguidelines-init-variables]
  162 |       uint16_t first_child, second_child;
      |                             ^
note: this fix will not be applied because it overlaps with another fix
src\lightweight_kdtree.h:162:29: warning: invalid case style for variable 'second_child' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
src\lightweight_kdtree.h:174:9: warning: variable 'axis_dist' of type 'int32_t' (aka 'int') can be declared 'const' [misc-const-correctness]
  174 |         int32_t axis_dist = (int32_t)target_coord - (int32_t)node_coord;
      |         ^
      |                 const 
src\lightweight_kdtree.h:174:17: warning: invalid case style for variable 'axis_dist' [readability-identifier-naming]
  174 |         int32_t axis_dist = (int32_t)target_coord - (int32_t)node_coord;
      |                 ^~~~~~~~~
      |                 axisDist
  175 |         if ((uint32_t)(axis_dist * axis_dist) < best_dist) {
      |                        ~~~~~~~~~   ~~~~~~~~~
      |                        axisDist    axisDist
src\lightweight_kdtree.h:187:3: warning: 'buildBalancedTree' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  187 |   bool buildBalancedTree() {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:188:24: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  188 |     if (points.empty())
      |                        ^
      |                         {
  189 |       return false;
      |                    
src\lightweight_kdtree.h:199:27: warning: invalid case style for variable 'build_queue' [readability-identifier-naming]
  199 |     std::queue<BuildTask> build_queue;
      |                           ^~~~~~~~~~~
      |                           buildQueue
  200 | 
  201 |     // Start with root
  202 |     build_queue.push({0, 0, points.size(), 0});
  203 |     node_count = 0;
  204 | 
  205 |     while (!build_queue.empty() && node_count < points.size()) {
  206 |       BuildTask task = build_queue.front();
  207 |       build_queue.pop();
      |       ~~~~~~~~~~~
      |       buildQueue
src\lightweight_kdtree.h:209:34: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  209 |       if (task.start >= task.end)
      |                                  ^
      |                                   {
  210 |         continue;
      |                  
src\lightweight_kdtree.h:213:7: warning: variable 'axis' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
  213 |       uint8_t axis = task.depth % 3;
      |       ^
      |               const 
src\lightweight_kdtree.h:231:36: warning: '/' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  231 |       size_t median = task.start + (task.end - task.start) / 2;
      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                    (                          )
src\lightweight_kdtree.h:245:18: warning: invalid case style for variable 'left_idx' [readability-identifier-naming]
  245 |           size_t left_idx = node_count;
      |                  ^~~~~~~~
      |                  leftIdx
  246 |           node.left = left_idx + 1;  // 1-based indexing
      |                       ~~~~~~~~
      |                       leftIdx
  247 |           build_queue.push({left_idx, task.start, median, (uint8_t)(task.depth + 1)});
      |                             ~~~~~~~~
      |                             leftIdx
src\lightweight_kdtree.h:251:18: warning: invalid case style for variable 'right_idx' [readability-identifier-naming]
  251 |           size_t right_idx = node_count;
      |                  ^~~~~~~~~
      |                  rightIdx
  252 |           node.right = right_idx + 1;  // 1-based indexing
      |                        ~~~~~~~~~
      |                        rightIdx
  253 |           build_queue.push({right_idx, median + 1, task.end, (uint8_t)(task.depth + 1)});
      |                             ~~~~~~~~~
      |                             rightIdx
src\lightweight_kdtree.h:261:9: warning: 'yield' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  261 |         yield();  // Allow other tasks to run
      |         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:74:6: note: resolves to this declaration
   74 | void yield(void);
      |      ^
src\lightweight_kdtree.h:266:16: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  266 |         Serial.printf("[KDTree] Stopping at %u nodes to preserve PSRAM\n", node_count);
      |                ^
src\lightweight_kdtree.h:275:3: warning: 'LightweightKDTree' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  275 |   LightweightKDTree()
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:285:3: warning: '~LightweightKDTree' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  285 |   ~LightweightKDTree() {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:290:3: warning: 'calculateOptimalTreeSize' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  290 |   void calculateOptimalTreeSize() {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:291:5: warning: variable 'free_psram' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  291 |     size_t free_psram = ESP.getFreePsram();
      |     ^
      |            const 
src\lightweight_kdtree.h:291:12: warning: invalid case style for variable 'free_psram' [readability-identifier-naming]
  291 |     size_t free_psram = ESP.getFreePsram();
      |            ^~~~~~~~~~
      |            freePsram
  292 |     size_t free_heap = ESP.getFreeHeap();
  293 | 
  294 |     // Reserve 2MB for other operations, use remaining for KD-tree
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |                               ~~~~~~~~~~                     ~~~~~~~~~~
      |                               freePsram                      freePsram
src\lightweight_kdtree.h:292:5: warning: variable 'free_heap' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  292 |     size_t free_heap = ESP.getFreeHeap();
      |     ^
      |            const 
src\lightweight_kdtree.h:292:12: warning: invalid case style for variable 'free_heap' [readability-identifier-naming]
  292 |     size_t free_heap = ESP.getFreeHeap();
      |            ^~~~~~~~~
      |            freeHeap
src\lightweight_kdtree.h:295:5: warning: variable 'available_memory' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |     ^
      |            const 
src\lightweight_kdtree.h:295:12: warning: invalid case style for variable 'available_memory' [readability-identifier-naming]
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |            ^~~~~~~~~~~~~~~~
      |            availableMemory
  296 | 
  297 |     // Each tree node uses sizeof(KDNode) + sizeof(ColorPoint) bytes
  298 |     size_t bytes_per_point = sizeof(KDNode) + sizeof(ColorPoint);
  299 |     max_tree_size = available_memory / bytes_per_point;
      |                     ~~~~~~~~~~~~~~~~
      |                     availableMemory
src\lightweight_kdtree.h:295:44: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |                                            ^
src\lightweight_kdtree.h:295:44: note: make conversion explicit to silence this warning
   17 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |                                            ^~~~~~~~~~~~~~~
      |                                            static_cast<size_t>( )
src\lightweight_kdtree.h:295:44: note: perform multiplication in a wider type
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |                                            ^~~~~~~~
      |                                            static_cast<long long>( )
src\lightweight_kdtree.h:295:75: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |                                                                           ^
src\lightweight_kdtree.h:295:75: note: make conversion explicit to silence this warning
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |                                                                           ^~~~~~~~~~~~~~~
      |                                                                           static_cast<size_t>( )
src\lightweight_kdtree.h:295:75: note: perform multiplication in a wider type
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |                                                                           ^~~~~~~~
      |                                                                           static_cast<long long>( )
src\lightweight_kdtree.h:295:75: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
  295 |     size_t available_memory = free_psram > 2 * 1024 * 1024 ? free_psram - 2 * 1024 * 1024 : 0;
      |                                                                           ^~~~~~~~~~~~~~~
      |                                                                           (              )
src\lightweight_kdtree.h:298:5: warning: variable 'bytes_per_point' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  298 |     size_t bytes_per_point = sizeof(KDNode) + sizeof(ColorPoint);
      |     ^
      |            const 
src\lightweight_kdtree.h:298:12: warning: invalid case style for variable 'bytes_per_point' [readability-identifier-naming]
  298 |     size_t bytes_per_point = sizeof(KDNode) + sizeof(ColorPoint);
      |            ^~~~~~~~~~~~~~~
      |            bytesPerPoint
  299 |     max_tree_size = available_memory / bytes_per_point;
      |                                        ~~~~~~~~~~~~~~~
      |                                        bytesPerPoint
src\lightweight_kdtree.h:302:5: warning: use `std::min` instead of `>` [readability-use-std-min-max]
  302 |     if (max_tree_size > 4500)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~
      |     max_tree_size = std::min<size_t>(max_tree_size, 4500);
  303 |       max_tree_size = 4500;
      |       ~~~~~~~~~~~~~~~~~~~~~
src\lightweight_kdtree.h:302:30: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  302 |     if (max_tree_size > 4500)
      |                              ^
note: this fix will not be applied because it overlaps with another fix
src\lightweight_kdtree.h:306:5: warning: use `std::max` instead of `<` [readability-use-std-min-max]
  306 |     if (max_tree_size < 500) {
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |     max_tree_size = std::max<size_t>(max_tree_size, 500);
  307 |       max_tree_size = 500;  // Use heap if PSRAM is insufficient
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  308 |     }
      |     ~
src\lightweight_kdtree.h:310:12: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  310 |     Serial.printf("[KDTree] Available PSRAM: %u KB, Optimal tree size: %u colors\n",
      |            ^
src\lightweight_kdtree.h:314:3: warning: 'clear' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  314 |   void clear() {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:322:3: warning: 'build' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  322 |   bool build(const PSRAMColorVector& input_points) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:324:5: warning: variable 'start_time' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  324 |     unsigned long start_time = millis();
      |     ^
      |                   const 
src\lightweight_kdtree.h:324:19: warning: invalid case style for variable 'start_time' [readability-identifier-naming]
  324 |     unsigned long start_time = millis();
      |                   ^~~~~~~~~~
      |                   startTime
src\lightweight_kdtree.h:324:32: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  324 |     unsigned long start_time = millis();
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
src\lightweight_kdtree.h:335:12: warning: invalid case style for variable 'actual_points' [readability-identifier-naming]
  335 |     size_t actual_points = std::min(input_points.size(), max_tree_size);
      |            ^~~~~~~~~~~~~
      |            actualPoints
  336 | 
  337 |     Serial.printf("[KDTree] Building tree with %u of %u colors (limit: %u)\n", actual_points,
      |                                                                                ~~~~~~~~~~~~~
      |                                                                                actualPoints
  338 |                   input_points.size(), max_tree_size);
  339 | 
  340 |     // Check PSRAM allocation specifically
  341 |     size_t required_memory = actual_points * (sizeof(KDNode) + sizeof(ColorPoint));
      |                              ~~~~~~~~~~~~~
      |                              actualPoints
  342 |     size_t free_psram = ESP.getFreePsram();
  343 | 
  344 |     Serial.printf("[KDTree] Required: %u KB, Available PSRAM: %u KB\n", required_memory / 1024,
  345 |                   free_psram / 1024);
  346 | 
  347 |     if (required_memory > free_psram * 0.8) {  // Use only 80% of available PSRAM
  348 |       actual_points = (free_psram * 0.8) / (sizeof(KDNode) + sizeof(ColorPoint));
      |       ~~~~~~~~~~~~~
      |       actualPoints
  349 |       Serial.printf("[KDTree] Reducing size to %u colors to fit in PSRAM\n", actual_points);
      |                                                                              ~~~~~~~~~~~~~
      |                                                                              actualPoints
src\lightweight_kdtree.h:337:5: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  337 |     Serial.printf("[KDTree] Building tree with %u of %u colors (limit: %u)\n", actual_points,
      |     ^
src\lightweight_kdtree.h:341:5: warning: variable 'required_memory' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  341 |     size_t required_memory = actual_points * (sizeof(KDNode) + sizeof(ColorPoint));
      |     ^
      |            const 
src\lightweight_kdtree.h:341:12: warning: invalid case style for variable 'required_memory' [readability-identifier-naming]
  341 |     size_t required_memory = actual_points * (sizeof(KDNode) + sizeof(ColorPoint));
      |            ^~~~~~~~~~~~~~~
      |            requiredMemory
  342 |     size_t free_psram = ESP.getFreePsram();
  343 | 
  344 |     Serial.printf("[KDTree] Required: %u KB, Available PSRAM: %u KB\n", required_memory / 1024,
      |                                                                         ~~~~~~~~~~~~~~~
      |                                                                         requiredMemory
  345 |                   free_psram / 1024);
  346 | 
  347 |     if (required_memory > free_psram * 0.8) {  // Use only 80% of available PSRAM
      |         ~~~~~~~~~~~~~~~
      |         requiredMemory
src\lightweight_kdtree.h:342:5: warning: variable 'free_psram' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  342 |     size_t free_psram = ESP.getFreePsram();
      |     ^
      |            const 
src\lightweight_kdtree.h:342:12: warning: invalid case style for variable 'free_psram' [readability-identifier-naming]
  342 |     size_t free_psram = ESP.getFreePsram();
      |            ^~~~~~~~~~
      |            freePsram
  343 | 
  344 |     Serial.printf("[KDTree] Required: %u KB, Available PSRAM: %u KB\n", required_memory / 1024,
  345 |                   free_psram / 1024);
      |                   ~~~~~~~~~~
      |                   freePsram
  346 | 
  347 |     if (required_memory > free_psram * 0.8) {  // Use only 80% of available PSRAM
      |                           ~~~~~~~~~~
      |                           freePsram
  348 |       actual_points = (free_psram * 0.8) / (sizeof(KDNode) + sizeof(ColorPoint));
      |                        ~~~~~~~~~~
      |                        freePsram
src\lightweight_kdtree.h:344:12: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  344 |     Serial.printf("[KDTree] Required: %u KB, Available PSRAM: %u KB\n", required_memory / 1024,
      |            ^
src\lightweight_kdtree.h:347:9: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  347 |     if (required_memory > free_psram * 0.8) {  // Use only 80% of available PSRAM
      |         ^
src\lightweight_kdtree.h:347:27: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  347 |     if (required_memory > free_psram * 0.8) {  // Use only 80% of available PSRAM
      |                           ^
src\lightweight_kdtree.h:348:23: warning: narrowing conversion from 'double' to 'size_t' (aka 'unsigned long long') [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  348 |       actual_points = (free_psram * 0.8) / (sizeof(KDNode) + sizeof(ColorPoint));
      |                       ^
src\lightweight_kdtree.h:348:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long long') to 'double' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
  348 |       actual_points = (free_psram * 0.8) / (sizeof(KDNode) + sizeof(ColorPoint));
      |                        ^
src\lightweight_kdtree.h:349:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  349 |       Serial.printf("[KDTree] Reducing size to %u colors to fit in PSRAM\n", actual_points);
      |              ^
src\lightweight_kdtree.h:370:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  370 |       Serial.printf("[KDTree] PSRAM allocation successful for %u points\n", actual_points);
      |              ^
src\lightweight_kdtree.h:375:9: warning: variable 'build_time' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  375 |         unsigned long build_time = millis() - start_time;
      |         ^
      |                       const 
src\lightweight_kdtree.h:375:23: warning: invalid case style for variable 'build_time' [readability-identifier-naming]
  375 |         unsigned long build_time = millis() - start_time;
      |                       ^~~~~~~~~~
      |                       buildTime
  376 | 
  377 |         Serial.printf("[KDTree] Tree built successfully in %u ms\n", build_time);
      |                                                                      ~~~~~~~~~~
      |                                                                      buildTime
src\lightweight_kdtree.h:375:36: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  375 |         unsigned long build_time = millis() - start_time;
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
src\lightweight_kdtree.h:377:16: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  377 |         Serial.printf("[KDTree] Tree built successfully in %u ms\n", build_time);
      |                ^
src\lightweight_kdtree.h:378:16: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  378 |         Serial.printf("[KDTree] Nodes: %u, Memory: %u KB PSRAM\n", node_count,
      |                ^
src\lightweight_kdtree.h:380:16: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  380 |         Serial.printf("[KDTree] Remaining PSRAM: %u KB\n", ESP.getFreePsram() / 1024);
      |                ^
src\lightweight_kdtree.h:385:14: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
  385 |       Serial.printf("[KDTree] Error during PSRAM allocation: %s\n", e.what());
      |              ^
src\lightweight_kdtree.h:394:3: warning: 'findNearest' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  394 |   ColorPoint findNearest(uint8_t r, uint8_t g, uint8_t b) {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:394:34: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  394 |   ColorPoint findNearest(uint8_t r, uint8_t g, uint8_t b) {
      |                                  ^
src\lightweight_kdtree.h:394:45: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
  394 |   ColorPoint findNearest(uint8_t r, uint8_t g, uint8_t b) {
      |                                             ^
src\lightweight_kdtree.h:394:56: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  394 |   ColorPoint findNearest(uint8_t r, uint8_t g, uint8_t b) {
      |                                                        ^
src\lightweight_kdtree.h:397:14: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
  397 |       return ColorPoint();
      |              ^~~~~~~~~~~~
      |              {}
src\lightweight_kdtree.h:400:5: warning: variable 'target' of type 'ColorPoint' can be declared 'const' [misc-const-correctness]
  400 |     ColorPoint target(r, g, b, 0);
      |     ^
      |                const 
src\lightweight_kdtree.h:402:14: warning: invalid case style for variable 'best_dist' [readability-identifier-naming]
  402 |     uint32_t best_dist = distanceSquared(target, best);
      |              ^~~~~~~~~
      |              bestDist
  403 | 
  404 |     // Use proper KD-tree search if we have a complete tree
  405 |     if (node_count > 1) {
  406 |       searchNearest(1, target, best, best_dist);  // 1-based indexing
      |                                      ~~~~~~~~~
      |                                      bestDist
src\lightweight_kdtree.h:413:3: warning: 'getNodeCount' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  413 |   size_t getNodeCount() const {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:416:3: warning: 'isBuilt' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  416 |   bool isBuilt() const {
      |   ^
      |   LIBC_INLINE 
src\lightweight_kdtree.h:419:3: warning: 'getMemoryUsage' must be tagged with the LIBC_INLINE macro; the macro should be placed at the beginning of the declaration [llvmlibc-inline-function-decl]
  419 |   size_t getMemoryUsage() const {
      |   ^
      |   LIBC_INLINE 
G:\finalcolorwithcalibration\src\main.cpp:17:1: warning: included header ArduinoJson.h is not used directly [misc-include-cleaner]
   17 | #include <ArduinoJson.h>
      | ^~~~~~~~~~~~~~~~~~~~~~~~
   18 | #include <DFRobot_TCS3430.h>
G:\finalcolorwithcalibration\src\main.cpp:33:11: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
   33 | namespace {
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:63:13: warning: initialization of 'ums3' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
   63 | static UMS3 ums3;
      |             ^
.pio\libdeps\um_pros3\UMS3 Helper\src\UMS3.h:55:2: note: possibly throwing constructor declared here
   55 |         UMS3() : brightness(255) {}
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:63:13: warning: variable 'ums3' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
   63 | static UMS3 ums3;
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:63:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:63:13: warning: variable 'ums3' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:66:7: warning: class 'PsramAllocator' defines a default destructor but does not define a copy constructor, a copy assignment operator, a move constructor or a move assignment operator [cppcoreguidelines-special-member-functions,hicpp-special-member-functions]
   66 | class PsramAllocator : public ArduinoJson::Allocator {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:66:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:66:44: warning: no header providing "ArduinoJson::Allocator" is directly included [misc-include-cleaner]
   26 | class PsramAllocator : public ArduinoJson::Allocator {
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:70:18: warning: no header providing "size_t" is directly included [misc-include-cleaner]
   26 |   void *allocate(size_t size) override {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:71:12: warning: 'heap_caps_malloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   71 |     return heap_caps_malloc(size, MALLOC_CAP_SPIRAM | MALLOC_CAP_8BIT);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\esp_heap_caps.h:67:7: note: resolves to this declaration
   67 | void *heap_caps_malloc(size_t size, uint32_t caps);
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:75:5: warning: 'heap_caps_free' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   75 |     heap_caps_free(pointer);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\esp_heap_caps.h:79:6: note: resolves to this declaration
   79 | void heap_caps_free( void *ptr);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:79:12: warning: 'heap_caps_realloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
   79 |     return heap_caps_realloc(ptr, new_size, MALLOC_CAP_SPIRAM | MALLOC_CAP_8BIT);
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\esp_heap_caps.h:98:7: note: resolves to this declaration
   98 | void *heap_caps_realloc( void *ptr, size_t size, uint32_t caps);
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:84:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
   84 | enum LogLevel { LOG_ERROR = 0, LOG_WARN = 1, LOG_INFO = 2, LOG_DEBUG = 3 };
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:84:6: warning: enum 'LogLevel' uses a larger base type ('int', size: 4 bytes) than necessary for its value set, consider using 'std::uint8_t' (1 byte) as the base type to reduce its size [performance-enum-size]
G:\finalcolorwithcalibration\src\main.cpp:86:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
   86 | class Logger {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:95:27: warning: no header providing "String" is directly included [misc-include-cleaner]
   24 |   static void error(const String &message) {
      |                           ^
G:\finalcolorwithcalibration\src\main.cpp:97:7: warning: no header providing "Serial" is directly included [misc-include-cleaner]
   24 |       Serial.print("[ERROR] ");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:142:18: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  142 | LogLevel Logger::currentLevel = DEFAULT_LOG_LEVEL;  // Configurable default log level
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:145:20: warning: variable 'ssid' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  145 | static const char *ssid = WIFI_SSID;
      |                    ^
G:\finalcolorwithcalibration\src\main.cpp:145:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:145:20: warning: variable 'ssid' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:146:20: warning: variable 'password' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  146 | static const char *password = WIFI_PASSWORD;
      |                    ^
G:\finalcolorwithcalibration\src\main.cpp:146:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:146:20: warning: variable 'password' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:149:20: warning: variable 'ap_ssid' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  149 | static const char *ap_ssid = AP_SSID;
      |                    ^
G:\finalcolorwithcalibration\src\main.cpp:149:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:149:20: warning: variable 'ap_ssid' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:149:20: warning: invalid case style for variable 'ap_ssid' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:150:20: warning: variable 'ap_password' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  150 | static const char *ap_password = AP_PASSWORD;
      |                    ^
G:\finalcolorwithcalibration\src\main.cpp:150:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:150:20: warning: variable 'ap_password' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:150:20: warning: invalid case style for variable 'ap_password' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:153:8: warning: no header providing "IPAddress" is directly included [misc-include-cleaner]
   24 | static IPAddress local_IP, gateway, subnet;
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:153:18: warning: initialization of 'local_IP' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  153 | static IPAddress local_IP, gateway, subnet;
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:48:5: note: possibly throwing constructor declared here
   48 |     IPAddress();
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:153:18: warning: variable 'local_IP' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  153 | static IPAddress local_IP, gateway, subnet;
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:153:18: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:153:18: warning: variable 'local_IP' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:153:18: warning: invalid case style for variable 'local_IP' [readability-identifier-naming]
  153 | static IPAddress local_IP, gateway, subnet;
      |                  ^~~~~~~~
      |                  localIp
  154 | static void initializeIPAddresses() {
  155 |   local_IP.fromString(STATIC_IP);
      |   ~~~~~~~~
      |   localIp
G:\finalcolorwithcalibration\src\main.cpp:153:28: warning: initialization of 'gateway' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  153 | static IPAddress local_IP, gateway, subnet;
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:48:5: note: possibly throwing constructor declared here
   48 |     IPAddress();
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:153:28: warning: variable 'gateway' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  153 | static IPAddress local_IP, gateway, subnet;
      |                            ^
G:\finalcolorwithcalibration\src\main.cpp:153:28: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:153:28: warning: variable 'gateway' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:153:37: warning: initialization of 'subnet' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  153 | static IPAddress local_IP, gateway, subnet;
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\IPAddress.h:48:5: note: possibly throwing constructor declared here
   48 |     IPAddress();
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:153:37: warning: variable 'subnet' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  153 | static IPAddress local_IP, gateway, subnet;
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:153:37: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:153:37: warning: variable 'subnet' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:154:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  154 | static void initializeIPAddresses() {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:154:13: warning: function 'initializeIPAddresses' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:161:23: warning: initialization of 'server' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  161 | static AsyncWebServer server(HTTP_SERVER_PORT);
      |                       ^
.pio\libdeps\um_pros3\ESPAsyncWebServer\src\ESPAsyncWebServer.h:826:5: note: possibly throwing constructor declared here
  826 |     AsyncWebServer(uint16_t port);
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:161:23: warning: variable 'server' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  161 | static AsyncWebServer server(HTTP_SERVER_PORT);
      |                       ^
G:\finalcolorwithcalibration\src\main.cpp:161:23: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:161:23: warning: variable 'server' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:164:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  164 | static void handleGetSettings(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:164:13: warning: function 'handleGetSettings' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:165:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  165 | static void handleSetLedBrightness(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:165:13: warning: function 'handleSetLedBrightness' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:166:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  166 | static void handleSetIntegrationTime(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:166:13: warning: function 'handleSetIntegrationTime' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:167:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  167 | static void handleSetIRCompensation(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:167:13: warning: function 'handleSetIRCompensation' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:168:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  168 | static void handleSetColorSamples(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:168:13: warning: function 'handleSetColorSamples' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:169:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  169 | static void handleSetSampleDelay(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:169:13: warning: function 'handleSetSampleDelay' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:170:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  170 | static void handleSetDebugSettings(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:170:13: warning: function 'handleSetDebugSettings' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:173:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  173 | static void handleFastColorAPI(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:173:13: warning: function 'handleFastColorAPI' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:174:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  174 | static void handleColorNameAPI(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:174:13: warning: function 'handleColorNameAPI' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:175:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  175 | static void handleForceColorLookup(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:175:13: warning: function 'handleForceColorLookup' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:178:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  178 | static void handleGetCalibration(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:178:13: warning: function 'handleGetCalibration' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:179:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  179 | static void handleTuneVividWhite(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:179:13: warning: function 'handleTuneVividWhite' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:180:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:180:13: warning: function 'convertXYZtoRGB_Uncalibrated' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:180:13: warning: invalid case style for function 'convertXYZtoRGB_Uncalibrated' [readability-identifier-naming]
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |             convertXyZtoRgbUncalibrated
G:\finalcolorwithcalibration\src\main.cpp:180:42: warning: no header providing "uint16_t" is directly included [misc-include-cleaner]
   26 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                          ^
G:\finalcolorwithcalibration\src\main.cpp:180:51: warning: parameter name 'X' is too short, expected at least 3 characters [readability-identifier-length]
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                   ^
G:\finalcolorwithcalibration\src\main.cpp:180:63: warning: parameter name 'Y' is too short, expected at least 3 characters [readability-identifier-length]
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                               ^
G:\finalcolorwithcalibration\src\main.cpp:180:75: warning: parameter name 'Z' is too short, expected at least 3 characters [readability-identifier-length]
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                                           ^
G:\finalcolorwithcalibration\src\main.cpp:180:78: warning: no header providing "uint8_t" is directly included [misc-include-cleaner]
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                                              ^
G:\finalcolorwithcalibration\src\main.cpp:180:87: warning: parameter name 'R' is too short, expected at least 3 characters [readability-identifier-length]
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                                                       ^
G:\finalcolorwithcalibration\src\main.cpp:180:99: warning: parameter name 'G' is too short, expected at least 3 characters [readability-identifier-length]
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                                                                   ^
G:\finalcolorwithcalibration\src\main.cpp:181:44: warning: parameter name 'B' is too short, expected at least 3 characters [readability-identifier-length]
  181 |                                   uint8_t &B);
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:182:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  182 | static void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:182:13: warning: function 'convertXYZtoRGB_Calibrated' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:182:13: warning: invalid case style for function 'convertXYZtoRGB_Calibrated' [readability-identifier-naming]
  182 | static void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |             convertXyZtoRgbCalibrated
G:\finalcolorwithcalibration\src\main.cpp:182:49: warning: parameter name 'X' is too short, expected at least 3 characters [readability-identifier-length]
  182 | static void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |                                                 ^
G:\finalcolorwithcalibration\src\main.cpp:182:61: warning: parameter name 'Y' is too short, expected at least 3 characters [readability-identifier-length]
  182 | static void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |                                                             ^
G:\finalcolorwithcalibration\src\main.cpp:182:73: warning: parameter name 'Z' is too short, expected at least 3 characters [readability-identifier-length]
  182 | static void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |                                                                         ^
G:\finalcolorwithcalibration\src\main.cpp:183:42: warning: parameter name 'R' is too short, expected at least 3 characters [readability-identifier-length]
  183 |                                 uint8_t &R, uint8_t &G, uint8_t &B);
      |                                          ^
G:\finalcolorwithcalibration\src\main.cpp:183:54: warning: parameter name 'G' is too short, expected at least 3 characters [readability-identifier-length]
  183 |                                 uint8_t &R, uint8_t &G, uint8_t &B);
      |                                                      ^
G:\finalcolorwithcalibration\src\main.cpp:183:66: warning: parameter name 'B' is too short, expected at least 3 characters [readability-identifier-length]
  183 |                                 uint8_t &R, uint8_t &G, uint8_t &B);
      |                                                                  ^
G:\finalcolorwithcalibration\src\main.cpp:186:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  186 | static float getBatteryVoltage();
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:186:14: warning: function 'getBatteryVoltage' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:188:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  188 | static bool getVbusPresent();
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:188:13: warning: function 'getVbusPresent' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:189:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  189 | static void handleBatteryAPI(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:189:13: warning: function 'handleBatteryAPI' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:191:24: warning: initialization of 'TCS3430' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  191 | static DFRobot_TCS3430 TCS3430;
      |                        ^
.pio\libdeps\um_pros3\DFRobot_TCS3430\DFRobot_TCS3430.h:328:3: note: possibly throwing constructor declared here
  328 |   DFRobot_TCS3430(TwoWire *pWire=&Wire);
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:191:24: warning: variable 'TCS3430' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  191 | static DFRobot_TCS3430 TCS3430;
      |                        ^
G:\finalcolorwithcalibration\src\main.cpp:191:24: warning: initializing non-local variable with non-const expression depending on uninitialized non-local variable 'Wire' [cppcoreguidelines-interfaces-global-init]
G:\finalcolorwithcalibration\src\main.cpp:191:24: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:191:24: warning: variable 'TCS3430' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:191:24: warning: invalid case style for variable 'TCS3430' [readability-identifier-naming]
  191 | static DFRobot_TCS3430 TCS3430;
      |                        ^~~~~~~
      |                        tcS3430
G:\finalcolorwithcalibration\src\main.cpp:201:12: warning: variable 'LEDpin' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  201 | static int LEDpin = LED_PIN;
      |            ^
G:\finalcolorwithcalibration\src\main.cpp:201:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:201:12: warning: variable 'LEDpin' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:201:12: warning: invalid case style for variable 'LEDpin' [readability-identifier-naming]
  201 | static int LEDpin = LED_PIN;
      |            ^~~~~~
      |            leDpin
G:\finalcolorwithcalibration\src\main.cpp:203:23: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  203 | static const uint16_t SATURATION_THRESHOLD = SENSOR_SATURATION_THRESHOLD;
      |                       ^
G:\finalcolorwithcalibration\src\main.cpp:209:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  209 | struct RuntimeSettings {
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:236:3: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  236 |   float brightMatrix[MATRIX_SIZE] = {0.0280f, -0.0045f, -0.0070f, -0.0055f, 0.0254f,
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:238:3: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  238 |   float brightOffset[3] = {0.0f, 0.0f, 0.0f};
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:241:3: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  241 |   float darkMatrix[MATRIX_SIZE] = {0.0291f, -0.0032f, -0.0024f, -0.0040f, 0.0268f,
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:243:3: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  243 |   float darkOffset[3] = {0.0f, 0.0f, 0.0f};
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:325:24: warning: variable 'settings' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  325 | static RuntimeSettings settings;
      |                        ^
G:\finalcolorwithcalibration\src\main.cpp:325:24: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:325:24: warning: variable 'settings' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:331:26: warning: initialization of 'simpleColorDB' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  331 | static DuluxSimpleReader simpleColorDB;
      |                          ^
G:\finalcolorwithcalibration\src\dulux_simple_reader.h:93:3: note: possibly throwing constructor declared here
   93 |   DuluxSimpleReader() : total_colors(0), current_position(0), file_open(false) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:331:26: warning: variable 'simpleColorDB' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  331 | static DuluxSimpleReader simpleColorDB;
      |                          ^
G:\finalcolorwithcalibration\src\main.cpp:331:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:331:26: warning: variable 'simpleColorDB' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:333:26: warning: initialization of 'kdTreeColorDB' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  333 | static LightweightKDTree kdTreeColorDB;
      |                          ^
src\lightweight_kdtree.h:275:3: note: possibly throwing constructor declared here
  275 |   LightweightKDTree()
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:333:26: warning: variable 'kdTreeColorDB' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  333 | static LightweightKDTree kdTreeColorDB;
      |                          ^
G:\finalcolorwithcalibration\src\main.cpp:333:26: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:333:26: warning: variable 'kdTreeColorDB' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:337:8: warning: constructor does not initialize these fields: r, g, b [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  337 | struct DuluxColor {
      |        ^
  338 |   String name;      // Color name
  339 |   String code;      // Color code
  340 |   uint8_t r, g, b;  // RGB values
      |                  
      |            {} {} {}
G:\finalcolorwithcalibration\src\main.cpp:337:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:346:20: warning: variable 'fallbackColorDatabase' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  346 | static DuluxColor *fallbackColorDatabase = nullptr;
      |                    ^
G:\finalcolorwithcalibration\src\main.cpp:346:20: warning: variable 'fallbackColorDatabase' provides global access to a non-const object; consider making the pointed-to data 'const' [cppcoreguidelines-avoid-non-const-global-variables]
G:\finalcolorwithcalibration\src\main.cpp:346:20: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:346:20: warning: variable 'fallbackColorDatabase' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:347:12: warning: variable 'fallbackColorCount' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  347 | static int fallbackColorCount = 0;
      |            ^
G:\finalcolorwithcalibration\src\main.cpp:347:12: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:347:12: warning: variable 'fallbackColorCount' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:350:7: warning: do not declare C-style arrays, use 'std::array' instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
  350 | const DuluxColor fallbackColors[] PROGMEM = {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:350:18: warning: initialization of 'fallbackColors' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  350 | const DuluxColor fallbackColors[] PROGMEM = {
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:64:9: note: possibly throwing constructor declared here
   64 |         String(const String &str);
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:350:18: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  350 | const DuluxColor fallbackColors[] PROGMEM = {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:350:18: warning: invalid case style for constant 'fallbackColors' [readability-identifier-naming]
  350 | const DuluxColor fallbackColors[] PROGMEM = {
      |                  ^~~~~~~~~~~~~~
      |                  FALLBACK_COLORS
  351 |     {"Pure Brilliant White", "10BB83", 255, 255, 255, "89", "1"},
  352 |     {"Natural White", "10BB31", 252, 251, 247, "85", "2"},
  353 |     {"Antique White", "20YY83", 248, 243, 234, "82", "3"},
  354 |     {"Light Grey", "00NN79", 200, 200, 200, "65", "4"},
  355 |     {"Medium Grey", "00NN53", 135, 135, 135, "35", "5"},
  356 |     {"Charcoal", "00NN21", 54, 54, 54, "8", "6"},
  357 |     {"Pure Black", "00NN05", 13, 13, 13, "2", "7"},
  358 |     {"Bright Red", "10YR68", 218, 59, 59, "25", "8"},
  359 |     {"Forest Green", "30GY25", 34, 102, 34, "15", "9"},
  360 |     {"Sky Blue", "70BG65", 135, 206, 235, "55", "10"}};
  361 | 
  362 | // Load fallback colors when main database fails
  363 | bool loadFallbackColors() {
  364 |   const int fallbackCount = sizeof(fallbackColors) / sizeof(fallbackColors[0]);
      |                                    ~~~~~~~~~~~~~~           ~~~~~~~~~~~~~~
      |                                    FALLBACK_COLORS          FALLBACK_COLORS
G:\finalcolorwithcalibration\src\main.cpp:350:35: warning: no header providing "PROGMEM" is directly included [misc-include-cleaner]
   25 | const DuluxColor fallbackColors[] PROGMEM = {
      |                                   ^
G:\finalcolorwithcalibration\src\main.cpp:363:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  363 | bool loadFallbackColors() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:363:6: warning: function 'loadFallbackColors' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]
  363 | bool loadFallbackColors() {
      |      ^
      | static 
G:\finalcolorwithcalibration\src\main.cpp:364:13: warning: invalid case style for constant 'fallbackCount' [readability-identifier-naming]
  364 |   const int fallbackCount = sizeof(fallbackColors) / sizeof(fallbackColors[0]);
      |             ^~~~~~~~~~~~~
      |             FALLBACK_COUNT
  365 |   Logger::warn("Loading fallback color database with " + String(fallbackCount) + " colors");
      |                                                                 ~~~~~~~~~~~~~
      |                                                                 FALLBACK_COUNT
  366 | 
  367 |   // Allocate memory for fallback colors in PSRAM if available
  368 |   fallbackColorDatabase = (DuluxColor *)heap_caps_malloc(sizeof(DuluxColor) * fallbackCount,
      |                                                                               ~~~~~~~~~~~~~
      |                                                                               FALLBACK_COUNT
  369 |                                                          MALLOC_CAP_SPIRAM | MALLOC_CAP_8BIT);
  370 |   if (!fallbackColorDatabase) {
  371 |     Logger::warn("Failed to allocate fallback colors in PSRAM, trying regular heap");
  372 |     fallbackColorDatabase = new DuluxColor[fallbackCount];
      |                                            ~~~~~~~~~~~~~
      |                                            FALLBACK_COUNT
G:\finalcolorwithcalibration\src\main.cpp:365:3: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |   Logger::warn("Loading fallback color database with " + String(fallbackCount) + " colors");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:365:56: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |   Logger::warn("Loading fallback color database with " + String(fallbackCount) + " colors");
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:365:80: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  365 |   Logger::warn("Loading fallback color database with " + String(fallbackCount) + " colors");
      |                                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:368:27: warning: do not use C-style cast to convert between unrelated types [cppcoreguidelines-pro-type-cstyle-cast]
  368 |   fallbackColorDatabase = (DuluxColor *)heap_caps_malloc(sizeof(DuluxColor) * fallbackCount,
      |                           ^
G:\finalcolorwithcalibration\src\main.cpp:368:41: warning: 'heap_caps_malloc' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  368 |   fallbackColorDatabase = (DuluxColor *)heap_caps_malloc(sizeof(DuluxColor) * fallbackCount,
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\esp_heap_caps.h:67:7: note: resolves to this declaration
   67 | void *heap_caps_malloc(size_t size, uint32_t caps);
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:370:8: warning: implicit conversion 'DuluxColor *' -> 'bool' [readability-implicit-bool-conversion]
  370 |   if (!fallbackColorDatabase) {
      |       ~^                    
      |                              == nullptr
G:\finalcolorwithcalibration\src\main.cpp:371:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  371 |     Logger::warn("Failed to allocate fallback colors in PSRAM, trying regular heap");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:372:5: warning: assigning newly created 'gsl::owner<>' to non-owner 'DuluxColor *' [cppcoreguidelines-owning-memory]
  372 |     fallbackColorDatabase = new DuluxColor[fallbackCount];
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
G:\finalcolorwithcalibration\src\main.cpp:373:10: warning: implicit conversion 'DuluxColor *' -> 'bool' [readability-implicit-bool-conversion]
  373 |     if (!fallbackColorDatabase) {
      |         ~^                    
      |                                == nullptr
G:\finalcolorwithcalibration\src\main.cpp:374:7: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  374 |       Logger::error("Failed to allocate memory for fallback colors");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:381:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  381 |     fallbackColorDatabase[i].name = String(fallbackColors[i].name);
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:381:35: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  381 |     fallbackColorDatabase[i].name = String(fallbackColors[i].name);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:381:44: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  381 |     fallbackColorDatabase[i].name = String(fallbackColors[i].name);
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:382:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  382 |     fallbackColorDatabase[i].code = String(fallbackColors[i].code);
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:382:35: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  382 |     fallbackColorDatabase[i].code = String(fallbackColors[i].code);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:382:44: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  382 |     fallbackColorDatabase[i].code = String(fallbackColors[i].code);
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:383:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  383 |     fallbackColorDatabase[i].r = fallbackColors[i].r;
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:383:34: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  383 |     fallbackColorDatabase[i].r = fallbackColors[i].r;
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:384:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  384 |     fallbackColorDatabase[i].g = fallbackColors[i].g;
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:384:34: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  384 |     fallbackColorDatabase[i].g = fallbackColors[i].g;
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:385:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  385 |     fallbackColorDatabase[i].b = fallbackColors[i].b;
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:385:34: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  385 |     fallbackColorDatabase[i].b = fallbackColors[i].b;
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:386:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  386 |     fallbackColorDatabase[i].lrv = String(fallbackColors[i].lrv);
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:386:34: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  386 |     fallbackColorDatabase[i].lrv = String(fallbackColors[i].lrv);
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:386:43: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  386 |     fallbackColorDatabase[i].lrv = String(fallbackColors[i].lrv);
      |                                           ^
G:\finalcolorwithcalibration\src\main.cpp:387:5: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  387 |     fallbackColorDatabase[i].id = String(fallbackColors[i].id);
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:387:33: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  387 |     fallbackColorDatabase[i].id = String(fallbackColors[i].id);
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:387:42: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
  387 |     fallbackColorDatabase[i].id = String(fallbackColors[i].id);
      |                                          ^
G:\finalcolorwithcalibration\src\main.cpp:392:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  392 |   Logger::info("Fallback color database loaded successfully with " + String(fallbackColorCount) +
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:392:68: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  392 |   Logger::info("Fallback color database loaded successfully with " + String(fallbackColorCount) +
      |                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:392:97: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  392 |   Logger::info("Fallback color database loaded successfully with " + String(fallbackColorCount) +
      |                                                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:398:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  398 | bool loadColorDatabase() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:398:6: warning: function 'loadColorDatabase' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]
  398 | bool loadColorDatabase() {
      |      ^
      | static 
G:\finalcolorwithcalibration\src\main.cpp:398:6: warning: function 'loadColorDatabase' has cognitive complexity of 71 (threshold 25) [readability-function-cognitive-complexity]
G:\finalcolorwithcalibration\src\main.cpp:404:35: note: +1, including nesting penalty of 0, nesting level increased to 1
  404 |   size_t freePsram = psramFound() ? ESP.getFreePsram() : 0;
      |                                   ^
G:\finalcolorwithcalibration\src\main.cpp:407:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  407 |   if (psramFound()) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:411:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  411 |     if (freePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB)) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:417:5: note: +1, nesting level increased to 1
  417 |   } else {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:427:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  427 |   if (simpleColorDB.openDatabase("/dulux.bin")) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:439:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  439 |     if (shouldUseKdtree && colorCount <= LARGE_COLOR_DB_THRESHOLD) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:439:25: note: +1
  439 |     if (shouldUseKdtree && colorCount <= LARGE_COLOR_DB_THRESHOLD) {
      |                         ^
G:\finalcolorwithcalibration\src\main.cpp:444:12: note: +1, nesting level increased to 2
  444 |     } else if (shouldUseKdtree && colorCount > LARGE_COLOR_DB_THRESHOLD) {
      |            ^
G:\finalcolorwithcalibration\src\main.cpp:444:32: note: +1
  444 |     } else if (shouldUseKdtree && colorCount > LARGE_COLOR_DB_THRESHOLD) {
      |                                ^
G:\finalcolorwithcalibration\src\main.cpp:453:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  453 |     if (shouldUseKdtree) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:467:7: note: +3, including nesting penalty of 2, nesting level increased to 3
  467 |       if (colorCount > LARGE_COLOR_DB_THRESHOLD) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:475:7: note: +3, including nesting penalty of 2, nesting level increased to 3
  475 |       if (effectiveColorCount < colorCount) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:489:7: note: +3, including nesting penalty of 2, nesting level increased to 3
  489 |       for (size_t i = 0; i < effectiveColorCount; i++) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:491:9: note: +4, including nesting penalty of 3, nesting level increased to 4
  491 |         if (millis() - loadStartTime > maxLoadTime) {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:500:9: note: +4, including nesting penalty of 3, nesting level increased to 4
  500 |         if (simpleColorDB.getColorByIndex(i, color)) {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:506:11: note: +5, including nesting penalty of 4, nesting level increased to 5
  506 |           if (effectiveColorCount > LARGE_COLOR_DB_THRESHOLD && (i % 500 == 0 || i == effectiveColorCount - 1)) {
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:506:62: note: +1
  506 |           if (effectiveColorCount > LARGE_COLOR_DB_THRESHOLD && (i % 500 == 0 || i == effectiveColorCount - 1)) {
      |                                                              ^
G:\finalcolorwithcalibration\src\main.cpp:506:79: note: +1
  506 |           if (effectiveColorCount > LARGE_COLOR_DB_THRESHOLD && (i % 500 == 0 || i == effectiveColorCount - 1)) {
      |                                                                               ^
G:\finalcolorwithcalibration\src\main.cpp:519:13: note: +6, including nesting penalty of 5, nesting level increased to 6
  519 |             if (currentFreeHeap < 50000) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:527:13: note: +6, including nesting penalty of 5, nesting level increased to 6
  527 |             if (currentFreePsram < (PSRAM_SAFETY_MARGIN_KB * 1024 / 2)) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:535:11: note: +1, nesting level increased to 4
  535 |         } else {
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:537:11: note: +5, including nesting penalty of 4, nesting level increased to 5
  537 |           if (i % 1000 == 0) {
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:545:7: note: +3, including nesting penalty of 2, nesting level increased to 3
  545 |       if (loadedCount == 0) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:549:9: note: +1, nesting level increased to 3
  549 |       } else {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:552:9: note: +4, including nesting penalty of 3, nesting level increased to 4
  552 |         if (kdTreeColorDB.build(colorPoints)) {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:569:11: note: +1, nesting level increased to 4
  569 |         } else {
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:576:7: note: +1, nesting level increased to 2
  576 |     } else {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:591:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  591 |   if (!file) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:595:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  595 |     if (!file) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:600:5: note: +1, nesting level increased to 1
  600 |   } else {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:608:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  608 |   if (fileSize == 0) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:614:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  614 |   if (fileSize > 10 * 1024 * BYTES_PER_KB) {  // 10MB limit
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:399:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  399 |   Logger::info("=== Starting binary color database load process ===");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:400:3: warning: variable 'startTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  400 |   unsigned long startTime = millis();  // Track load time
      |   ^
      |                 const 
G:\finalcolorwithcalibration\src\main.cpp:400:29: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  400 |   unsigned long startTime = millis();  // Track load time
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:400:29: warning: no header providing "millis" is directly included [misc-include-cleaner]
   25 |   unsigned long startTime = millis();  // Track load time
      |                             ^
G:\finalcolorwithcalibration\src\main.cpp:403:3: warning: variable 'freeHeap' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  403 |   size_t freeHeap = esp_get_free_heap_size();
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:403:21: warning: 'esp_get_free_heap_size' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  403 |   size_t freeHeap = esp_get_free_heap_size();
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_system.h:108:10: note: resolves to this declaration
  108 | uint32_t esp_get_free_heap_size(void);
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:403:21: warning: no header providing "esp_get_free_heap_size" is directly included [misc-include-cleaner]
   25 |   size_t freeHeap = esp_get_free_heap_size();
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:404:3: warning: variable 'freePsram' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  404 |   size_t freePsram = psramFound() ? ESP.getFreePsram() : 0;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:404:22: warning: 'psramFound' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  404 |   size_t freePsram = psramFound() ? ESP.getFreePsram() : 0;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-psram.h:34:6: note: resolves to this declaration
   34 | bool psramFound();
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:404:22: warning: no header providing "psramFound" is directly included [misc-include-cleaner]
   25 |   size_t freePsram = psramFound() ? ESP.getFreePsram() : 0;
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:404:37: warning: no header providing "ESP" is directly included [misc-include-cleaner]
   24 |   size_t freePsram = psramFound() ? ESP.getFreePsram() : 0;
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:406:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  406 |   Logger::info("Free heap before loading: " + String(freeHeap / BYTES_PER_KB) + " KB");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:406:45: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  406 |   Logger::info("Free heap before loading: " + String(freeHeap / BYTES_PER_KB) + " KB");
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:406:79: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  406 |   Logger::info("Free heap before loading: " + String(freeHeap / BYTES_PER_KB) + " KB");
      |                                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:407:7: warning: 'psramFound' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  407 |   if (psramFound()) {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-psram.h:34:6: note: resolves to this declaration
   34 | bool psramFound();
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:408:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  408 |     Logger::info("Free PSRAM before loading: " + String(freePsram / BYTES_PER_KB) + " KB");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:408:48: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  408 |     Logger::info("Free PSRAM before loading: " + String(freePsram / BYTES_PER_KB) + " KB");
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:408:83: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  408 |     Logger::info("Free PSRAM before loading: " + String(freePsram / BYTES_PER_KB) + " KB");
      |                                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:411:22: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  411 |     if (freePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB)) {
      |                      ^
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^
G:\finalcolorwithcalibration\src\main.cpp:411:22: note: make conversion explicit to silence this warning
  411 |     if (freePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB)) {
      |                      ^                                    
      |                      static_cast<size_t>(                 )
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^
G:\finalcolorwithcalibration\src\main.cpp:411:22: note: perform multiplication in a wider type
  411 |     if (freePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB)) {
      |                      ^
      |                      static_cast<long long>( )
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^~~~
G:\finalcolorwithcalibration\src\main.cpp:412:7: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  412 |       Logger::warn("Low PSRAM detected (" + String(freePsram / BYTES_PER_KB) + " KB < " +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:412:43: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  412 |       Logger::warn("Low PSRAM detected (" + String(freePsram / BYTES_PER_KB) + " KB < " +
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:412:78: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  412 |       Logger::warn("Low PSRAM detected (" + String(freePsram / BYTES_PER_KB) + " KB < " +
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:412:89: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  412 |       Logger::warn("Low PSRAM detected (" + String(freePsram / BYTES_PER_KB) + " KB < " +
      |                                                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:413:51: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  413 |                    String(PSRAM_SAFETY_MARGIN_KB) + " KB safety margin)");
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:414:7: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  414 |       Logger::warn("KD-tree will be disabled to conserve memory");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:418:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  418 |     Logger::error("PSRAM not available - using fallback color database");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:420:12: warning: 'loadFallbackColors' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  420 |     return loadFallbackColors();
      |            ^
G:\finalcolorwithcalibration\src\main.cpp:363:6: note: resolves to this declaration
  363 | bool loadFallbackColors() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:423:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  423 |   Logger::info("Memory check complete, proceeding with binary file loading...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:426:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  426 |   Logger::info("Attempting to open binary color database: /dulux.bin");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:428:5: warning: variable 'loadTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  428 |     unsigned long loadTime = millis() - startTime;
      |     ^
      |                   const 
G:\finalcolorwithcalibration\src\main.cpp:428:30: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  428 |     unsigned long loadTime = millis() - startTime;
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:429:5: warning: variable 'colorCount' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  429 |     size_t colorCount = simpleColorDB.getColorCount();
      |     ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:431:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  431 |     Logger::info("Binary color database opened successfully!");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:432:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  432 |     Logger::info("Colors available: " + String(colorCount));
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:432:39: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  432 |     Logger::info("Colors available: " + String(colorCount));
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:433:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  433 |     Logger::info("Open time: " + String(loadTime) + "ms");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:433:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  433 |     Logger::info("Open time: " + String(loadTime) + "ms");
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:433:51: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  433 |     Logger::info("Open time: " + String(loadTime) + "ms");
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:434:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  434 |     Logger::info("PSRAM free after open: " + String(ESP.getFreePsram() / BYTES_PER_KB) + " KB");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:434:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  434 |     Logger::info("PSRAM free after open: " + String(ESP.getFreePsram() / BYTES_PER_KB) + " KB");
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:434:88: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  434 |     Logger::info("PSRAM free after open: " + String(ESP.getFreePsram() / BYTES_PER_KB) + " KB");
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:440:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  440 |       Logger::info("Small database detected (" + String(colorCount) + " colors ├óΓÇ░┬ñ 1000)");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:440:48: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  440 |       Logger::info("Small database detected (" + String(colorCount) + " colors ├óΓÇ░┬ñ 1000)");
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:440:69: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  440 |       Logger::info("Small database detected (" + String(colorCount) + " colors ├óΓÇ░┬ñ 1000)");
      |                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:441:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  441 |       Logger::info(
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:445:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  445 |       Logger::info("Large database detected (" + String(colorCount) + " colors > 1000)");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:445:48: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  445 |       Logger::info("Large database detected (" + String(colorCount) + " colors > 1000)");
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:445:69: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  445 |       Logger::info("Large database detected (" + String(colorCount) + " colors > 1000)");
      |                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:446:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  446 |       Logger::info("KD-tree will provide significant search speed improvements");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:455:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  455 |       Logger::info("Building lightweight KD-tree for optimized color search...");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:456:7: warning: variable 'kdStartTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  456 |       unsigned long kdStartTime = millis();
      |       ^
      |                     const 
G:\finalcolorwithcalibration\src\main.cpp:456:35: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  456 |       unsigned long kdStartTime = millis();
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:458:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  458 |       Logger::info("Loading " + String(colorCount) + " colors into KD-tree...");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:458:31: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  458 |       Logger::info("Loading " + String(colorCount) + " colors into KD-tree...");
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:458:52: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  458 |       Logger::info("Loading " + String(colorCount) + " colors into KD-tree...");
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:461:7: warning: variable 'heapBeforeKd' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  461 |       size_t heapBeforeKd = ESP.getFreeHeap();
      |       ^
      |              const 
G:\finalcolorwithcalibration\src\main.cpp:462:7: warning: variable 'psramBeforeKd' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  462 |       size_t psramBeforeKd = ESP.getFreePsram();
      |       ^
      |              const 
G:\finalcolorwithcalibration\src\main.cpp:463:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  463 |       Logger::info("Memory before KD-tree: Heap=" + String(heapBeforeKd / BYTES_PER_KB) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:463:51: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  463 |       Logger::info("Memory before KD-tree: Heap=" + String(heapBeforeKd / BYTES_PER_KB) +
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:463:89: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  463 |       Logger::info("Memory before KD-tree: Heap=" + String(heapBeforeKd / BYTES_PER_KB) +
      |                                                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:464:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  464 |                    " KB, PSRAM=" + String(psramBeforeKd / BYTES_PER_KB) + " KB");
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:464:73: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  464 |                    " KB, PSRAM=" + String(psramBeforeKd / BYTES_PER_KB) + " KB");
      |                                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:468:9: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  468 |         Logger::warn("Very large color dataset detected (" + String(colorCount) + " colors)");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:468:60: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  468 |         Logger::warn("Very large color dataset detected (" + String(colorCount) + " colors)");
      |                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:468:81: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  468 |         Logger::warn("Very large color dataset detected (" + String(colorCount) + " colors)");
      |                                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:469:9: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  469 |         Logger::warn(
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:476:9: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  476 |         Logger::warn("Limiting KD-tree to " + String(effectiveColorCount) + " colors (from " +
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:476:45: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  476 |         Logger::warn("Limiting KD-tree to " + String(effectiveColorCount) + " colors (from " +
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:476:75: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  476 |         Logger::warn("Limiting KD-tree to " + String(effectiveColorCount) + " colors (from " +
      |                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:476:94: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  476 |         Logger::warn("Limiting KD-tree to " + String(effectiveColorCount) + " colors (from " +
      |                                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:477:41: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  477 |                      String(colorCount) + ") due to KDTREE_MAX_COLORS setting");
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:486:7: warning: variable 'loadStartTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  486 |       unsigned long loadStartTime = millis();
      |       ^
      |                     const 
G:\finalcolorwithcalibration\src\main.cpp:486:37: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  486 |       unsigned long loadStartTime = millis();
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:487:27: warning: invalid case style for constant 'maxLoadTime' [readability-identifier-naming]
  487 |       const unsigned long maxLoadTime = KDTREE_LOAD_TIMEOUT_MS;  // Configurable timeout for loading
      |                           ^~~~~~~~~~~
      |                           MAX_LOAD_TIME
  488 | 
  489 |       for (size_t i = 0; i < effectiveColorCount; i++) {
  490 |         // Check for timeout during loading
  491 |         if (millis() - loadStartTime > maxLoadTime) {
      |                                        ~~~~~~~~~~~
      |                                        MAX_LOAD_TIME
G:\finalcolorwithcalibration\src\main.cpp:491:13: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  491 |         if (millis() - loadStartTime > maxLoadTime) {
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:492:11: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  492 |           Logger::warn("Color loading timeout after " + String((millis() - loadStartTime) / 1000) +
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:492:55: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  492 |           Logger::warn("Color loading timeout after " + String((millis() - loadStartTime) / 1000) +
      |                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:492:65: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  492 |           Logger::warn("Color loading timeout after " + String((millis() - loadStartTime) / 1000) +
      |                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:492:99: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  492 |           Logger::warn("Color loading timeout after " + String((millis() - loadStartTime) / 1000) +
      |                                                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:494:11: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  494 |           Logger::warn("Loaded " + String(loadedCount) + " of " + String(effectiveColorCount) +
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:494:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  494 |           Logger::warn("Loaded " + String(loadedCount) + " of " + String(effectiveColorCount) +
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:494:56: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  494 |           Logger::warn("Loaded " + String(loadedCount) + " of " + String(effectiveColorCount) +
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:494:65: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  494 |           Logger::warn("Loaded " + String(loadedCount) + " of " + String(effectiveColorCount) +
      |                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:494:95: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  494 |           Logger::warn("Loaded " + String(loadedCount) + " of " + String(effectiveColorCount) +
      |                                                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:499:9: warning: uninitialized record type: 'color' [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  499 |         SimpleColor color;
      |         ^                
      |                          {}
G:\finalcolorwithcalibration\src\main.cpp:507:13: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             Logger::info("Loaded " + String(i + 1) + "/" + String(effectiveColorCount) + " colors");
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:507:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             Logger::info("Loaded " + String(i + 1) + "/" + String(effectiveColorCount) + " colors");
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:507:52: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             Logger::info("Loaded " + String(i + 1) + "/" + String(effectiveColorCount) + " colors");
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:507:58: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             Logger::info("Loaded " + String(i + 1) + "/" + String(effectiveColorCount) + " colors");
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:507:88: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  507 |             Logger::info("Loaded " + String(i + 1) + "/" + String(effectiveColorCount) + " colors");
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:510:13: warning: variable 'currentFreeHeap' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  510 |             size_t currentFreeHeap = ESP.getFreeHeap();
      |             ^
      |                    const 
G:\finalcolorwithcalibration\src\main.cpp:511:13: warning: variable 'currentFreePsram' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  511 |             size_t currentFreePsram = ESP.getFreePsram();
      |             ^
      |                    const 
G:\finalcolorwithcalibration\src\main.cpp:512:13: warning: variable 'elapsedTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  512 |             unsigned long elapsedTime = millis() - loadStartTime;
      |             ^
      |                           const 
G:\finalcolorwithcalibration\src\main.cpp:512:41: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  512 |             unsigned long elapsedTime = millis() - loadStartTime;
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:514:13: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  514 |             Logger::info("Memory: Heap=" + String(currentFreeHeap / BYTES_PER_KB) +
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:514:42: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  514 |             Logger::info("Memory: Heap=" + String(currentFreeHeap / BYTES_PER_KB) +
      |                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:514:83: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  514 |             Logger::info("Memory: Heap=" + String(currentFreeHeap / BYTES_PER_KB) +
      |                                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:515:40: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  515 |                          " KB, PSRAM=" + String(currentFreePsram / BYTES_PER_KB) +
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:515:82: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  515 |                          " KB, PSRAM=" + String(currentFreePsram / BYTES_PER_KB) +
      |                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:516:39: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  516 |                          " KB, Time=" + String(elapsedTime) + "ms");
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:516:61: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  516 |                          " KB, Time=" + String(elapsedTime) + "ms");
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:520:15: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  520 |               Logger::error("Critical heap memory low (" + String(currentFreeHeap) +
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:520:58: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  520 |               Logger::error("Critical heap memory low (" + String(currentFreeHeap) +
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:520:84: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  520 |               Logger::error("Critical heap memory low (" + String(currentFreeHeap) +
      |                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:522:15: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  522 |               Logger::error(
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:528:15: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  528 |               Logger::warn("PSRAM approaching safety margin (" + String(currentFreePsram / BYTES_PER_KB) +
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:528:64: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  528 |               Logger::warn("PSRAM approaching safety margin (" + String(currentFreePsram / BYTES_PER_KB) +
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:528:106: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  528 |               Logger::warn("PSRAM approaching safety margin (" + String(currentFreePsram / BYTES_PER_KB) +
      |                                                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:533:13: warning: 'delay' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  533 |             delay(1);
      |             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:138:6: note: resolves to this declaration
  138 | void delay(uint32_t);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:533:13: warning: no header providing "delay" is directly included [misc-include-cleaner]
  533 |             delay(1);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:538:13: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  538 |             Logger::warn("Failed to read color at index " + String(i));
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:538:59: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  538 |             Logger::warn("Failed to read color at index " + String(i));
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:543:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  543 |       Logger::info("Successfully loaded " + String(loadedCount) + " colors for KD-tree");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:543:43: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  543 |       Logger::info("Successfully loaded " + String(loadedCount) + " colors for KD-tree");
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:543:65: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  543 |       Logger::info("Successfully loaded " + String(loadedCount) + " colors for KD-tree");
      |                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:546:9: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  546 |         Logger::error("No colors loaded - skipping KD-tree construction");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:547:9: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  547 |         Logger::warn("Falling back to binary database search");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:550:9: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  550 |         Logger::info("Starting lightweight KD-tree construction...");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:553:11: warning: variable 'kdLoadTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  553 |           unsigned long kdLoadTime = millis() - kdStartTime;
      |           ^
      |                         const 
G:\finalcolorwithcalibration\src\main.cpp:553:38: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  553 |           unsigned long kdLoadTime = millis() - kdStartTime;
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:554:11: warning: variable 'memoryUsage' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  554 |           size_t memoryUsage = kdTreeColorDB.getMemoryUsage();
      |           ^
      |                  const 
G:\finalcolorwithcalibration\src\main.cpp:556:11: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  556 |           Logger::info("├░┼╕┼╜┬» KD-tree built successfully in " + String(kdLoadTime) + "ms");
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:556:66: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  556 |           Logger::info("├░┼╕┼╜┬» KD-tree built successfully in " + String(kdLoadTime) + "ms");
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:556:87: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  556 |           Logger::info("├░┼╕┼╜┬» KD-tree built successfully in " + String(kdLoadTime) + "ms");
      |                                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:557:11: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |           Logger::info("├░┼╕ΓÇ£┼á KD-tree stats: " + String(kdTreeColorDB.getNodeCount()) + " nodes, " +
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:557:52: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |           Logger::info("├░┼╕ΓÇ£┼á KD-tree stats: " + String(kdTreeColorDB.getNodeCount()) + " nodes, " +
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:557:91: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |           Logger::info("├░┼╕ΓÇ£┼á KD-tree stats: " + String(kdTreeColorDB.getNodeCount()) + " nodes, " +
      |                                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:557:104: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  557 |           Logger::info("├░┼╕ΓÇ£┼á KD-tree stats: " + String(kdTreeColorDB.getNodeCount()) + " nodes, " +
      |                                                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:558:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  558 |                        String(memoryUsage) + " bytes");
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:559:11: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  559 |           Logger::info("├░┼╕┼íΓé¼ Search performance: O(log " + String(loadedCount) + ") vs O(" +
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:559:63: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  559 |           Logger::info("├░┼╕┼íΓé¼ Search performance: O(log " + String(loadedCount) + ") vs O(" +
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:559:85: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  559 |           Logger::info("├░┼╕┼íΓé¼ Search performance: O(log " + String(loadedCount) + ") vs O(" +
      |                                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:559:97: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  559 |           Logger::info("├░┼╕┼íΓé¼ Search performance: O(log " + String(loadedCount) + ") vs O(" +
      |                                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:560:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  560 |                        String(loadedCount) + ") linear");
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:561:11: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  561 |           Logger::info("├░┼╕ΓÇÖ┬╛ PSRAM after KD-tree: " + String(ESP.getFreePsram() / BYTES_PER_KB) +
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:561:58: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  561 |           Logger::info("├░┼╕ΓÇÖ┬╛ PSRAM after KD-tree: " + String(ESP.getFreePsram() / BYTES_PER_KB) +
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:561:102: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  561 |           Logger::info("├░┼╕ΓÇÖ┬╛ PSRAM after KD-tree: " + String(ESP.getFreePsram() / BYTES_PER_KB) +
      |                                                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:566:11: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  566 |           Logger::info("├ó┼í┬í Estimated search speedup: " + String(speedupFactor, 1) +
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:566:60: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  566 |           Logger::info("├ó┼í┬í Estimated search speedup: " + String(speedupFactor, 1) +
      |                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:566:87: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  566 |           Logger::info("├ó┼í┬í Estimated search speedup: " + String(speedupFactor, 1) +
      |                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:570:11: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  570 |           Logger::error("Failed to build KD-tree - falling back to binary database only");
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:571:11: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  571 |           Logger::warn("This may indicate insufficient memory or corrupted color data");
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:577:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  577 |       Logger::info("KD-tree disabled by optimization logic - using binary database only");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:578:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  578 |       Logger::info("This provides optimal performance for current configuration");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:588:3: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  588 |   Logger::warn("Binary database loading failed, trying JSON fallback...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:589:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  589 |   Logger::info("Attempting to open /dulux.json...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:590:3: warning: no header providing "File" is directly included [misc-include-cleaner]
   24 |   File file = LittleFS.open("/dulux.json", "r");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:592:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  592 |     Logger::error("Failed to open dulux.json file, trying alternative filename...");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:593:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  593 |     Logger::info("Attempting to open /dulux_colors.json...");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:594:10: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  594 |     file = LittleFS.open("/dulux_colors.json", "r");
      |          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\libraries\FS\src\FS.h:47:7: note: resolves to this declaration
   47 | class File : public Stream
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:596:7: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  596 |       Logger::error("Failed to open any color database files - using fallback colors");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:597:14: warning: 'loadFallbackColors' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  597 |       return loadFallbackColors();
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:363:6: note: resolves to this declaration
  363 | bool loadFallbackColors() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:599:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  599 |     Logger::info("Using fallback dulux_colors.json file");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:601:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  601 |     Logger::info("dulux.json file opened successfully");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:604:3: warning: variable 'fileSize' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  604 |   size_t fileSize = file.size();
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:605:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  605 |   Logger::debug("JSON file size: " + String(fileSize) + " bytes");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:605:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  605 |   Logger::debug("JSON file size: " + String(fileSize) + " bytes");
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:605:55: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  605 |   Logger::debug("JSON file size: " + String(fileSize) + " bytes");
      |                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:609:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  609 |     Logger::error("Color database file is empty");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:611:12: warning: 'loadFallbackColors' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  611 |     return loadFallbackColors();
      |            ^
G:\finalcolorwithcalibration\src\main.cpp:363:6: note: resolves to this declaration
  363 | bool loadFallbackColors() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:614:18: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  614 |   if (fileSize > 10 * 1024 * BYTES_PER_KB) {  // 10MB limit
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:614:18: note: make conversion explicit to silence this warning
   31 |   if (fileSize > 10 * 1024 * BYTES_PER_KB) {  // 10MB limit
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~
      |                  static_cast<size_t>(    )
G:\finalcolorwithcalibration\src\main.cpp:614:18: note: perform multiplication in a wider type
  614 |   if (fileSize > 10 * 1024 * BYTES_PER_KB) {  // 10MB limit
      |                  ^~~~~~~~~
      |                  static_cast<long long>( )
G:\finalcolorwithcalibration\src\main.cpp:615:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |     Logger::error("Color database file is too large: " + String(fileSize) + " bytes");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:615:56: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |     Logger::error("Color database file is too large: " + String(fileSize) + " bytes");
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:615:75: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  615 |     Logger::error("Color database file is too large: " + String(fileSize) + " bytes");
      |                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:617:12: warning: 'loadFallbackColors' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  617 |     return loadFallbackColors();
      |            ^
G:\finalcolorwithcalibration\src\main.cpp:363:6: note: resolves to this declaration
  363 | bool loadFallbackColors() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:620:3: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  620 |   Logger::warn("JSON loading is deprecated and uses more memory. Consider using binary format.");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:621:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  621 |   Logger::info("Converting to binary format would save " + String((fileSize * 83) / PERCENTAGE_SCALE) +
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:621:58: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  621 |   Logger::info("Converting to binary format would save " + String((fileSize * 83) / PERCENTAGE_SCALE) +
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:621:103: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  621 |   Logger::info("Converting to binary format would save " + String((fileSize * 83) / PERCENTAGE_SCALE) +
      |                                                                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:625:3: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  625 |   Logger::error("JSON fallback loading not implemented in binary version - using fallback colors");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:626:10: warning: 'loadFallbackColors' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  626 |   return loadFallbackColors();
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:363:6: note: resolves to this declaration
  363 | bool loadFallbackColors() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:629:14: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  629 | static float calculateColorDistance(uint8_t r1, uint8_t g1, uint8_t b1, uint8_t r2, uint8_t g2,
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:629:14: warning: function 'calculateColorDistance' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:629:45: warning: parameter name 'r1' is too short, expected at least 3 characters [readability-identifier-length]
  629 | static float calculateColorDistance(uint8_t r1, uint8_t g1, uint8_t b1, uint8_t r2, uint8_t g2,
      |                                             ^
G:\finalcolorwithcalibration\src\main.cpp:629:57: warning: parameter name 'g1' is too short, expected at least 3 characters [readability-identifier-length]
  629 | static float calculateColorDistance(uint8_t r1, uint8_t g1, uint8_t b1, uint8_t r2, uint8_t g2,
      |                                                         ^
G:\finalcolorwithcalibration\src\main.cpp:629:69: warning: parameter name 'b1' is too short, expected at least 3 characters [readability-identifier-length]
  629 | static float calculateColorDistance(uint8_t r1, uint8_t g1, uint8_t b1, uint8_t r2, uint8_t g2,
      |                                                                     ^
G:\finalcolorwithcalibration\src\main.cpp:629:81: warning: parameter name 'r2' is too short, expected at least 3 characters [readability-identifier-length]
  629 | static float calculateColorDistance(uint8_t r1, uint8_t g1, uint8_t b1, uint8_t r2, uint8_t g2,
      |                                                                                 ^
G:\finalcolorwithcalibration\src\main.cpp:629:93: warning: parameter name 'g2' is too short, expected at least 3 characters [readability-identifier-length]
  629 | static float calculateColorDistance(uint8_t r1, uint8_t g1, uint8_t b1, uint8_t r2, uint8_t g2,
      |                                                                                             ^
G:\finalcolorwithcalibration\src\main.cpp:630:38: warning: parameter name 'b2' is too short, expected at least 3 characters [readability-identifier-length]
  630 |                              uint8_t b2) {
      |                                      ^
G:\finalcolorwithcalibration\src\main.cpp:632:3: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  632 |   CIEDE2000::LAB lab1, lab2;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~
G:\finalcolorwithcalibration\src\main.cpp:633:3: warning: 'rgbToLAB' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  633 |   rgbToLAB(r1, g1, b1, lab1);
      |   ^
src\CIEDE2000.h:127:6: note: resolves to this declaration
  127 | void rgbToLAB(uint8_t r, uint8_t g, uint8_t b, CIEDE2000::LAB &lab);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:634:3: warning: 'rgbToLAB' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  634 |   rgbToLAB(r2, g2, b2, lab2);
      |   ^
src\CIEDE2000.h:127:6: note: resolves to this declaration
  127 | void rgbToLAB(uint8_t r, uint8_t g, uint8_t b, CIEDE2000::LAB &lab);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:637:3: warning: variable 'distance' of type 'double' can be declared 'const' [misc-const-correctness]
  637 |   double distance = CIEDE2000::CIEDE2000(lab1, lab2);
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:637:21: warning: 'CIEDE2000' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  637 |   double distance = CIEDE2000::CIEDE2000(lab1, lab2);
      |                     ^
src\CIEDE2000.h:58:8: note: resolves to this declaration
   58 | double CIEDE2000(const LAB &lab1, const LAB &lab2);
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:642:15: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  642 | static String findClosestDuluxColor(uint8_t r, uint8_t g, uint8_t b) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:642:15: warning: function 'findClosestDuluxColor' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:642:15: warning: function 'findClosestDuluxColor' has cognitive complexity of 47 (threshold 25) [readability-function-cognitive-complexity]
G:\finalcolorwithcalibration\src\main.cpp:643:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  643 |   if (settings.debugColorMatching) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:654:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  654 |   if (settings.enableKdtree && kdTreeColorDB.isBuilt()) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:654:29: note: +1
  654 |   if (settings.enableKdtree && kdTreeColorDB.isBuilt()) {
      |                             ^
G:\finalcolorwithcalibration\src\main.cpp:657:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  657 |     if (closest.index > 0) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:660:7: note: +3, including nesting penalty of 2, nesting level increased to 3
  660 |       if (simpleColorDB.getColorByIndex(closest.index, color)) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:663:9: note: +4, including nesting penalty of 3, nesting level increased to 4
  663 |         if (settings.debugColorMatching) {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:672:10: note: +1, nesting level increased to 1
  672 |   } else if (settings.enableKdtree && !kdTreeColorDB.isBuilt()) {
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:672:36: note: +1
  672 |   } else if (settings.enableKdtree && !kdTreeColorDB.isBuilt()) {
      |                                    ^
G:\finalcolorwithcalibration\src\main.cpp:679:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  679 |   if (simpleColorDB.findClosestColor(r, g, b, closestColor)) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:683:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  683 |     if (settings.debugColorMatching) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:692:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  692 |   if (fallbackColorDatabase != nullptr && fallbackColorCount > 0) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:692:40: note: +1
  692 |   if (fallbackColorDatabase != nullptr && fallbackColorCount > 0) {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:702:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  702 |     for (int i = 0; i < fallbackColorCount; i++) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:707:7: note: +3, including nesting penalty of 2, nesting level increased to 3
  707 |       if (distance < minDistance) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:713:9: note: +4, including nesting penalty of 3, nesting level increased to 4
  713 |         if (distance < VERY_SMALL_DISTANCE) {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:714:11: note: +5, including nesting penalty of 4, nesting level increased to 5
  714 |           if (settings.debugColorMatching) {
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:724:5: note: +2, including nesting penalty of 1, nesting level increased to 2
  724 |     if (settings.debugColorMatching) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:735:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  735 |   if (r > COLOR_THRESHOLD_HIGH && g > COLOR_THRESHOLD_HIGH && b > 200)
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:735:60: note: +1
  735 |   if (r > COLOR_THRESHOLD_HIGH && g > COLOR_THRESHOLD_HIGH && b > 200)
      |                                                            ^
G:\finalcolorwithcalibration\src\main.cpp:737:8: note: +1, nesting level increased to 1
  737 |   else if (r < COLOR_THRESHOLD_LOW && g < COLOR_THRESHOLD_LOW && b < 50)
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:737:63: note: +1
  737 |   else if (r < COLOR_THRESHOLD_LOW && g < COLOR_THRESHOLD_LOW && b < 50)
      |                                                               ^
G:\finalcolorwithcalibration\src\main.cpp:739:8: note: +1, nesting level increased to 1
  739 |   else if (r > g && r > b)
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:739:18: note: +1
  739 |   else if (r > g && r > b)
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:741:8: note: +1, nesting level increased to 1
  741 |   else if (g > r && g > b)
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:741:18: note: +1
  741 |   else if (g > r && g > b)
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:743:8: note: +1, nesting level increased to 1
  743 |   else if (b > r && b > g)
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:743:18: note: +1
  743 |   else if (b > r && b > g)
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:745:3: note: +1, nesting level increased to 1
  745 |   else
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:748:3: note: +1, including nesting penalty of 0, nesting level increased to 1
  748 |   if (settings.debugColorMatching) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:642:45: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
  642 | static String findClosestDuluxColor(uint8_t r, uint8_t g, uint8_t b) {
      |                                             ^
G:\finalcolorwithcalibration\src\main.cpp:642:56: warning: parameter name 'g' is too short, expected at least 3 characters [readability-identifier-length]
  642 | static String findClosestDuluxColor(uint8_t r, uint8_t g, uint8_t b) {
      |                                                        ^
G:\finalcolorwithcalibration\src\main.cpp:642:67: warning: parameter name 'b' is too short, expected at least 3 characters [readability-identifier-length]
  642 | static String findClosestDuluxColor(uint8_t r, uint8_t g, uint8_t b) {
      |                                                                   ^
G:\finalcolorwithcalibration\src\main.cpp:644:5: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |     Logger::debug("Finding closest color for RGB(" + String(r) + "," + String(g) + "," + String(b) +
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:644:52: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |     Logger::debug("Finding closest color for RGB(" + String(r) + "," + String(g) + "," + String(b) +
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:644:64: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |     Logger::debug("Finding closest color for RGB(" + String(r) + "," + String(g) + "," + String(b) +
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:644:70: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |     Logger::debug("Finding closest color for RGB(" + String(r) + "," + String(g) + "," + String(b) +
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:644:82: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |     Logger::debug("Finding closest color for RGB(" + String(r) + "," + String(g) + "," + String(b) +
      |                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:644:88: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |     Logger::debug("Finding closest color for RGB(" + String(r) + "," + String(g) + "," + String(b) +
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:644:100: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  644 |     Logger::debug("Finding closest color for RGB(" + String(r) + "," + String(g) + "," + String(b) +
      |                                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:648:3: warning: variable 'searchStartTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  648 |   unsigned long searchStartTime = micros();  // Performance monitoring
      |   ^
      |                 const 
G:\finalcolorwithcalibration\src\main.cpp:648:35: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  648 |   unsigned long searchStartTime = micros();  // Performance monitoring
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:648:35: warning: no header providing "micros" is directly included [misc-include-cleaner]
  648 |   unsigned long searchStartTime = micros();  // Performance monitoring
      |                                   ^
G:\finalcolorwithcalibration\src\main.cpp:655:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  655 |     searchMethod = "KD-Tree";
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:656:5: warning: variable 'closest' of type 'ColorPoint' can be declared 'const' [misc-const-correctness]
  656 |     ColorPoint closest = kdTreeColorDB.findNearest(r, g, b);
      |     ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:659:7: warning: uninitialized record type: 'color' [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  659 |       SimpleColor color;
      |       ^                
      |                        {}
G:\finalcolorwithcalibration\src\main.cpp:661:16: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |         result = String(color.name) + " (" + String(color.code) + ")";
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:661:25: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  661 |         result = String(color.name) + " (" + String(color.code) + ")";
      |                         ^
G:\finalcolorwithcalibration\src\main.cpp:661:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |         result = String(color.name) + " (" + String(color.code) + ")";
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:661:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |         result = String(color.name) + " (" + String(color.code) + ")";
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:661:53: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  661 |         result = String(color.name) + " (" + String(color.code) + ")";
      |                                                     ^
G:\finalcolorwithcalibration\src\main.cpp:661:65: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  661 |         result = String(color.name) + " (" + String(color.code) + ")";
      |                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:664:11: warning: variable 'searchTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  664 |           unsigned long searchTime = micros() - searchStartTime;
      |           ^
      |                         const 
G:\finalcolorwithcalibration\src\main.cpp:664:38: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  664 |           unsigned long searchTime = micros() - searchStartTime;
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:665:11: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  665 |           Logger::debug("KD-tree search completed in " + String(searchTime) +
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:665:56: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  665 |           Logger::debug("KD-tree search completed in " + String(searchTime) +
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:665:77: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  665 |           Logger::debug("KD-tree search completed in " + String(searchTime) +
      |                                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:666:47: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  666 |                         "├Ä┬╝s. Best match: " + result);
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:671:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  671 |     Logger::warn("KD-tree search failed, falling back to binary database");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:673:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  673 |     Logger::warn("KD-tree enabled but not built - check initialization");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:678:3: warning: uninitialized record type: 'closestColor' [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  678 |   SimpleColor closestColor;
      |   ^                       
      |                           {}
G:\finalcolorwithcalibration\src\main.cpp:680:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  680 |     searchMethod = "Binary DB";
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:681:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  681 |     result = String(closestColor.name) + " (" + String(closestColor.code) + ")";
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:681:21: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  681 |     result = String(closestColor.name) + " (" + String(closestColor.code) + ")";
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:681:40: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  681 |     result = String(closestColor.name) + " (" + String(closestColor.code) + ")";
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:681:47: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  681 |     result = String(closestColor.name) + " (" + String(closestColor.code) + ")";
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:681:56: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
  681 |     result = String(closestColor.name) + " (" + String(closestColor.code) + ")";
      |                                                        ^
G:\finalcolorwithcalibration\src\main.cpp:681:75: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  681 |     result = String(closestColor.name) + " (" + String(closestColor.code) + ")";
      |                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:684:7: warning: variable 'searchTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  684 |       unsigned long searchTime = micros() - searchStartTime;
      |       ^
      |                     const 
G:\finalcolorwithcalibration\src\main.cpp:684:34: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  684 |       unsigned long searchTime = micros() - searchStartTime;
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:685:7: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  685 |       Logger::debug("Binary search completed in " + String(searchTime) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:685:51: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  685 |       Logger::debug("Binary search completed in " + String(searchTime) +
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:685:72: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  685 |       Logger::debug("Binary search completed in " + String(searchTime) +
      |                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:686:43: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  686 |                     "├Ä┬╝s. Best match: " + result);
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:693:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  693 |     searchMethod = "Fallback DB";
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:694:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  694 |     Logger::warn("Using slow fallback color database with " + String(fallbackColorCount) +
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:694:61: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  694 |     Logger::warn("Using slow fallback color database with " + String(fallbackColorCount) +
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:694:90: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  694 |     Logger::warn("Using slow fallback color database with " + String(fallbackColorCount) +
      |                                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:703:7: warning: variable 'distance' of type 'float' can be declared 'const' [misc-const-correctness]
  703 |       float distance =
      |       ^
      |             const 
G:\finalcolorwithcalibration\src\main.cpp:704:11: warning: 'calculateColorDistance' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  704 |           calculateColorDistance(r, g, b, fallbackColorDatabase[i].r, fallbackColorDatabase[i].g,
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:629:14: note: resolves to this declaration
  629 | static float calculateColorDistance(uint8_t r1, uint8_t g1, uint8_t b1, uint8_t r2, uint8_t g2,
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:704:43: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  704 |           calculateColorDistance(r, g, b, fallbackColorDatabase[i].r, fallbackColorDatabase[i].g,
      |                                           ^
G:\finalcolorwithcalibration\src\main.cpp:704:71: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  704 |           calculateColorDistance(r, g, b, fallbackColorDatabase[i].r, fallbackColorDatabase[i].g,
      |                                                                       ^
G:\finalcolorwithcalibration\src\main.cpp:705:34: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  705 |                                  fallbackColorDatabase[i].b);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:710:19: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  710 |         bestMatch = fallbackColorDatabase[i].name + " (" + fallbackColorDatabase[i].code + ")";
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:710:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  710 |         bestMatch = fallbackColorDatabase[i].name + " (" + fallbackColorDatabase[i].code + ")";
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:710:51: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  710 |         bestMatch = fallbackColorDatabase[i].name + " (" + fallbackColorDatabase[i].code + ")";
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:710:58: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  710 |         bestMatch = fallbackColorDatabase[i].name + " (" + fallbackColorDatabase[i].code + ")";
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:710:60: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
  710 |         bestMatch = fallbackColorDatabase[i].name + " (" + fallbackColorDatabase[i].code + ")";
      |                                                            ^
G:\finalcolorwithcalibration\src\main.cpp:710:90: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  710 |         bestMatch = fallbackColorDatabase[i].name + " (" + fallbackColorDatabase[i].code + ")";
      |                                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:715:13: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  715 |             Logger::debug("Perfect match found: " + bestMatch);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:715:51: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  715 |             Logger::debug("Perfect match found: " + bestMatch);
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:722:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  722 |     result = bestMatch;
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:725:7: warning: variable 'searchTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  725 |       unsigned long searchTime = micros() - searchStartTime;
      |       ^
      |                     const 
G:\finalcolorwithcalibration\src\main.cpp:725:34: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  725 |       unsigned long searchTime = micros() - searchStartTime;
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:726:7: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  726 |       Logger::debug("Fallback search completed in " + String(searchTime) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:726:53: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  726 |       Logger::debug("Fallback search completed in " + String(searchTime) +
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:726:74: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  726 |       Logger::debug("Fallback search completed in " + String(searchTime) +
      |                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:727:43: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  727 |                     "├Ä┬╝s. Best match: " + result + " (distance: " + String(minDistance) + ")");
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:727:52: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  727 |                     "├Ä┬╝s. Best match: " + result + " (distance: " + String(minDistance) + ")");
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:727:69: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  727 |                     "├Ä┬╝s. Best match: " + result + " (distance: " + String(minDistance) + ")");
      |                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:727:91: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  727 |                     "├Ä┬╝s. Best match: " + result + " (distance: " + String(minDistance) + ")");
      |                                                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:733:16: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  733 |   searchMethod = "Basic Classification";
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:734:3: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  734 |   Logger::warn("No color database available, using basic color classification");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:735:71: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  735 |   if (r > COLOR_THRESHOLD_HIGH && g > COLOR_THRESHOLD_HIGH && b > 200)
      |                                                                       ^
      |                                                                        {
  736 |     result = "Light Color";
  737 |   else if (r < COLOR_THRESHOLD_LOW && g < COLOR_THRESHOLD_LOW && b < 50)
      |   } 
G:\finalcolorwithcalibration\src\main.cpp:736:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  736 |     result = "Light Color";
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:737:73: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  737 |   else if (r < COLOR_THRESHOLD_LOW && g < COLOR_THRESHOLD_LOW && b < 50)
      |                                                                         ^
      |                                                                          {
  738 |     result = "Dark Color";
  739 |   else if (r > g && r > b)
      |   } 
G:\finalcolorwithcalibration\src\main.cpp:738:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  738 |     result = "Dark Color";
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:739:27: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  739 |   else if (r > g && r > b)
      |                           ^
      |                            {
  740 |     result = "Red Tone";
  741 |   else if (g > r && g > b)
      |   } 
G:\finalcolorwithcalibration\src\main.cpp:740:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  740 |     result = "Red Tone";
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:741:27: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  741 |   else if (g > r && g > b)
      |                           ^
      |                            {
  742 |     result = "Green Tone";
  743 |   else if (b > r && b > g)
      |   } 
G:\finalcolorwithcalibration\src\main.cpp:742:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  742 |     result = "Green Tone";
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:743:27: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  743 |   else if (b > r && b > g)
      |                           ^
      |                            {
  744 |     result = "Blue Tone";
  745 |   else
      |   } 
G:\finalcolorwithcalibration\src\main.cpp:744:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  744 |     result = "Blue Tone";
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:745:7: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
  745 |   else
      |       ^
      |        {
  746 |     result = "Mixed Color";
      |                            
G:\finalcolorwithcalibration\src\main.cpp:746:12: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  746 |     result = "Mixed Color";
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:749:5: warning: variable 'searchTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
  749 |     unsigned long searchTime = micros() - searchStartTime;
      |     ^
      |                   const 
G:\finalcolorwithcalibration\src\main.cpp:749:32: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  749 |     unsigned long searchTime = micros() - searchStartTime;
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:750:5: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  750 |     Logger::debug(searchMethod + " completed in " + String(searchTime) + "├Ä┬╝s. Result: " + result);
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:750:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  750 |     Logger::debug(searchMethod + " completed in " + String(searchTime) + "├Ä┬╝s. Result: " + result);
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:750:51: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  750 |     Logger::debug(searchMethod + " completed in " + String(searchTime) + "├Ä┬╝s. Result: " + result);
      |                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:750:72: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  750 |     Logger::debug(searchMethod + " completed in " + String(searchTime) + "├Ä┬╝s. Result: " + result);
      |                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:750:92: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  750 |     Logger::debug(searchMethod + " completed in " + String(searchTime) + "├Ä┬╝s. Result: " + result);
      |                                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:757:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  757 | static void analyzeSystemPerformance() {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:757:13: warning: function 'analyzeSystemPerformance' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:758:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  758 |   Logger::info("=== SYSTEM PERFORMANCE ANALYSIS ===");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:761:3: warning: variable 'totalHeap' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  761 |   size_t totalHeap = ESP.getHeapSize();
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:762:3: warning: variable 'freeHeap' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  762 |   size_t freeHeap = ESP.getFreeHeap();
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:763:3: warning: variable 'totalPsram' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  763 |   size_t totalPsram = psramFound() ? ESP.getPsramSize() : 0;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:763:23: warning: 'psramFound' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  763 |   size_t totalPsram = psramFound() ? ESP.getPsramSize() : 0;
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-psram.h:34:6: note: resolves to this declaration
   34 | bool psramFound();
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:764:3: warning: variable 'freePsram' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  764 |   size_t freePsram = psramFound() ? ESP.getFreePsram() : 0;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:764:22: warning: 'psramFound' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  764 |   size_t freePsram = psramFound() ? ESP.getFreePsram() : 0;
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-psram.h:34:6: note: resolves to this declaration
   34 | bool psramFound();
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:766:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  766 |   Logger::info("├░┼╕ΓÇÖ┬╛ Memory Status:");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:767:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  767 |   Logger::info("  Heap: " + String(freeHeap / BYTES_PER_KB) + " KB free / " + String(totalHeap / BYTES_PER_KB) +
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:767:27: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  767 |   Logger::info("  Heap: " + String(freeHeap / BYTES_PER_KB) + " KB free / " + String(totalHeap / BYTES_PER_KB) +
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:767:61: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  767 |   Logger::info("  Heap: " + String(freeHeap / BYTES_PER_KB) + " KB free / " + String(totalHeap / BYTES_PER_KB) +
      |                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:767:77: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  767 |   Logger::info("  Heap: " + String(freeHeap / BYTES_PER_KB) + " KB free / " + String(totalHeap / BYTES_PER_KB) +
      |                                                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:767:112: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  767 |   Logger::info("  Heap: " + String(freeHeap / BYTES_PER_KB) + " KB free / " + String(totalHeap / BYTES_PER_KB) +
      |                                                                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:768:30: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  768 |                " KB total (" + String((freeHeap * PERCENTAGE_SCALE) / totalHeap) + "% free)");
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:768:82: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  768 |                " KB total (" + String((freeHeap * PERCENTAGE_SCALE) / totalHeap) + "% free)");
      |                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:769:7: warning: 'psramFound' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  769 |   if (psramFound()) {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-psram.h:34:6: note: resolves to this declaration
   34 | bool psramFound();
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:770:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  770 |     Logger::info("  PSRAM: " + String(freePsram / BYTES_PER_KB) + " KB free / " +
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:770:30: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  770 |     Logger::info("  PSRAM: " + String(freePsram / BYTES_PER_KB) + " KB free / " +
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:770:65: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  770 |     Logger::info("  PSRAM: " + String(freePsram / BYTES_PER_KB) + " KB free / " +
      |                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:770:81: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  770 |     Logger::info("  PSRAM: " + String(freePsram / BYTES_PER_KB) + " KB free / " +
      |                                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:771:52: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  771 |                  String(totalPsram / BYTES_PER_KB) + " KB total (" +
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:771:68: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  771 |                  String(totalPsram / BYTES_PER_KB) + " KB total (" +
      |                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:772:70: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  772 |                  String((freePsram * PERCENTAGE_SCALE) / totalPsram) + "% free)");
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:774:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  774 |     Logger::warn("  PSRAM: Not available - performance will be limited");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:778:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  778 |   Logger::info("├░┼╕┼╜┬¿ Color Database Performance:");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:779:3: warning: variable 'colorCount' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
  779 |   size_t colorCount = simpleColorDB.isOpen() ? simpleColorDB.getColorCount() : fallbackColorCount;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:780:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  780 |   Logger::info("  Colors loaded: " + String(colorCount));
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:780:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  780 |   Logger::info("  Colors loaded: " + String(colorCount));
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:788:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  788 |     activeMethod = "KD-Tree Search";
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:790:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  790 |     performanceNote = "O(log " + String(colorCount) + ") ├óΓÇ░╦å " + String(logN, 1) + " operations";
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:790:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  790 |     performanceNote = "O(log " + String(colorCount) + ") ├óΓÇ░╦å " + String(logN, 1) + " operations";
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:790:53: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  790 |     performanceNote = "O(log " + String(colorCount) + ") ├óΓÇ░╦å " + String(logN, 1) + " operations";
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:790:68: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  790 |     performanceNote = "O(log " + String(colorCount) + ") ├óΓÇ░╦å " + String(logN, 1) + " operations";
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:790:86: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  790 |     performanceNote = "O(log " + String(colorCount) + ") ├óΓÇ░╦å " + String(logN, 1) + " operations";
      |                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:794:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  794 |     activeMethod = "Binary Database Search";
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:795:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  795 |     performanceNote = "O(" + String(colorCount) + ") optimized operations";
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:795:28: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  795 |     performanceNote = "O(" + String(colorCount) + ") optimized operations";
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:795:49: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  795 |     performanceNote = "O(" + String(colorCount) + ") optimized operations";
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:797:18: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  797 |     activeMethod = "Fallback Database Search";
      |                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:798:21: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  798 |     performanceNote = "O(" + String(colorCount) + ") unoptimized operations";
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:798:28: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  798 |     performanceNote = "O(" + String(colorCount) + ") unoptimized operations";
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:798:49: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  798 |     performanceNote = "O(" + String(colorCount) + ") unoptimized operations";
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:801:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  801 |   Logger::info("  Active search method: " + activeMethod);
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:801:43: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  801 |   Logger::info("  Active search method: " + activeMethod);
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:802:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  802 |   Logger::info("  Performance complexity: " + performanceNote);
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:802:45: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  802 |   Logger::info("  Performance complexity: " + performanceNote);
      |                                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:805:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  805 |   Logger::info("├░┼╕┼íΓé¼ Performance Recommendations:");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:808:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  808 |     Logger::info("  ├ó┼ôΓÇª Small database - KD-tree overhead avoided (optimal)");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:810:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  810 |     Logger::warn("  ├ó┼í┬á├»┬╕<U+008F> Large database without KD-tree - consider enabling for " +
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:810:91: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  810 |     Logger::warn("  ├ó┼í┬á├»┬╕<U+008F> Large database without KD-tree - consider enabling for " +
      |                                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:811:66: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  811 |                  String((float)colorCount / log2(colorCount), 1) + "x speedup");
      |                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:813:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  813 |     Logger::info("  ├ó┼ôΓÇª Large database with KD-tree - optimal performance achieved");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:816:20: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  816 |   if (freePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB)) {
      |                    ^
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^
G:\finalcolorwithcalibration\src\main.cpp:816:20: note: make conversion explicit to silence this warning
  816 |   if (freePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB)) {
      |                    ^                                    
      |                    static_cast<size_t>(                 )
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^
G:\finalcolorwithcalibration\src\main.cpp:816:20: note: perform multiplication in a wider type
  816 |   if (freePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB)) {
      |                    ^
      |                    static_cast<long long>( )
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^~~~
G:\finalcolorwithcalibration\src\main.cpp:817:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  817 |     Logger::warn("  ├ó┼í┬á├»┬╕<U+008F> Low PSRAM - increase safety margin or reduce database size");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:819:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  819 |     Logger::info("  ├ó┼ôΓÇª PSRAM adequate for current configuration");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:823:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  823 |     Logger::warn("  ├ó┼í┬á├»┬╕<U+008F> Low heap memory - monitor for stability issues");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:825:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  825 |     Logger::info("  ├ó┼ôΓÇª Heap memory sufficient");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:828:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  828 |   Logger::info("=====================================");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:832:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  832 | static void cleanupColorDatabase() {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:832:13: warning: function 'cleanupColorDatabase' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:833:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  833 |   Logger::debug("Cleaning up color database memory...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:837:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  837 |   Logger::debug("Simple binary color database closed");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:841:5: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  841 |     Logger::debug("Cleaning up fallback color database memory...");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:842:5: warning: 'heap_caps_free' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  842 |     heap_caps_free(fallbackColorDatabase);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\heap\include\esp_heap_caps.h:79:6: note: resolves to this declaration
   79 | void heap_caps_free( void *ptr);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:845:5: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  845 |     Logger::debug("Fallback color database memory cleaned up");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:850:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  850 | struct FastColorData {
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:858:8: warning: constructor does not initialize these fields: fast, colorNameTimestamp, colorSearchDuration [cppcoreguidelines-pro-type-member-init,hicpp-member-init]
  858 | struct FullColorData {
      |        ^
  859 |   FastColorData fast;
      |                     
      |                     {}
  860 |   String colorName;
  861 |   unsigned long colorNameTimestamp;
      |                                   
      |                                   {}
  862 |   unsigned long colorSearchDuration;  // Time taken for color search in microseconds
      |                                    
      |                                    {}
G:\finalcolorwithcalibration\src\main.cpp:858:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:863:3: warning: initialization of 'currentColorData' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  863 | } currentColorData;
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:858:8: note: possibly throwing constructor declared here
  858 | struct FullColorData {
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:863:3: warning: variable 'currentColorData' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  863 | } currentColorData;
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:863:3: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:863:3: warning: variable 'currentColorData' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]
  858 | struct FullColorData {
      | static 
  859 |   FastColorData fast;
  860 |   String colorName;
  861 |   unsigned long colorNameTimestamp;
  862 |   unsigned long colorSearchDuration;  // Time taken for color search in microseconds
  863 | } currentColorData;
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:866:8: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  866 | struct ColorNameLookup {
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:873:3: warning: initialization of 'colorLookup' with static storage duration may throw an exception that cannot be caught [cert-err58-cpp]
  873 | } colorLookup;
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:866:8: note: possibly throwing constructor declared here
  866 | struct ColorNameLookup {
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:873:3: warning: variable 'colorLookup' is non-const and globally accessible, consider making it const [cppcoreguidelines-avoid-non-const-global-variables]
  873 | } colorLookup;
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:873:3: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
G:\finalcolorwithcalibration\src\main.cpp:873:3: warning: variable 'colorLookup' can be made static or moved into an anonymous namespace to enforce internal linkage [misc-use-internal-linkage]
  866 | struct ColorNameLookup {
      | static 
  867 |   bool inProgress = false;
  868 |   unsigned long lastLookupTime = 0;
  869 |   unsigned long lookupInterval = 2000;  // Look up color name every 2 seconds
  870 |   uint8_t lastR = 0, lastG = 0, lastB = 0;
  871 |   bool needsUpdate = true;
  872 |   String currentColorName = "Initializing...";
  873 | } colorLookup;
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:876:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  876 | static void handleRoot(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:876:13: warning: function 'handleRoot' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:877:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  877 |   Logger::debug("Handling root path request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:880:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  880 |     Logger::error("index.html file not found");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:884:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  884 |   Logger::debug("Serving index.html");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:887:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  887 |   Logger::debug("index.html served successfully");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:891:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  891 | static void handleCSS(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:891:13: warning: function 'handleCSS' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:892:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  892 |   Logger::debug("Handling CSS file request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:895:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  895 |     Logger::error("index.css file not found");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:899:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  899 |   Logger::debug("Serving index.css");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:902:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  902 |   Logger::debug("index.css served successfully");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:906:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  906 | static void handleJS(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:906:13: warning: function 'handleJS' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:907:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  907 |   Logger::debug("Handling JavaScript file request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:910:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  910 |     Logger::error("index.js file not found");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:914:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  914 |   Logger::debug("Serving index.js");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:917:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  917 |   Logger::debug("index.js served successfully");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:921:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  921 | static void handleColorAPI(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:921:13: warning: function 'handleColorAPI' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:922:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  922 |   Logger::debug("Handling color API request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:924:3: warning: variable 'doc' of type 'JsonDocument' can be declared 'const' [misc-const-correctness]
  924 |   JsonDocument doc;  // ArduinoJson v7 syntax
      |   ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:924:3: warning: no header providing "ArduinoJson::JsonDocument" is directly included [misc-include-cleaner]
   26 |   JsonDocument doc;  // ArduinoJson v7 syntax
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:937:3: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
  937 |   String response;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:939:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  939 |   Logger::debug("JSON response size: " + String(response.length()));
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:939:40: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  939 |   Logger::debug("JSON response size: " + String(response.length()));
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:945:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  945 |   Logger::debug("Color API response sent successfully");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:949:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  949 | void handleFastColorAPI(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:950:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  950 |   Logger::debug("Handling fast color API request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:952:3: warning: variable 'doc' of type 'JsonDocument' can be declared 'const' [misc-const-correctness]
  952 |   JsonDocument doc;
      |   ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:964:3: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
  964 |   String response;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:971:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  971 |   Logger::debug("Fast color API response sent successfully");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:975:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
  975 | void handleColorNameAPI(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:976:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  976 |   Logger::debug("Handling color name API request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:978:3: warning: variable 'doc' of type 'JsonDocument' can be declared 'const' [misc-const-correctness]
  978 |   JsonDocument doc;
      |   ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:991:3: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
  991 |   String response;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:998:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
  998 |   Logger::debug("Color name API response sent successfully");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1002:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1002 | void handleForceColorLookup(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1003:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1003 |   Logger::debug("Handling force color lookup request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1014:3: warning: variable 'currentR' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
 1014 |   uint8_t currentR = currentColorData.fast.r;
      |   ^
      |           const 
G:\finalcolorwithcalibration\src\main.cpp:1015:3: warning: variable 'currentG' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
 1015 |   uint8_t currentG = currentColorData.fast.g;
      |   ^
      |           const 
G:\finalcolorwithcalibration\src\main.cpp:1016:3: warning: variable 'currentB' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
 1016 |   uint8_t currentB = currentColorData.fast.b;
      |   ^
      |           const 
G:\finalcolorwithcalibration\src\main.cpp:1019:3: warning: variable 'lookupStart' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
 1019 |   unsigned long lookupStart = micros();
      |   ^
      |                 const 
G:\finalcolorwithcalibration\src\main.cpp:1019:31: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1019 |   unsigned long lookupStart = micros();
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1021:3: warning: variable 'colorName' of type 'String' can be declared 'const' [misc-const-correctness]
 1021 |   String colorName = findClosestDuluxColor(currentR, currentG, currentB);
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:1021:22: warning: 'findClosestDuluxColor' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1021 |   String colorName = findClosestDuluxColor(currentR, currentG, currentB);
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:642:15: note: resolves to this declaration
  642 | static String findClosestDuluxColor(uint8_t r, uint8_t g, uint8_t b) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1022:3: warning: variable 'lookupDuration' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
 1022 |   unsigned long lookupDuration = micros() - lookupStart;
      |   ^
      |                 const 
G:\finalcolorwithcalibration\src\main.cpp:1022:34: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1022 |   unsigned long lookupDuration = micros() - lookupStart;
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1025:3: warning: variable 'currentTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
 1025 |   unsigned long currentTime = millis();
      |   ^
      |                 const 
G:\finalcolorwithcalibration\src\main.cpp:1025:31: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1025 |   unsigned long currentTime = millis();
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1026:30: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1026 |   currentColorData.colorName = colorName;
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1029:32: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1029 |   colorLookup.currentColorName = colorName;
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1037:3: warning: variable 'doc' of type 'JsonDocument' can be declared 'const' [misc-const-correctness]
 1037 |   JsonDocument doc;
      |   ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:1047:3: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
 1047 |   String response;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:1055:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1055 |   Logger::info("Forced color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1055:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1055 |   Logger::info("Forced color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1055:63: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1055 |   Logger::info("Forced color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1055:69: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1055 |   Logger::info("Forced color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1055:88: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1055 |   Logger::info("Forced color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1055:94: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1055 |   Logger::info("Forced color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1056:33: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1056 |                String(currentB) + ") -> " + colorName + " | Duration: " + String(lookupDuration) +
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1056:43: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1056 |                String(currentB) + ") -> " + colorName + " | Duration: " + String(lookupDuration) +
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1056:55: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1056 |                String(currentB) + ") -> " + colorName + " | Duration: " + String(lookupDuration) +
      |                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1056:73: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1056 |                String(currentB) + ") -> " + colorName + " | Duration: " + String(lookupDuration) +
      |                                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1056:98: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1056 |                String(currentB) + ") -> " + colorName + " | Duration: " + String(lookupDuration) +
      |                                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1061:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1061 | void handleGetSettings(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1062:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1062 |   Logger::debug("Handling get settings API request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1063:3: warning: variable 'doc' of type 'JsonDocument' can be declared 'const' [misc-const-correctness]
 1063 |   JsonDocument doc;
      |   ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:1120:3: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
 1120 |   String response;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:1129:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1129 | void handleSetLedBrightness(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1131:5: warning: variable 'brightness' of type 'int' can be declared 'const' [misc-const-correctness]
 1131 |     int brightness = request->getParam("value")->value().toInt();
      |     ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1134:7: warning: 'analogWrite' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1134 |       analogWrite(LEDpin, settings.ledBrightness);
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:98:6: note: resolves to this declaration
   98 | void analogWrite(uint8_t pin, int value);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1134:7: warning: no header providing "analogWrite" is directly included [misc-include-cleaner]
 1134 |       analogWrite(LEDpin, settings.ledBrightness);
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1135:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1135 |       Logger::info("LED brightness updated to: " + String(brightness));
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1135:50: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1135 |       Logger::info("LED brightness updated to: " + String(brightness));
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1137:21: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1137 |                     "{\"status\":\"success\",\"brightness\":" + String(brightness) + "}");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     R"({"status":"success","brightness":)"
G:\finalcolorwithcalibration\src\main.cpp:1137:63: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1137 |                     "{\"status\":\"success\",\"brightness\":" + String(brightness) + "}");
      |                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1137:84: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1137 |                     "{\"status\":\"success\",\"brightness\":" + String(brightness) + "}");
      |                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1139:59: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1139 |       request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Brightness must be 0-255\"}");
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                           R"({"error":"Brightness must be 0-255"})"
G:\finalcolorwithcalibration\src\main.cpp:1142:57: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1142 |     request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Missing value parameter\"}");
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                         R"({"error":"Missing value parameter"})"
G:\finalcolorwithcalibration\src\main.cpp:1146:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1146 | void handleSetIntegrationTime(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1148:5: warning: variable 'integrationTime' of type 'int' can be declared 'const' [misc-const-correctness]
 1148 |     int integrationTime = request->getParam("value")->value().toInt();
      |     ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1152:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1152 |       Logger::info("Integration time updated to: 0x" + String(integrationTime, HEX));
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1152:54: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1152 |       Logger::info("Integration time updated to: 0x" + String(integrationTime, HEX));
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1152:80: warning: no header providing "HEX" is directly included [misc-include-cleaner]
   24 |       Logger::info("Integration time updated to: 0x" + String(integrationTime, HEX));
      |                                                                                ^
G:\finalcolorwithcalibration\src\main.cpp:1154:21: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1154 |                     "{\"status\":\"success\",\"integrationTime\":" + String(integrationTime) + "}");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     R"({"status":"success","integrationTime":)"
G:\finalcolorwithcalibration\src\main.cpp:1154:68: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1154 |                     "{\"status\":\"success\",\"integrationTime\":" + String(integrationTime) + "}");
      |                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1154:94: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1154 |                     "{\"status\":\"success\",\"integrationTime\":" + String(integrationTime) + "}");
      |                                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1156:59: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1156 |       request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Integration time must be 0-255\"}");
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                           R"({"error":"Integration time must be 0-255"})"
G:\finalcolorwithcalibration\src\main.cpp:1159:57: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1159 |     request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Missing value parameter\"}");
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                         R"({"error":"Missing value parameter"})"
G:\finalcolorwithcalibration\src\main.cpp:1163:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1163 | void handleSetIRCompensation(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1165:5: warning: variable 'ir1' of type 'float' can be declared 'const' [misc-const-correctness]
 1165 |     float ir1 = request->getParam("ir1")->value().toFloat();
      |     ^
      |           const 
G:\finalcolorwithcalibration\src\main.cpp:1166:5: warning: variable 'ir2' of type 'float' can be declared 'const' [misc-const-correctness]
 1166 |     float ir2 = request->getParam("ir2")->value().toFloat();
      |     ^
      |           const 
G:\finalcolorwithcalibration\src\main.cpp:1170:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1170 |       Logger::info("IR compensation updated - IR1: " + String(ir1) + " IR2: " + String(ir2));
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1170:54: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1170 |       Logger::info("IR compensation updated - IR1: " + String(ir1) + " IR2: " + String(ir2));
      |                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1170:68: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1170 |       Logger::info("IR compensation updated - IR1: " + String(ir1) + " IR2: " + String(ir2));
      |                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1170:79: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1170 |       Logger::info("IR compensation updated - IR1: " + String(ir1) + " IR2: " + String(ir2));
      |                                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1173:11: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1173 |           "{\"status\":\"success\",\"ir1\":" + String(ir1) + ",\"ir2\":" + String(ir2) + "}");
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |           R"({"status":"success","ir1":)"
G:\finalcolorwithcalibration\src\main.cpp:1173:46: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1173 |           "{\"status\":\"success\",\"ir1\":" + String(ir1) + ",\"ir2\":" + String(ir2) + "}");
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1173:60: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1173 |           "{\"status\":\"success\",\"ir1\":" + String(ir1) + ",\"ir2\":" + String(ir2) + "}");
      |                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1173:74: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1173 |           "{\"status\":\"success\",\"ir1\":" + String(ir1) + ",\"ir2\":" + String(ir2) + "}");
      |                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1173:88: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1173 |           "{\"status\":\"success\",\"ir1\":" + String(ir1) + ",\"ir2\":" + String(ir2) + "}");
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1176:21: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1176 |                     "{\"error\":\"IR compensation factors must be 0-2.0\"}");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     R"({"error":"IR compensation factors must be 0-2.0"})"
G:\finalcolorwithcalibration\src\main.cpp:1179:57: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1179 |     request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Missing ir1 or ir2 parameters\"}");
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                         R"({"error":"Missing ir1 or ir2 parameters"})"
G:\finalcolorwithcalibration\src\main.cpp:1184:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1184 | void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1184:42: warning: parameter name 'X' is too short, expected at least 3 characters [readability-identifier-length]
 1184 | void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |                                          ^
G:\finalcolorwithcalibration\src\main.cpp:1184:54: warning: parameter name 'Y' is too short, expected at least 3 characters [readability-identifier-length]
 1184 | void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |                                                      ^
G:\finalcolorwithcalibration\src\main.cpp:1184:66: warning: parameter name 'Z' is too short, expected at least 3 characters [readability-identifier-length]
 1184 | void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |                                                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1185:42: warning: parameter name 'R' is too short, expected at least 3 characters [readability-identifier-length]
 1185 |                                 uint8_t &R, uint8_t &G, uint8_t &B) {
      |                                          ^
G:\finalcolorwithcalibration\src\main.cpp:1185:54: warning: parameter name 'G' is too short, expected at least 3 characters [readability-identifier-length]
 1185 |                                 uint8_t &R, uint8_t &G, uint8_t &B) {
      |                                                      ^
G:\finalcolorwithcalibration\src\main.cpp:1185:66: warning: parameter name 'B' is too short, expected at least 3 characters [readability-identifier-length]
 1185 |                                 uint8_t &R, uint8_t &G, uint8_t &B) {
      |                                                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1202:5: warning: 'convertXYZtoRGB_Uncalibrated' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1202 |     convertXYZtoRGB_Uncalibrated(X, Y, Z, R, G, B);
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:180:13: note: resolves to this declaration
  180 | static void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1207:3: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
 1207 |   float adjustedX = X, adjustedY = Y, adjustedZ = Z;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
G:\finalcolorwithcalibration\src\main.cpp:1209:17: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1209 |     adjustedX = X - (IR1 * settings.irCompensationFactor1);
      |                 ^
G:\finalcolorwithcalibration\src\main.cpp:1209:22: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1209 |     adjustedX = X - (IR1 * settings.irCompensationFactor1);
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:1210:17: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1210 |     adjustedY = Y - (IR2 * settings.irCompensationFactor2);
      |                 ^
G:\finalcolorwithcalibration\src\main.cpp:1210:22: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1210 |     adjustedY = Y - (IR2 * settings.irCompensationFactor2);
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:1211:17: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1211 |     adjustedZ = Z - ((IR1 + IR2) * 0.5f * settings.irCompensationFactor1);
      |                 ^
G:\finalcolorwithcalibration\src\main.cpp:1211:22: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1211 |     adjustedZ = Z - ((IR1 + IR2) * 0.5f * settings.irCompensationFactor1);
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:1220:19: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1220 |   float* matrix = (Y > settings.dynamicThreshold) ? settings.brightMatrix : settings.darkMatrix;
      |                   ^
G:\finalcolorwithcalibration\src\main.cpp:1220:20: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1220 |   float* matrix = (Y > settings.dynamicThreshold) ? settings.brightMatrix : settings.darkMatrix;
      |                    ^
G:\finalcolorwithcalibration\src\main.cpp:1221:19: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1221 |   float* offset = (Y > settings.dynamicThreshold) ? settings.brightOffset : settings.darkOffset;
      |                   ^
G:\finalcolorwithcalibration\src\main.cpp:1221:20: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1221 |   float* offset = (Y > settings.dynamicThreshold) ? settings.brightOffset : settings.darkOffset;
      |                    ^
G:\finalcolorwithcalibration\src\main.cpp:1224:3: warning: variable 'r_linear' of type 'float' can be declared 'const' [misc-const-correctness]
 1224 |   float r_linear = (matrix[0] * adjustedX + matrix[1] * adjustedY + matrix[2] * adjustedZ) + offset[0];
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1224:9: warning: invalid case style for variable 'r_linear' [readability-identifier-naming]
 1224 |   float r_linear = (matrix[0] * adjustedX + matrix[1] * adjustedY + matrix[2] * adjustedZ) + offset[0];
      |         ^~~~~~~~
      |         rLinear
 1225 |   float g_linear = (matrix[3] * adjustedX + matrix[4] * adjustedY + matrix[5] * adjustedZ) + offset[1];
 1226 |   float b_linear = (matrix[6] * adjustedX + matrix[7] * adjustedY + matrix[8] * adjustedZ) + offset[2];
 1227 | 
 1228 |   // Convert to 8-bit RGB and clamp
 1229 |   R = (uint8_t)max(0.0f, min((float)settings.rgbSaturationLimit, r_linear));
      |                                                                  ~~~~~~~~
      |                                                                  rLinear
G:\finalcolorwithcalibration\src\main.cpp:1224:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1224 |   float r_linear = (matrix[0] * adjustedX + matrix[1] * adjustedY + matrix[2] * adjustedZ) + offset[0];
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:1224:45: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1224 |   float r_linear = (matrix[0] * adjustedX + matrix[1] * adjustedY + matrix[2] * adjustedZ) + offset[0];
      |                                             ^
G:\finalcolorwithcalibration\src\main.cpp:1224:69: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1224 |   float r_linear = (matrix[0] * adjustedX + matrix[1] * adjustedY + matrix[2] * adjustedZ) + offset[0];
      |                                                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1224:94: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1224 |   float r_linear = (matrix[0] * adjustedX + matrix[1] * adjustedY + matrix[2] * adjustedZ) + offset[0];
      |                                                                                              ^
G:\finalcolorwithcalibration\src\main.cpp:1225:3: warning: variable 'g_linear' of type 'float' can be declared 'const' [misc-const-correctness]
 1225 |   float g_linear = (matrix[3] * adjustedX + matrix[4] * adjustedY + matrix[5] * adjustedZ) + offset[1];
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1225:9: warning: invalid case style for variable 'g_linear' [readability-identifier-naming]
 1225 |   float g_linear = (matrix[3] * adjustedX + matrix[4] * adjustedY + matrix[5] * adjustedZ) + offset[1];
      |         ^~~~~~~~
      |         gLinear
 1226 |   float b_linear = (matrix[6] * adjustedX + matrix[7] * adjustedY + matrix[8] * adjustedZ) + offset[2];
 1227 | 
 1228 |   // Convert to 8-bit RGB and clamp
 1229 |   R = (uint8_t)max(0.0f, min((float)settings.rgbSaturationLimit, r_linear));
 1230 |   G = (uint8_t)max(0.0f, min((float)settings.rgbSaturationLimit, g_linear));
      |                                                                  ~~~~~~~~
      |                                                                  gLinear
G:\finalcolorwithcalibration\src\main.cpp:1225:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1225 |   float g_linear = (matrix[3] * adjustedX + matrix[4] * adjustedY + matrix[5] * adjustedZ) + offset[1];
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:1225:45: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1225 |   float g_linear = (matrix[3] * adjustedX + matrix[4] * adjustedY + matrix[5] * adjustedZ) + offset[1];
      |                                             ^
G:\finalcolorwithcalibration\src\main.cpp:1225:69: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1225 |   float g_linear = (matrix[3] * adjustedX + matrix[4] * adjustedY + matrix[5] * adjustedZ) + offset[1];
      |                                                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1225:94: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1225 |   float g_linear = (matrix[3] * adjustedX + matrix[4] * adjustedY + matrix[5] * adjustedZ) + offset[1];
      |                                                                                              ^
G:\finalcolorwithcalibration\src\main.cpp:1226:3: warning: variable 'b_linear' of type 'float' can be declared 'const' [misc-const-correctness]
 1226 |   float b_linear = (matrix[6] * adjustedX + matrix[7] * adjustedY + matrix[8] * adjustedZ) + offset[2];
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1226:9: warning: invalid case style for variable 'b_linear' [readability-identifier-naming]
 1226 |   float b_linear = (matrix[6] * adjustedX + matrix[7] * adjustedY + matrix[8] * adjustedZ) + offset[2];
      |         ^~~~~~~~
      |         bLinear
 1227 | 
 1228 |   // Convert to 8-bit RGB and clamp
 1229 |   R = (uint8_t)max(0.0f, min((float)settings.rgbSaturationLimit, r_linear));
 1230 |   G = (uint8_t)max(0.0f, min((float)settings.rgbSaturationLimit, g_linear));
 1231 |   B = (uint8_t)max(0.0f, min((float)settings.rgbSaturationLimit, b_linear));
      |                                                                  ~~~~~~~~
      |                                                                  bLinear
G:\finalcolorwithcalibration\src\main.cpp:1226:21: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1226 |   float b_linear = (matrix[6] * adjustedX + matrix[7] * adjustedY + matrix[8] * adjustedZ) + offset[2];
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:1226:45: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1226 |   float b_linear = (matrix[6] * adjustedX + matrix[7] * adjustedY + matrix[8] * adjustedZ) + offset[2];
      |                                             ^
G:\finalcolorwithcalibration\src\main.cpp:1226:69: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1226 |   float b_linear = (matrix[6] * adjustedX + matrix[7] * adjustedY + matrix[8] * adjustedZ) + offset[2];
      |                                                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1226:94: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1226 |   float b_linear = (matrix[6] * adjustedX + matrix[7] * adjustedY + matrix[8] * adjustedZ) + offset[2];
      |                                                                                              ^
G:\finalcolorwithcalibration\src\main.cpp:1244:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1244 | void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1244:44: warning: parameter name 'X' is too short, expected at least 3 characters [readability-identifier-length]
 1244 | void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:1244:56: warning: parameter name 'Y' is too short, expected at least 3 characters [readability-identifier-length]
 1244 | void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                        ^
G:\finalcolorwithcalibration\src\main.cpp:1244:68: warning: parameter name 'Z' is too short, expected at least 3 characters [readability-identifier-length]
 1244 | void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                                    ^
G:\finalcolorwithcalibration\src\main.cpp:1244:80: warning: parameter name 'R' is too short, expected at least 3 characters [readability-identifier-length]
 1244 | void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                                                ^
G:\finalcolorwithcalibration\src\main.cpp:1244:92: warning: parameter name 'G' is too short, expected at least 3 characters [readability-identifier-length]
 1244 | void convertXYZtoRGB_Uncalibrated(uint16_t X, uint16_t Y, uint16_t Z, uint8_t &R, uint8_t &G,
      |                                                                                            ^
G:\finalcolorwithcalibration\src\main.cpp:1245:44: warning: parameter name 'B' is too short, expected at least 3 characters [readability-identifier-length]
 1245 |                                   uint8_t &B) {
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:1246:3: warning: variable 'x' of type 'float' can be declared 'const' [misc-const-correctness]
 1246 |   float x = X / MAX_SENSOR_VALUE;
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1246:9: warning: variable name 'x' is too short, expected at least 3 characters [readability-identifier-length]
 1246 |   float x = X / MAX_SENSOR_VALUE;
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:1246:13: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1246 |   float x = X / MAX_SENSOR_VALUE;
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1247:3: warning: variable 'y' of type 'float' can be declared 'const' [misc-const-correctness]
 1247 |   float y = Y / MAX_SENSOR_VALUE;
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1247:9: warning: variable name 'y' is too short, expected at least 3 characters [readability-identifier-length]
 1247 |   float y = Y / MAX_SENSOR_VALUE;
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:1247:13: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1247 |   float y = Y / MAX_SENSOR_VALUE;
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1248:3: warning: variable 'z' of type 'float' can be declared 'const' [misc-const-correctness]
 1248 |   float z = Z / MAX_SENSOR_VALUE;
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1248:9: warning: variable name 'z' is too short, expected at least 3 characters [readability-identifier-length]
 1248 |   float z = Z / MAX_SENSOR_VALUE;
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:1248:13: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1248 |   float z = Z / MAX_SENSOR_VALUE;
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1249:9: warning: invalid case style for variable 'r_linear' [readability-identifier-naming]
 1249 |   float r_linear = 3.2406f * x - 1.5372f * y - 0.4986f * z;
      |         ^~~~~~~~
      |         rLinear
 1250 |   float g_linear = -0.9689f * x + 1.8758f * y + 0.0415f * z;
 1251 |   float b_linear = 0.0557f * x - 0.2040f * y + 1.0570f * z;
 1252 |   r_linear = max(0.0f, min(1.0f, r_linear));
      |   ~~~~~~~~                       ~~~~~~~~
      |   rLinear                        rLinear
 1253 |   g_linear = max(0.0f, min(1.0f, g_linear));
 1254 |   b_linear = max(0.0f, min(1.0f, b_linear));
 1255 |   float gamma = 1.0f / GAMMA_CORRECTION;
 1256 |   R = (uint8_t)(pow(r_linear, gamma) * RGB_MAX);
      |                     ~~~~~~~~
      |                     rLinear
G:\finalcolorwithcalibration\src\main.cpp:1249:20: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1249 |   float r_linear = 3.2406f * x - 1.5372f * y - 0.4986f * z;
      |                    ^~~~~~~~~~~
      |                    (          )
G:\finalcolorwithcalibration\src\main.cpp:1249:34: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1249 |   float r_linear = 3.2406f * x - 1.5372f * y - 0.4986f * z;
      |                                  ^~~~~~~~~~~
      |                                  (          )
G:\finalcolorwithcalibration\src\main.cpp:1249:48: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1249 |   float r_linear = 3.2406f * x - 1.5372f * y - 0.4986f * z;
      |                                                ^~~~~~~~~~~~
      |                                                (          )
G:\finalcolorwithcalibration\src\main.cpp:1250:9: warning: invalid case style for variable 'g_linear' [readability-identifier-naming]
 1250 |   float g_linear = -0.9689f * x + 1.8758f * y + 0.0415f * z;
      |         ^~~~~~~~
      |         gLinear
 1251 |   float b_linear = 0.0557f * x - 0.2040f * y + 1.0570f * z;
 1252 |   r_linear = max(0.0f, min(1.0f, r_linear));
 1253 |   g_linear = max(0.0f, min(1.0f, g_linear));
      |   ~~~~~~~~                       ~~~~~~~~
      |   gLinear                        gLinear
 1254 |   b_linear = max(0.0f, min(1.0f, b_linear));
 1255 |   float gamma = 1.0f / GAMMA_CORRECTION;
 1256 |   R = (uint8_t)(pow(r_linear, gamma) * RGB_MAX);
 1257 |   G = (uint8_t)(pow(g_linear, gamma) * RGB_MAX);
      |                     ~~~~~~~~
      |                     gLinear
G:\finalcolorwithcalibration\src\main.cpp:1250:20: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1250 |   float g_linear = -0.9689f * x + 1.8758f * y + 0.0415f * z;
      |                    ^~~~~~~~~~~~
      |                    (           )
G:\finalcolorwithcalibration\src\main.cpp:1250:35: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1250 |   float g_linear = -0.9689f * x + 1.8758f * y + 0.0415f * z;
      |                                   ^~~~~~~~~~~
      |                                   (          )
G:\finalcolorwithcalibration\src\main.cpp:1250:49: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1250 |   float g_linear = -0.9689f * x + 1.8758f * y + 0.0415f * z;
      |                                                 ^~~~~~~~~~~~
      |                                                 (          )
G:\finalcolorwithcalibration\src\main.cpp:1251:9: warning: invalid case style for variable 'b_linear' [readability-identifier-naming]
 1251 |   float b_linear = 0.0557f * x - 0.2040f * y + 1.0570f * z;
      |         ^~~~~~~~
      |         bLinear
 1252 |   r_linear = max(0.0f, min(1.0f, r_linear));
 1253 |   g_linear = max(0.0f, min(1.0f, g_linear));
 1254 |   b_linear = max(0.0f, min(1.0f, b_linear));
      |   ~~~~~~~~                       ~~~~~~~~
      |   bLinear                        bLinear
 1255 |   float gamma = 1.0f / GAMMA_CORRECTION;
 1256 |   R = (uint8_t)(pow(r_linear, gamma) * RGB_MAX);
 1257 |   G = (uint8_t)(pow(g_linear, gamma) * RGB_MAX);
 1258 |   B = (uint8_t)(pow(b_linear, gamma) * RGB_MAX);
      |                     ~~~~~~~~
      |                     bLinear
G:\finalcolorwithcalibration\src\main.cpp:1251:20: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1251 |   float b_linear = 0.0557f * x - 0.2040f * y + 1.0570f * z;
      |                    ^~~~~~~~~~~
      |                    (          )
G:\finalcolorwithcalibration\src\main.cpp:1251:34: warning: '*' has higher precedence than '-'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1251 |   float b_linear = 0.0557f * x - 0.2040f * y + 1.0570f * z;
      |                                  ^~~~~~~~~~~
      |                                  (          )
G:\finalcolorwithcalibration\src\main.cpp:1251:48: warning: '*' has higher precedence than '+'; add parentheses to explicitly specify the order of operations [readability-math-missing-parentheses]
 1251 |   float b_linear = 0.0557f * x - 0.2040f * y + 1.0570f * z;
      |                                                ^~~~~~~~~~~~
      |                                                (          )
G:\finalcolorwithcalibration\src\main.cpp:1255:3: warning: variable 'gamma' of type 'float' can be declared 'const' [misc-const-correctness]
 1255 |   float gamma = 1.0f / GAMMA_CORRECTION;
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1256:17: warning: 'pow' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1256 |   R = (uint8_t)(pow(r_linear, gamma) * RGB_MAX);
      |                 ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:222:40: note: resolves to this declaration
  222 | _NODISCARD _Check_return_ inline float pow(_In_ float _Xx, _In_ float _Yx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:1256:17: warning: no header providing "pow" is directly included [misc-include-cleaner]
   26 |   R = (uint8_t)(pow(r_linear, gamma) * RGB_MAX);
      |                 ^
G:\finalcolorwithcalibration\src\main.cpp:1257:17: warning: 'pow' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1257 |   G = (uint8_t)(pow(g_linear, gamma) * RGB_MAX);
      |                 ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:222:40: note: resolves to this declaration
  222 | _NODISCARD _Check_return_ inline float pow(_In_ float _Xx, _In_ float _Yx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:1258:17: warning: 'pow' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1258 |   B = (uint8_t)(pow(b_linear, gamma) * RGB_MAX);
      |                 ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:222:40: note: resolves to this declaration
  222 | _NODISCARD _Check_return_ inline float pow(_In_ float _Xx, _In_ float _Yx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:1263:7: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1263 | float getBatteryVoltage() {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1266:3: warning: variable 'batteryVoltage' of type 'float' can be declared 'const' [misc-const-correctness]
 1266 |   float batteryVoltage = ums3.getBatteryVoltage();
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1283:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1283 | bool getVbusPresent() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1286:3: warning: variable 'vbusPresent' of type 'bool' can be declared 'const' [misc-const-correctness]
 1286 |   bool vbusPresent = ums3.getVbusPresent();
      |   ^
      |        const 
G:\finalcolorwithcalibration\src\main.cpp:1295:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1295 | void handleBatteryAPI(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1296:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1296 |   Logger::debug("Handling battery API request");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1298:3: warning: variable 'batteryVoltage' of type 'float' can be declared 'const' [misc-const-correctness]
 1298 |   float batteryVoltage = getBatteryVoltage();
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1298:26: warning: 'getBatteryVoltage' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1298 |   float batteryVoltage = getBatteryVoltage();
      |                          ^
G:\finalcolorwithcalibration\src\main.cpp:1263:7: note: resolves to this declaration
 1263 | float getBatteryVoltage() {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1299:3: warning: variable 'usbPresent' of type 'bool' can be declared 'const' [misc-const-correctness]
 1299 |   bool usbPresent = getVbusPresent();
      |   ^
      |        const 
G:\finalcolorwithcalibration\src\main.cpp:1299:21: warning: 'getVbusPresent' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1299 |   bool usbPresent = getVbusPresent();
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:1283:6: note: resolves to this declaration
 1283 | bool getVbusPresent() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1302:3: warning: variable 'doc' of type 'JsonDocument' can be declared 'const' [misc-const-correctness]
 1302 |   JsonDocument doc;
      |   ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:1309:30: warning: repeated branch body in conditional chain [bugprone-branch-clone]
 1309 |   if (batteryVoltage > 4.0f) {
      |                              ^
G:\finalcolorwithcalibration\src\main.cpp:1312:4: note: end of the original
 1312 |   } else if (batteryVoltage > 3.7f) {
      |    ^
G:\finalcolorwithcalibration\src\main.cpp:1312:37: note: clone 1 starts here
 1312 |   } else if (batteryVoltage > 3.7f) {
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1315:37: note: clone 2 starts here
 1315 |   } else if (batteryVoltage > 3.4f) {
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1318:10: note: clone 3 starts here
 1318 |   } else {
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1324:44: warning: repeated branch body in conditional chain [bugprone-branch-clone]
 1324 |   if (usbPresent && batteryVoltage > 2.5f) {
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:1326:4: note: end of the original
 1326 |   } else if (usbPresent) {
      |    ^
G:\finalcolorwithcalibration\src\main.cpp:1326:26: note: clone 1 starts here
 1326 |   } else if (usbPresent) {
      |                          ^
G:\finalcolorwithcalibration\src\main.cpp:1328:37: note: clone 2 starts here
 1328 |   } else if (batteryVoltage > 2.5f) {
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1330:10: note: clone 3 starts here
 1330 |   } else {
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1334:3: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
 1334 |   String response;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:1341:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1341 |   Logger::debug("Battery API response sent: " + String(batteryVoltage, 3) + "V (GPIO1 ADC)");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1341:47: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1341 |   Logger::debug("Battery API response sent: " + String(batteryVoltage, 3) + "V (GPIO1 ADC)");
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1341:75: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1341 |   Logger::debug("Battery API response sent: " + String(batteryVoltage, 3) + "V (GPIO1 ADC)");
      |                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1345:13: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1345 | static bool connectToWiFiOrStartAP() {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1345:13: warning: function 'connectToWiFiOrStartAP' declared 'static', move to anonymous namespace instead [misc-use-anonymous-namespace]
G:\finalcolorwithcalibration\src\main.cpp:1346:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1346 |   Logger::info("Scanning for available WiFi networks...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1349:3: warning: variable 'numNetworks' of type 'int' can be declared 'const' [misc-const-correctness]
 1349 |   int numNetworks = WiFi.scanNetworks();
      |   ^
      |       const 
G:\finalcolorwithcalibration\src\main.cpp:1353:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1353 |     Logger::warn("No WiFi networks found");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1355:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1355 |     Logger::info("Found " + String(numNetworks) + " WiFi networks:");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1355:27: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1355 |     Logger::info("Found " + String(numNetworks) + " WiFi networks:");
      |                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1355:49: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1355 |     Logger::info("Found " + String(numNetworks) + " WiFi networks:");
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1357:7: warning: variable 'foundSSID' of type 'String' can be declared 'const' [misc-const-correctness]
 1357 |       String foundSSID = WiFi.SSID(i);
      |       ^
      |              const 
G:\finalcolorwithcalibration\src\main.cpp:1358:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1358 |       Logger::info("  " + String(i + 1) + ": " + foundSSID + " (Signal: " + String(WiFi.RSSI(i)) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1358:25: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1358 |       Logger::info("  " + String(i + 1) + ": " + foundSSID + " (Signal: " + String(WiFi.RSSI(i)) +
      |                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1358:41: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1358 |       Logger::info("  " + String(i + 1) + ": " + foundSSID + " (Signal: " + String(WiFi.RSSI(i)) +
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1358:48: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1358 |       Logger::info("  " + String(i + 1) + ": " + foundSSID + " (Signal: " + String(WiFi.RSSI(i)) +
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1358:60: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1358 |       Logger::info("  " + String(i + 1) + ": " + foundSSID + " (Signal: " + String(WiFi.RSSI(i)) +
      |                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1358:75: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1358 |       Logger::info("  " + String(i + 1) + ": " + foundSSID + " (Signal: " + String(WiFi.RSSI(i)) +
      |                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1358:98: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1358 |       Logger::info("  " + String(i + 1) + ": " + foundSSID + " (Signal: " + String(WiFi.RSSI(i)) +
      |                                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1361:21: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1361 |       if (foundSSID == String(ssid)) {
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:205:14: note: resolves to this declaration
  205 |         bool operator ==(const String &rhs) const {
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:1363:9: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1363 |         Logger::info("Target SSID '" + String(ssid) + "' found!");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1363:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1363 |         Logger::info("Target SSID '" + String(ssid) + "' found!");
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1363:53: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1363 |         Logger::info("Target SSID '" + String(ssid) + "' found!");
      |                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1369:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1369 |     Logger::warn("Target SSID '" + String(ssid) + "' not found in scan results");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1369:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1369 |     Logger::warn("Target SSID '" + String(ssid) + "' not found in scan results");
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1369:49: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1369 |     Logger::warn("Target SSID '" + String(ssid) + "' not found in scan results");
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1370:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1370 |     Logger::info("Starting Access Point mode...");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1373:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
 1373 |     WiFi.mode(WIFI_AP);
      |     ^~~~~
      |     WiFiClass::
G:\finalcolorwithcalibration\src\main.cpp:1373:15: warning: no header providing "WIFI_AP" is directly included [misc-include-cleaner]
 1373 |     WiFi.mode(WIFI_AP);
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1374:5: warning: variable 'apStarted' of type 'bool' can be declared 'const' [misc-const-correctness]
 1374 |     bool apStarted = WiFi.softAP(ap_ssid, ap_password);
      |     ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:1377:7: warning: variable 'apIP' of type 'IPAddress' can be declared 'const' [misc-const-correctness]
 1377 |       IPAddress apIP = WiFi.softAPIP();
      |       ^
      |                 const 
G:\finalcolorwithcalibration\src\main.cpp:1378:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1378 |       Logger::info("Access Point started successfully!");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1379:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1379 |       Logger::info("AP SSID: " + String(ap_ssid));
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1379:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1379 |       Logger::info("AP SSID: " + String(ap_ssid));
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1380:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1380 |       Logger::info("AP Password: " + String(ap_password));
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1380:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1380 |       Logger::info("AP Password: " + String(ap_password));
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1381:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1381 |       Logger::info("AP IP address: " + apIP.toString());
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1381:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1381 |       Logger::info("AP IP address: " + apIP.toString());
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1382:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1382 |       Logger::info("Connect to the AP and visit http://" + apIP.toString() +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1382:58: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1382 |       Logger::info("Connect to the AP and visit http://" + apIP.toString() +
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1382:76: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1382 |       Logger::info("Connect to the AP and visit http://" + apIP.toString() +
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1385:7: warning: do not use 'else' after 'return' [readability-else-after-return]
 1385 |     } else {
      |       ^~~~~~
 1386 |       Logger::error("Failed to start Access Point mode!");
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1387 |       return false;
      |       ~~~~~~~~~~~~~
 1388 |     }
      |     ~
G:\finalcolorwithcalibration\src\main.cpp:1386:7: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1386 |       Logger::error("Failed to start Access Point mode!");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1392:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1392 |   Logger::info("Attempting to connect to WiFi network: " + String(ssid));
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1392:58: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1392 |   Logger::info("Attempting to connect to WiFi network: " + String(ssid));
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1395:3: warning: static member accessed through instance [readability-static-accessed-through-instance]
 1395 |   WiFi.mode(WIFI_STA);
      |   ^~~~~
      |   WiFiClass::
G:\finalcolorwithcalibration\src\main.cpp:1395:13: warning: no header providing "WIFI_STA" is directly included [misc-include-cleaner]
 1395 |   WiFi.mode(WIFI_STA);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1397:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1397 |     Logger::error("Static IP configuration failed, using DHCP");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1399:5: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1399 |     Logger::debug("Static IP configuration successful");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1404:3: warning: variable 'wifiStartTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
 1404 |   unsigned long wifiStartTime = millis();
      |   ^
      |                 const 
G:\finalcolorwithcalibration\src\main.cpp:1404:33: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1404 |   unsigned long wifiStartTime = millis();
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1405:23: warning: invalid case style for constant 'wifiTimeout' [readability-identifier-naming]
 1405 |   const unsigned long wifiTimeout = WIFI_TIMEOUT_MS;  // Configurable WiFi timeout
      |                       ^~~~~~~~~~~
      |                       WIFI_TIMEOUT
 1406 | 
 1407 |   Logger::info("Connecting to WiFi");
 1408 |   while (WiFi.status() != WL_CONNECTED && (millis() - wifiStartTime) < wifiTimeout) {
      |                                                                        ~~~~~~~~~~~
      |                                                                        WIFI_TIMEOUT
G:\finalcolorwithcalibration\src\main.cpp:1407:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1407 |   Logger::info("Connecting to WiFi");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1408:10: warning: static member accessed through instance [readability-static-accessed-through-instance]
 1408 |   while (WiFi.status() != WL_CONNECTED && (millis() - wifiStartTime) < wifiTimeout) {
      |          ^~~~~
      |          WiFiClass::
G:\finalcolorwithcalibration\src\main.cpp:1408:27: warning: no header providing "WL_CONNECTED" is directly included [misc-include-cleaner]
   24 |   while (WiFi.status() != WL_CONNECTED && (millis() - wifiStartTime) < wifiTimeout) {
      |                           ^
G:\finalcolorwithcalibration\src\main.cpp:1408:44: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1408 |   while (WiFi.status() != WL_CONNECTED && (millis() - wifiStartTime) < wifiTimeout) {
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1409:5: warning: 'delay' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1409 |     delay(500);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:138:6: note: resolves to this declaration
  138 | void delay(uint32_t);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1413:7: warning: static member accessed through instance [readability-static-accessed-through-instance]
 1413 |   if (WiFi.status() == WL_CONNECTED) {
      |       ^~~~~
      |       WiFiClass::
G:\finalcolorwithcalibration\src\main.cpp:1415:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1415 |     Logger::info("WiFi connected successfully!");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1416:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1416 |     Logger::info("IP address: " + WiFi.localIP().toString());
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1416:33: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1416 |     Logger::info("IP address: " + WiFi.localIP().toString());
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1417:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1417 |     Logger::info("Connection time: " + String((millis() - wifiStartTime) / 1000) + " seconds");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1417:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1417 |     Logger::info("Connection time: " + String((millis() - wifiStartTime) / 1000) + " seconds");
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1417:48: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1417 |     Logger::info("Connection time: " + String((millis() - wifiStartTime) / 1000) + " seconds");
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1417:82: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1417 |     Logger::info("Connection time: " + String((millis() - wifiStartTime) / 1000) + " seconds");
      |                                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1419:5: warning: do not use 'else' after 'return' [readability-else-after-return]
 1419 |   } else {
      |     ^~~~~~
 1420 |     Serial.println();
      |     ~~~~~~~~~~~~~~~~~
 1421 |     Logger::warn("WiFi connection failed after timeout, starting Access Point mode...");
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1422 | 
 1423 |     // Start AP mode as fallback
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1424 |     WiFi.mode(WIFI_AP);
      |     ~~~~~~~~~~~~~~~~~~~
 1425 |     bool apStarted = WiFi.softAP(ap_ssid, ap_password);
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1426 | 
 1427 |     if (apStarted) {
      |     ~~~~~~~~~~~~~~~~
 1428 |       IPAddress apIP = WiFi.softAPIP();
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1429 |       Logger::info("Fallback Access Point started successfully!");
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1430 |       Logger::info("AP SSID: " + String(ap_ssid));
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1431 |       Logger::info("AP Password: " + String(ap_password));
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1432 |       Logger::info("AP IP address: " + apIP.toString());
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1433 |       Logger::info("Connect to the AP and visit http://" + apIP.toString() +
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1434 |                    " to access the color matcher");
      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
G:\finalcolorwithcalibration\src\main.cpp:1421:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1421 |     Logger::warn("WiFi connection failed after timeout, starting Access Point mode...");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1424:5: warning: static member accessed through instance [readability-static-accessed-through-instance]
 1424 |     WiFi.mode(WIFI_AP);
      |     ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1425:5: warning: variable 'apStarted' of type 'bool' can be declared 'const' [misc-const-correctness]
 1425 |     bool apStarted = WiFi.softAP(ap_ssid, ap_password);
      |     ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1428:7: warning: variable 'apIP' of type 'IPAddress' can be declared 'const' [misc-const-correctness]
 1428 |       IPAddress apIP = WiFi.softAPIP();
      |       ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1429:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1429 |       Logger::info("Fallback Access Point started successfully!");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1430:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1430 |       Logger::info("AP SSID: " + String(ap_ssid));
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1430:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1430 |       Logger::info("AP SSID: " + String(ap_ssid));
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1431:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1431 |       Logger::info("AP Password: " + String(ap_password));
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1431:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1431 |       Logger::info("AP Password: " + String(ap_password));
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1432:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1432 |       Logger::info("AP IP address: " + apIP.toString());
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1432:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1432 |       Logger::info("AP IP address: " + apIP.toString());
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1433:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1433 |       Logger::info("Connect to the AP and visit http://" + apIP.toString() +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1433:58: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1433 |       Logger::info("Connect to the AP and visit http://" + apIP.toString() +
      |                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1433:76: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1433 |       Logger::info("Connect to the AP and visit http://" + apIP.toString() +
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1436:7: warning: do not use 'else' after 'return' [readability-else-after-return]
 1436 |     } else {
      |       ^~~~
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1437:7: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1437 |       Logger::error("Failed to start fallback Access Point mode!");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1443:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1443 | void setup() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1443:6: warning: function 'setup' has cognitive complexity of 101 (threshold 25) [readability-function-cognitive-complexity]
G:\finalcolorwithcalibration\src\main.cpp:1451:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1451 |   if (psramFound()) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1460:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1460 |     if (freePsram < 2 * 1024 * BYTES_PER_KB) {  // Less than 2MB free
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1464:5: note: +1, nesting level increased to 1
 1464 |   } else {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1499:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1499 |   while (!TCS3430.begin()) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1524:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1524 |   if (!LittleFS.begin(false, "/littlefs", 10, "spiffs")) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1526:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1526 |     if (LittleFS.format()) {  // Format the filesystem
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1529:7: note: +3, including nesting penalty of 2, nesting level increased to 3
 1529 |       if (LittleFS.begin(false, "/littlefs", 10, "spiffs")) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1531:9: note: +1, nesting level increased to 3
 1531 |       } else {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:1535:7: note: +1, nesting level increased to 2
 1535 |     } else {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1539:5: note: +1, nesting level increased to 1
 1539 |   } else {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1570:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1570 |   if (loadColorDatabase()) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1579:5: note: +1, nesting level increased to 1
 1579 |   } else {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1584:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1584 |   if (!connectToWiFiOrStartAP()) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1641:44: note: nesting level increased to 1
 1641 |   server.on("/api/calibration", HTTP_POST, [](AsyncWebServerRequest *request) {
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:1647:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1647 |     if (request->hasParam("redA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1652:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1652 |     if (request->hasParam("redB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1657:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1657 |     if (request->hasParam("redC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1662:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1662 |     if (request->hasParam("greenA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1667:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1667 |     if (request->hasParam("greenB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1672:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1672 |     if (request->hasParam("greenC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1677:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1677 |     if (request->hasParam("blueA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1682:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1682 |     if (request->hasParam("blueB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1687:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1687 |     if (request->hasParam("blueC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1693:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1693 |     if (request->hasParam("whiteRedA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1698:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1698 |     if (request->hasParam("whiteRedB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1703:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1703 |     if (request->hasParam("whiteRedC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1708:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1708 |     if (request->hasParam("whiteGreenA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1713:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1713 |     if (request->hasParam("whiteGreenB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1718:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1718 |     if (request->hasParam("whiteGreenC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1723:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1723 |     if (request->hasParam("whiteBlueA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1728:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1728 |     if (request->hasParam("whiteBlueB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1733:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1733 |     if (request->hasParam("whiteBlueC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1739:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1739 |     if (request->hasParam("greyRedA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1744:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1744 |     if (request->hasParam("greyRedB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1749:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1749 |     if (request->hasParam("greyRedC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1754:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1754 |     if (request->hasParam("greyGreenA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1759:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1759 |     if (request->hasParam("greyGreenB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1764:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1764 |     if (request->hasParam("greyGreenC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1769:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1769 |     if (request->hasParam("greyBlueA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1774:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1774 |     if (request->hasParam("greyBlueB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1779:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1779 |     if (request->hasParam("greyBlueC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1785:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1785 |     if (request->hasParam("enableDynamicCalibration")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1789:60: note: +3, including nesting penalty of 2, nesting level increased to 3
 1789 |                   String(settings.enableDynamicCalibration ? "true" : "false");
      |                                                            ^
G:\finalcolorwithcalibration\src\main.cpp:1792:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1792 |     if (request->hasParam("dynamicThreshold")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1799:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1799 |     if (request->hasParam("useMatrixCalibration")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1802:79: note: +3, including nesting penalty of 2, nesting level increased to 3
 1802 |           ",\"useMatrixCalibration\":" + String(settings.useMatrixCalibration ? "true" : "false");
      |                                                                               ^
G:\finalcolorwithcalibration\src\main.cpp:1806:30: note: nesting level increased to 2
 1806 |     auto updateMatrixArray = [&](const char *prefix, float *arr, size_t len) {
      |                              ^
G:\finalcolorwithcalibration\src\main.cpp:1807:7: note: +3, including nesting penalty of 2, nesting level increased to 3
 1807 |       for (size_t idx = 0; idx < len; ++idx) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1809:9: note: +4, including nesting penalty of 3, nesting level increased to 4
 1809 |         if (request->hasParam(key)) {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:1823:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1823 |     if (updated) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1836:7: note: +1, nesting level increased to 2
 1836 |     } else {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1847:49: note: nesting level increased to 1
 1847 |   server.on("/api/reset-to-dfrobot", HTTP_POST, [](AsyncWebServerRequest *request) {
      |                                                 ^
G:\finalcolorwithcalibration\src\main.cpp:1864:48: note: nesting level increased to 1
 1864 |   server.on("/api/reset-to-custom", HTTP_POST, [](AsyncWebServerRequest *request) {
      |                                                ^
G:\finalcolorwithcalibration\src\main.cpp:1884:52: note: nesting level increased to 1
 1884 |   server.on("/api/set-calibration-mode", HTTP_GET, [](AsyncWebServerRequest *request) {
      |                                                    ^
G:\finalcolorwithcalibration\src\main.cpp:1885:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1885 |     if (request->hasParam("mode")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1887:7: note: +3, including nesting penalty of 2, nesting level increased to 3
 1887 |       if (mode == "dfrobot") {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1891:14: note: +1, nesting level increased to 3
 1891 |       } else if (mode == "custom") {
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:1895:9: note: +1, nesting level increased to 3
 1895 |       } else {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:1899:7: note: +1, nesting level increased to 2
 1899 |     } else {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1906:37: note: nesting level increased to 1
 1906 |   server.on("/api/debug", HTTP_GET, [](AsyncWebServerRequest *request) {
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1916:21: note: nesting level increased to 1
 1916 |   server.onNotFound([](AsyncWebServerRequest *request) {
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:1445:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1445 |   Logger::info("System startup initiated - Serial communication started at 115200 baud");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1448:3: warning: 'initializeIPAddresses' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1448 |   initializeIPAddresses();
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:154:13: note: resolves to this declaration
  154 | static void initializeIPAddresses() {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1451:7: warning: 'psramFound' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1451 |   if (psramFound()) {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-psram.h:34:6: note: resolves to this declaration
   34 | bool psramFound();
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1452:5: warning: variable 'psramSize' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
 1452 |     size_t psramSize = ESP.getPsramSize();
      |     ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:1453:5: warning: variable 'freePsram' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
 1453 |     size_t freePsram = ESP.getFreePsram();
      |     ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:1454:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1454 |     Logger::info("PSRAM detected and available");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1455:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1455 |     Logger::info("PSRAM total size: " + String(psramSize / BYTES_PER_KB) + " KB");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1455:39: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1455 |     Logger::info("PSRAM total size: " + String(psramSize / BYTES_PER_KB) + " KB");
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1455:74: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1455 |     Logger::info("PSRAM total size: " + String(psramSize / BYTES_PER_KB) + " KB");
      |                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1456:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1456 |     Logger::info("PSRAM free size: " + String(freePsram / BYTES_PER_KB) + " KB");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1456:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1456 |     Logger::info("PSRAM free size: " + String(freePsram / BYTES_PER_KB) + " KB");
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1456:73: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1456 |     Logger::info("PSRAM free size: " + String(freePsram / BYTES_PER_KB) + " KB");
      |                                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1457:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1457 |     Logger::info("PSRAM usage: " + String(((psramSize - freePsram) * PERCENTAGE_SCALE) / psramSize) + "%");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1457:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1457 |     Logger::info("PSRAM usage: " + String(((psramSize - freePsram) * PERCENTAGE_SCALE) / psramSize) + "%");
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1457:101: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1457 |     Logger::info("PSRAM usage: " + String(((psramSize - freePsram) * PERCENTAGE_SCALE) / psramSize) + "%");
      |                                                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1460:21: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
 1460 |     if (freePsram < 2 * 1024 * BYTES_PER_KB) {  // Less than 2MB free
      |                     ^
G:\finalcolorwithcalibration\src\main.cpp:1460:21: note: make conversion explicit to silence this warning
 1460 |     if (freePsram < 2 * 1024 * BYTES_PER_KB) {  // Less than 2MB free
      |                     ^~~~~~~~~~~~~~~~~~~~~~~
      |                     static_cast<size_t>(   )
G:\finalcolorwithcalibration\src\main.cpp:1460:21: note: perform multiplication in a wider type
 1460 |     if (freePsram < 2 * 1024 * BYTES_PER_KB) {  // Less than 2MB free
      |                     ^~~~~~~~
      |                     static_cast<long long>( )
G:\finalcolorwithcalibration\src\main.cpp:1461:7: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1461 |       Logger::warn("Low PSRAM available: " + String(freePsram / BYTES_PER_KB) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1461:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1461 |       Logger::warn("Low PSRAM available: " + String(freePsram / BYTES_PER_KB) +
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1461:79: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1461 |       Logger::warn("Low PSRAM available: " + String(freePsram / BYTES_PER_KB) +
      |                                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1465:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1465 |     Logger::error("PSRAM not found! This will severely limit color database functionality.");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1466:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1466 |     Logger::error("Please check hardware configuration and PSRAM initialization.");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1470:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1470 |   Logger::info("Total heap size: " + String(ESP.getHeapSize() / BYTES_PER_KB) + " KB");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1470:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1470 |   Logger::info("Total heap size: " + String(ESP.getHeapSize() / BYTES_PER_KB) + " KB");
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1470:79: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1470 |   Logger::info("Total heap size: " + String(ESP.getHeapSize() / BYTES_PER_KB) + " KB");
      |                                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1471:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1471 |   Logger::info("Free heap size: " + String(ESP.getFreeHeap() / BYTES_PER_KB) + " KB");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1471:35: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1471 |   Logger::info("Free heap size: " + String(ESP.getFreeHeap() / BYTES_PER_KB) + " KB");
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1471:78: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1471 |   Logger::info("Free heap size: " + String(ESP.getFreeHeap() / BYTES_PER_KB) + " KB");
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1474:3: warning: 'displayCurrentSettings' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1474 |   displayCurrentSettings();
      |   ^
src\sensor_settings.h:229:6: note: resolves to this declaration
  229 | void displayCurrentSettings();  // Declaration only - defined in main.cpp
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1478:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1478 |   Logger::debug("I2C initialized with SDA=3, SCL=4");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1480:3: warning: 'pinMode' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1480 |   pinMode(LEDpin, OUTPUT);
      |   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-gpio.h:74:6: note: resolves to this declaration
   74 | void pinMode(uint8_t pin, uint8_t mode);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1480:3: warning: no header providing "pinMode" is directly included [misc-include-cleaner]
   25 |   pinMode(LEDpin, OUTPUT);
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1480:19: warning: no header providing "OUTPUT" is directly included [misc-include-cleaner]
 1480 |   pinMode(LEDpin, OUTPUT);
      |                   ^
G:\finalcolorwithcalibration\src\main.cpp:1482:3: warning: 'analogWrite' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1482 |   analogWrite(LEDpin, settings.ledBrightness);
      |   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:98:6: note: resolves to this declaration
   98 | void analogWrite(uint8_t pin, int value);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1483:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1483 |   Logger::debug("LED pin configured, brightness set to: " + String(settings.ledBrightness));
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1483:59: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1483 |   Logger::debug("LED pin configured, brightness set to: " + String(settings.ledBrightness));
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1487:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1487 |   Logger::debug("UMS3 library initialized - ProS3 board peripherals ready");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1491:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1491 |   Logger::debug("NeoPixel brightness set for battery status indication");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1494:3: warning: variable 'initialBatteryVoltage' of type 'float' can be declared 'const' [misc-const-correctness]
 1494 |   float initialBatteryVoltage = getBatteryVoltage();
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:1494:33: warning: 'getBatteryVoltage' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1494 |   float initialBatteryVoltage = getBatteryVoltage();
      |                                 ^
G:\finalcolorwithcalibration\src\main.cpp:1263:7: note: resolves to this declaration
 1263 | float getBatteryVoltage() {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1495:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1495 |   Logger::info("Initial battery voltage: " + String(initialBatteryVoltage, 3) + "V");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1495:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1495 |   Logger::info("Initial battery voltage: " + String(initialBatteryVoltage, 3) + "V");
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1495:79: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1495 |   Logger::info("Initial battery voltage: " + String(initialBatteryVoltage, 3) + "V");
      |                                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1497:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1497 |   Logger::info("Initializing TCS3430 sensor...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1500:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1500 |     Logger::error("TCS3430 sensor initialization failed, retrying in 1 second...");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1501:5: warning: 'delay' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1501 |     delay(1000);
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:138:6: note: resolves to this declaration
  138 | void delay(uint32_t);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1503:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1503 |   Logger::info("TCS3430 sensor initialized successfully");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1506:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1506 |   Logger::debug("Configuring sensor parameters...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1508:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1508 |   Logger::debug("Auto zero mode set to 1");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1510:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1510 |   Logger::debug("Auto zero NTH iteration set to 0");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1512:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1512 |   Logger::debug("High gain disabled to prevent saturation on bright colors");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1514:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1514 |   Logger::debug("Integration time set to 0x" + String(settings.sensorIntegrationTime, HEX));
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1514:46: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1514 |   Logger::debug("Integration time set to 0x" + String(settings.sensorIntegrationTime, HEX));
      |                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1516:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1516 |   Logger::debug("ALS gain set to 2 (16x) for optimal accuracy");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1518:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1518 |   Logger::info("Sensor ready with final calibration parameters loaded");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1521:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1521 |   Logger::info("Initializing LittleFS filesystem...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1525:5: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1525 |     Logger::warn("LittleFS mount failed, attempting to format...");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1527:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1527 |       Logger::info("LittleFS formatted successfully");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1528:7: warning: 'delay' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1528 |       delay(100);  // Small delay after format
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:138:6: note: resolves to this declaration
  138 | void delay(uint32_t);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1530:9: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1530 |         Logger::info("LittleFS mounted after format");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1532:9: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1532 |         Logger::error("LittleFS mount failed even after format! System may be unstable.");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1536:7: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1536 |       Logger::error("LittleFS format failed! Check partition config.");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1540:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1540 |     Logger::info("LittleFS mounted successfully");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1544:3: warning: variable 'total' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
 1544 |   size_t total = LittleFS.totalBytes();
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:1545:3: warning: variable 'used' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
 1545 |   size_t used = LittleFS.usedBytes();
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:1546:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1546 |   Logger::info("LittleFS Total: " + String(total / BYTES_PER_KB) + " KB");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1546:35: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1546 |   Logger::info("LittleFS Total: " + String(total / BYTES_PER_KB) + " KB");
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1546:66: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1546 |   Logger::info("LittleFS Total: " + String(total / BYTES_PER_KB) + " KB");
      |                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1547:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1547 |   Logger::info("LittleFS Used: " + String(used / BYTES_PER_KB) + " KB");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1547:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1547 |   Logger::info("LittleFS Used: " + String(used / BYTES_PER_KB) + " KB");
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1547:64: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1547 |   Logger::info("LittleFS Used: " + String(used / BYTES_PER_KB) + " KB");
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1548:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1548 |   Logger::info("LittleFS Free: " + String((total - used) / BYTES_PER_KB) + " KB");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1548:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1548 |   Logger::info("LittleFS Free: " + String((total - used) / BYTES_PER_KB) + " KB");
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1548:74: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1548 |   Logger::info("LittleFS Free: " + String((total - used) / BYTES_PER_KB) + " KB");
      |                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1551:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1551 |   Logger::info("Loading color database...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1570:7: warning: 'loadColorDatabase' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1570 |   if (loadColorDatabase()) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:398:6: note: resolves to this declaration
  398 | bool loadColorDatabase() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1571:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1571 |     Logger::info("Color database loaded successfully");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1574:5: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1574 |     Logger::debug("Free heap after loading: " + String(esp_get_free_heap_size()));
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1574:47: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1574 |     Logger::debug("Free heap after loading: " + String(esp_get_free_heap_size()));
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1574:56: warning: 'esp_get_free_heap_size' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1574 |     Logger::debug("Free heap after loading: " + String(esp_get_free_heap_size()));
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\tools\sdk\esp32s3\include\esp_system\include\esp_system.h:108:10: note: resolves to this declaration
  108 | uint32_t esp_get_free_heap_size(void);
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1575:5: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1575 |     Logger::debug("Free PSRAM after loading: " + String(ESP.getFreePsram()));
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1575:48: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1575 |     Logger::debug("Free PSRAM after loading: " + String(ESP.getFreePsram()));
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1578:5: warning: 'analyzeSystemPerformance' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1578 |     analyzeSystemPerformance();
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:757:13: note: resolves to this declaration
  757 | static void analyzeSystemPerformance() {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1580:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1580 |     Logger::error("Could not load color database - color matching may not work");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1584:8: warning: 'connectToWiFiOrStartAP' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1584 |   if (!connectToWiFiOrStartAP()) {
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:1345:13: note: resolves to this declaration
 1345 | static bool connectToWiFiOrStartAP() {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1585:5: warning: 'error' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1585 |     Logger::error("Failed to establish network connectivity - system may not function properly");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:95:15: note: resolves to this declaration
   95 |   static void error(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1589:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1589 |   Logger::debug("Setting up web server routes...");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1590:28: warning: 'handleRoot' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1590 |   server.on("/", HTTP_GET, handleRoot);
      |                            ^
G:\finalcolorwithcalibration\src\main.cpp:876:13: note: resolves to this declaration
  876 | static void handleRoot(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1591:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1591 |   Logger::debug("Route registered: / -> handleRoot");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1592:38: warning: 'handleRoot' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1592 |   server.on("/index.html", HTTP_GET, handleRoot);
      |                                      ^
G:\finalcolorwithcalibration\src\main.cpp:876:13: note: resolves to this declaration
  876 | static void handleRoot(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1593:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1593 |   Logger::debug("Route registered: /index.html -> handleRoot");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1594:37: warning: 'handleCSS' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1594 |   server.on("/index.css", HTTP_GET, handleCSS);
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:891:13: note: resolves to this declaration
  891 | static void handleCSS(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1595:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1595 |   Logger::debug("Route registered: /index.css -> handleCSS");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1596:36: warning: 'handleJS' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1596 |   server.on("/index.js", HTTP_GET, handleJS);
      |                                    ^
G:\finalcolorwithcalibration\src\main.cpp:906:13: note: resolves to this declaration
  906 | static void handleJS(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1597:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1597 |   Logger::debug("Route registered: /index.js -> handleJS");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1598:37: warning: 'handleColorAPI' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1598 |   server.on("/api/color", HTTP_GET, handleColorAPI);
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:921:13: note: resolves to this declaration
  921 | static void handleColorAPI(AsyncWebServerRequest *request) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1599:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1599 |   Logger::debug("Route registered: /api/color -> handleColorAPI");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1602:42: warning: 'handleFastColorAPI' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1602 |   server.on("/api/color-fast", HTTP_GET, handleFastColorAPI);
      |                                          ^
G:\finalcolorwithcalibration\src\main.cpp:949:6: note: resolves to this declaration
  949 | void handleFastColorAPI(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1603:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1603 |   Logger::debug("Route registered: /api/color-fast -> handleFastColorAPI (fast sensor data only)");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1604:42: warning: 'handleColorNameAPI' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1604 |   server.on("/api/color-name", HTTP_GET, handleColorNameAPI);
      |                                          ^
G:\finalcolorwithcalibration\src\main.cpp:975:6: note: resolves to this declaration
  975 | void handleColorNameAPI(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1605:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1605 |   Logger::debug("Route registered: /api/color-name -> handleColorNameAPI (color name lookup only)");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1606:50: warning: 'handleForceColorLookup' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1606 |   server.on("/api/force-color-lookup", HTTP_GET, handleForceColorLookup);
      |                                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1002:6: note: resolves to this declaration
 1002 | void handleForceColorLookup(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1607:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1607 |   Logger::debug("Route registered: /api/force-color-lookup -> handleForceColorLookup (immediate "
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1611:39: warning: 'handleBatteryAPI' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1611 |   server.on("/api/battery", HTTP_GET, handleBatteryAPI);
      |                                       ^
G:\finalcolorwithcalibration\src\main.cpp:1295:6: note: resolves to this declaration
 1295 | void handleBatteryAPI(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1612:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1612 |   Logger::debug("Route registered: /api/battery -> handleBatteryAPI (battery voltage monitoring)");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1615:40: warning: 'handleGetSettings' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1615 |   server.on("/api/settings", HTTP_GET, handleGetSettings);
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:1061:6: note: resolves to this declaration
 1061 | void handleGetSettings(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1616:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1616 |   Logger::debug("Route registered: /api/settings (GET) -> handleGetSettings");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1619:50: warning: 'handleSetLedBrightness' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1619 |   server.on("/api/set-led-brightness", HTTP_GET, handleSetLedBrightness);
      |                                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1129:6: note: resolves to this declaration
 1129 | void handleSetLedBrightness(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1620:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1620 |   Logger::debug("Route registered: /api/set-led-brightness (GET) -> handleSetLedBrightness");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1622:52: warning: 'handleSetIntegrationTime' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1622 |   server.on("/api/set-integration-time", HTTP_GET, handleSetIntegrationTime);
      |                                                    ^
G:\finalcolorwithcalibration\src\main.cpp:1146:6: note: resolves to this declaration
 1146 | void handleSetIntegrationTime(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1623:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1623 |   Logger::debug("Route registered: /api/set-integration-time (GET) -> handleSetIntegrationTime");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1625:46: warning: 'handleSetIRCompensation' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1625 |   server.on("/api/set-ir-factors", HTTP_GET, handleSetIRCompensation);
      |                                              ^
G:\finalcolorwithcalibration\src\main.cpp:1163:6: note: resolves to this declaration
 1163 | void handleSetIRCompensation(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1626:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1626 |   Logger::debug("Route registered: /api/set-ir-factors (GET) -> handleSetIRCompensation");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1628:49: warning: 'handleSetColorSamples' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1628 |   server.on("/api/set-color-samples", HTTP_GET, handleSetColorSamples);
      |                                                 ^
G:\finalcolorwithcalibration\src\main.cpp:168:13: note: resolves to this declaration
  168 | static void handleSetColorSamples(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1629:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1629 |   Logger::debug("Route registered: /api/set-color-samples (GET) -> handleSetColorSamples");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1631:48: warning: 'handleSetSampleDelay' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1631 |   server.on("/api/set-sample-delay", HTTP_GET, handleSetSampleDelay);
      |                                                ^
G:\finalcolorwithcalibration\src\main.cpp:169:13: note: resolves to this declaration
  169 | static void handleSetSampleDelay(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1632:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1632 |   Logger::debug("Route registered: /api/set-sample-delay (GET) -> handleSetSampleDelay");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1634:41: warning: 'handleSetDebugSettings' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1634 |   server.on("/api/set-debug", HTTP_GET, handleSetDebugSettings);
      |                                         ^
G:\finalcolorwithcalibration\src\main.cpp:170:13: note: resolves to this declaration
  170 | static void handleSetDebugSettings(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1635:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1635 |   Logger::debug("Route registered: /api/set-debug (GET) -> handleSetDebugSettings");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1638:43: warning: 'handleGetCalibration' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1638 |   server.on("/api/calibration", HTTP_GET, handleGetCalibration);
      |                                           ^
G:\finalcolorwithcalibration\src\main.cpp:178:13: note: resolves to this declaration
  178 | static void handleGetCalibration(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1639:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1639 |   Logger::debug("Route registered: /api/calibration (GET) -> handleGetCalibration");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1641:44: warning: lambda has cognitive complexity of 41 (threshold 25) [readability-function-cognitive-complexity]
 1641 |   server.on("/api/calibration", HTTP_POST, [](AsyncWebServerRequest *request) {
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:1647:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1647 |     if (request->hasParam("redA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1652:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1652 |     if (request->hasParam("redB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1657:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1657 |     if (request->hasParam("redC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1662:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1662 |     if (request->hasParam("greenA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1667:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1667 |     if (request->hasParam("greenB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1672:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1672 |     if (request->hasParam("greenC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1677:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1677 |     if (request->hasParam("blueA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1682:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1682 |     if (request->hasParam("blueB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1687:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1687 |     if (request->hasParam("blueC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1693:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1693 |     if (request->hasParam("whiteRedA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1698:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1698 |     if (request->hasParam("whiteRedB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1703:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1703 |     if (request->hasParam("whiteRedC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1708:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1708 |     if (request->hasParam("whiteGreenA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1713:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1713 |     if (request->hasParam("whiteGreenB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1718:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1718 |     if (request->hasParam("whiteGreenC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1723:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1723 |     if (request->hasParam("whiteBlueA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1728:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1728 |     if (request->hasParam("whiteBlueB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1733:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1733 |     if (request->hasParam("whiteBlueC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1739:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1739 |     if (request->hasParam("greyRedA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1744:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1744 |     if (request->hasParam("greyRedB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1749:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1749 |     if (request->hasParam("greyRedC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1754:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1754 |     if (request->hasParam("greyGreenA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1759:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1759 |     if (request->hasParam("greyGreenB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1764:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1764 |     if (request->hasParam("greyGreenC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1769:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1769 |     if (request->hasParam("greyBlueA")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1774:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1774 |     if (request->hasParam("greyBlueB")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1779:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1779 |     if (request->hasParam("greyBlueC")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1785:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1785 |     if (request->hasParam("enableDynamicCalibration")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1789:60: note: +2, including nesting penalty of 1, nesting level increased to 2
 1789 |                   String(settings.enableDynamicCalibration ? "true" : "false");
      |                                                            ^
G:\finalcolorwithcalibration\src\main.cpp:1792:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1792 |     if (request->hasParam("dynamicThreshold")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1799:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1799 |     if (request->hasParam("useMatrixCalibration")) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1802:79: note: +2, including nesting penalty of 1, nesting level increased to 2
 1802 |           ",\"useMatrixCalibration\":" + String(settings.useMatrixCalibration ? "true" : "false");
      |                                                                               ^
G:\finalcolorwithcalibration\src\main.cpp:1806:30: note: nesting level increased to 1
 1806 |     auto updateMatrixArray = [&](const char *prefix, float *arr, size_t len) {
      |                              ^
G:\finalcolorwithcalibration\src\main.cpp:1807:7: note: +2, including nesting penalty of 1, nesting level increased to 2
 1807 |       for (size_t idx = 0; idx < len; ++idx) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1809:9: note: +3, including nesting penalty of 2, nesting level increased to 3
 1809 |         if (request->hasParam(key)) {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:1823:5: note: +1, including nesting penalty of 0, nesting level increased to 1
 1823 |     if (updated) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1836:7: note: +1, nesting level increased to 1
 1836 |     } else {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1644:23: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1644 |     String response = "{\"status\":\"success\"";
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~
      |                       R"({"status":"success")"
G:\finalcolorwithcalibration\src\main.cpp:1649:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1649 |       response += ",\"redA\":" + String(settings.redA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1649:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1649 |       response += ",\"redA\":" + String(settings.redA, DECIMAL_PRECISION_10);
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1654:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1654 |       response += ",\"redB\":" + String(settings.redB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1654:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1654 |       response += ",\"redB\":" + String(settings.redB, DECIMAL_PRECISION_6);
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1659:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1659 |       response += ",\"redC\":" + String(settings.redC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1659:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1659 |       response += ",\"redC\":" + String(settings.redC, 2);
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1664:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1664 |       response += ",\"greenA\":" + String(settings.greenA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1664:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1664 |       response += ",\"greenA\":" + String(settings.greenA, DECIMAL_PRECISION_10);
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1669:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1669 |       response += ",\"greenB\":" + String(settings.greenB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1669:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1669 |       response += ",\"greenB\":" + String(settings.greenB, DECIMAL_PRECISION_6);
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1674:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1674 |       response += ",\"greenC\":" + String(settings.greenC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1674:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1674 |       response += ",\"greenC\":" + String(settings.greenC, 2);
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1679:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1679 |       response += ",\"blueA\":" + String(settings.blueA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1679:33: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1679 |       response += ",\"blueA\":" + String(settings.blueA, DECIMAL_PRECISION_10);
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1684:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1684 |       response += ",\"blueB\":" + String(settings.blueB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1684:33: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1684 |       response += ",\"blueB\":" + String(settings.blueB, DECIMAL_PRECISION_6);
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1689:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1689 |       response += ",\"blueC\":" + String(settings.blueC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1689:33: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1689 |       response += ",\"blueC\":" + String(settings.blueC, 2);
      |                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1695:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1695 |       response += ",\"whiteRedA\":" + String(settings.whiteRedA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1695:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1695 |       response += ",\"whiteRedA\":" + String(settings.whiteRedA, DECIMAL_PRECISION_10);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1700:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1700 |       response += ",\"whiteRedB\":" + String(settings.whiteRedB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1700:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1700 |       response += ",\"whiteRedB\":" + String(settings.whiteRedB, DECIMAL_PRECISION_6);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1705:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1705 |       response += ",\"whiteRedC\":" + String(settings.whiteRedC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1705:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1705 |       response += ",\"whiteRedC\":" + String(settings.whiteRedC, 2);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1710:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1710 |       response += ",\"whiteGreenA\":" + String(settings.whiteGreenA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1710:39: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1710 |       response += ",\"whiteGreenA\":" + String(settings.whiteGreenA, DECIMAL_PRECISION_10);
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1715:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1715 |       response += ",\"whiteGreenB\":" + String(settings.whiteGreenB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1715:39: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1715 |       response += ",\"whiteGreenB\":" + String(settings.whiteGreenB, DECIMAL_PRECISION_6);
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1720:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1720 |       response += ",\"whiteGreenC\":" + String(settings.whiteGreenC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1720:39: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1720 |       response += ",\"whiteGreenC\":" + String(settings.whiteGreenC, 2);
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1725:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1725 |       response += ",\"whiteBlueA\":" + String(settings.whiteBlueA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1725:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1725 |       response += ",\"whiteBlueA\":" + String(settings.whiteBlueA, DECIMAL_PRECISION_10);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1730:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1730 |       response += ",\"whiteBlueB\":" + String(settings.whiteBlueB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1730:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1730 |       response += ",\"whiteBlueB\":" + String(settings.whiteBlueB, DECIMAL_PRECISION_6);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1735:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1735 |       response += ",\"whiteBlueC\":" + String(settings.whiteBlueC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1735:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1735 |       response += ",\"whiteBlueC\":" + String(settings.whiteBlueC, 2);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1741:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1741 |       response += ",\"greyRedA\":" + String(settings.greyRedA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1741:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1741 |       response += ",\"greyRedA\":" + String(settings.greyRedA, DECIMAL_PRECISION_10);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1746:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1746 |       response += ",\"greyRedB\":" + String(settings.greyRedB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1746:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1746 |       response += ",\"greyRedB\":" + String(settings.greyRedB, DECIMAL_PRECISION_6);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1751:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1751 |       response += ",\"greyRedC\":" + String(settings.greyRedC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1751:36: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1751 |       response += ",\"greyRedC\":" + String(settings.greyRedC, 2);
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1756:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1756 |       response += ",\"greyGreenA\":" + String(settings.greyGreenA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1756:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1756 |       response += ",\"greyGreenA\":" + String(settings.greyGreenA, DECIMAL_PRECISION_10);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1761:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1761 |       response += ",\"greyGreenB\":" + String(settings.greyGreenB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1761:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1761 |       response += ",\"greyGreenB\":" + String(settings.greyGreenB, DECIMAL_PRECISION_6);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1766:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1766 |       response += ",\"greyGreenC\":" + String(settings.greyGreenC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1766:38: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1766 |       response += ",\"greyGreenC\":" + String(settings.greyGreenC, 2);
      |                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1771:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1771 |       response += ",\"greyBlueA\":" + String(settings.greyBlueA, DECIMAL_PRECISION_10);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1771:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1771 |       response += ",\"greyBlueA\":" + String(settings.greyBlueA, DECIMAL_PRECISION_10);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1776:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1776 |       response += ",\"greyBlueB\":" + String(settings.greyBlueB, DECIMAL_PRECISION_6);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1776:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1776 |       response += ",\"greyBlueB\":" + String(settings.greyBlueB, DECIMAL_PRECISION_6);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1781:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1781 |       response += ",\"greyBlueC\":" + String(settings.greyBlueC, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1781:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1781 |       response += ",\"greyBlueC\":" + String(settings.greyBlueC, 2);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1787:66: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1787 |           request->getParam("enableDynamicCalibration")->value() == "true";
      |                                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:208:14: note: resolves to this declaration
  208 |         bool operator ==(const char *cstr) const {
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:1788:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1788 |       response += ",\"enableDynamicCalibration\":" +
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1788:52: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1788 |       response += ",\"enableDynamicCalibration\":" +
      |                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1794:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1794 |       response += ",\"dynamicThreshold\":" + String(settings.dynamicThreshold, 2);
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1794:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1794 |       response += ",\"dynamicThreshold\":" + String(settings.dynamicThreshold, 2);
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1800:90: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1800 |       settings.useMatrixCalibration = request->getParam("useMatrixCalibration")->value() == "true";
      |                                                                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:208:14: note: resolves to this declaration
  208 |         bool operator ==(const char *cstr) const {
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:1801:16: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1801 |       response +=
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1802:40: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1802 |           ",\"useMatrixCalibration\":" + String(settings.useMatrixCalibration ? "true" : "false");
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1808:9: warning: variable 'key' of type 'String' can be declared 'const' [misc-const-correctness]
 1808 |         String key = String(prefix) + String(idx);
      |         ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:1808:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1808 |         String key = String(prefix) + String(idx);
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1810:11: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1810 |           arr[idx] = request->getParam(key)->value().toFloat();
      |           ^
G:\finalcolorwithcalibration\src\main.cpp:1811:20: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1811 |           response += ",\"" + key + "\":" + String(arr[idx], DECIMAL_PRECISION_6);
      |                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1811:29: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1811 |           response += ",\"" + key + "\":" + String(arr[idx], DECIMAL_PRECISION_6);
      |                             ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1811:35: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1811 |           response += ",\"" + key + "\":" + String(arr[idx], DECIMAL_PRECISION_6);
      |                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1811:43: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1811 |           response += ",\"" + key + "\":" + String(arr[idx], DECIMAL_PRECISION_6);
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1811:52: warning: do not use pointer arithmetic [cppcoreguidelines-pro-bounds-pointer-arithmetic]
 1811 |           response += ",\"" + key + "\":" + String(arr[idx], DECIMAL_PRECISION_6);
      |                                                    ^
G:\finalcolorwithcalibration\src\main.cpp:1816:22: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1816 |     updateMatrixArray("brightMatrix", settings.brightMatrix, 9);
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:1806:30: note: resolves to this declaration
 1806 |     auto updateMatrixArray = [&](const char *prefix, float *arr, size_t len) {
      |                              ^
G:\finalcolorwithcalibration\src\main.cpp:1816:39: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1816 |     updateMatrixArray("brightMatrix", settings.brightMatrix, 9);
      |                                       ^
G:\finalcolorwithcalibration\src\main.cpp:1817:22: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1817 |     updateMatrixArray("brightOffset", settings.brightOffset, 3);
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:1806:30: note: resolves to this declaration
 1806 |     auto updateMatrixArray = [&](const char *prefix, float *arr, size_t len) {
      |                              ^
G:\finalcolorwithcalibration\src\main.cpp:1817:39: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1817 |     updateMatrixArray("brightOffset", settings.brightOffset, 3);
      |                                       ^
G:\finalcolorwithcalibration\src\main.cpp:1818:22: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1818 |     updateMatrixArray("darkMatrix", settings.darkMatrix, 9);
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:1806:30: note: resolves to this declaration
 1806 |     auto updateMatrixArray = [&](const char *prefix, float *arr, size_t len) {
      |                              ^
G:\finalcolorwithcalibration\src\main.cpp:1818:37: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1818 |     updateMatrixArray("darkMatrix", settings.darkMatrix, 9);
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1819:22: warning: 'operator()' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1819 |     updateMatrixArray("darkOffset", settings.darkOffset, 3);
      |                      ^
G:\finalcolorwithcalibration\src\main.cpp:1806:30: note: resolves to this declaration
 1806 |     auto updateMatrixArray = [&](const char *prefix, float *arr, size_t len) {
      |                              ^
G:\finalcolorwithcalibration\src\main.cpp:1819:37: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
 1819 |     updateMatrixArray("darkOffset", settings.darkOffset, 3);
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:1821:14: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1821 |     response += "}";
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:139:18: note: resolves to this declaration
  139 |         String & operator +=(const char *cstr) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:1824:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1824 |       Logger::info("Calibration coefficients updated");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1825:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1825 |       Logger::info("Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1825:30: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1825 |       Logger::info("Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1825:76: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1825 |       Logger::info("Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1825:84: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1825 |       Logger::info("Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1825:129: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1825 |       Logger::info("Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |                                                                                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1826:26: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1826 |                    " C=" + String(settings.redC, 2));
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1827:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1827 |       Logger::info("Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1827:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1827 |       Logger::info("Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1827:80: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1827 |       Logger::info("Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |                                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1827:88: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1827 |       Logger::info("Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1827:135: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1827 |       Logger::info("Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |                                                                                                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1828:26: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1828 |                    " C=" + String(settings.greenC, 2));
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1829:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1829 |       Logger::info("Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1829:31: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1829 |       Logger::info("Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1829:78: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1829 |       Logger::info("Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1829:86: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1829 |       Logger::info("Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |                                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1829:132: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1829 |       Logger::info("Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |                                                                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1830:26: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1830 |                    " C=" + String(settings.blueC, 2));
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1838:21: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1838 |                     "{\"error\":\"No valid calibration parameters provided\"}");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     R"({"error":"No valid calibration parameters provided"})"
G:\finalcolorwithcalibration\src\main.cpp:1841:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1841 |   Logger::debug("Route registered: /api/calibration (POST) -> handleSetCalibration");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1843:49: warning: 'handleTuneVividWhite' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1843 |   server.on("/api/tune-vivid-white", HTTP_POST, handleTuneVividWhite);
      |                                                 ^
G:\finalcolorwithcalibration\src\main.cpp:179:13: note: resolves to this declaration
  179 | static void handleTuneVividWhite(AsyncWebServerRequest *request);
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:1844:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1844 |   Logger::debug("Route registered: /api/tune-vivid-white (POST) -> handleTuneVividWhite");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1857:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1857 |     Logger::info("Settings reset to DFRobot library defaults");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1862:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1862 |   Logger::debug("Route registered: /api/reset-to-dfrobot (POST) -> reset to DFRobot defaults");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1877:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1877 |     Logger::info("Settings reset to custom quadratic calibration defaults");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1882:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1882 |   Logger::debug("Route registered: /api/reset-to-custom (POST) -> reset to custom defaults");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1886:7: warning: variable 'mode' of type 'String' can be declared 'const' [misc-const-correctness]
 1886 |       String mode = request->getParam("mode")->value();
      |       ^
      |              const 
G:\finalcolorwithcalibration\src\main.cpp:1887:16: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1887 |       if (mode == "dfrobot") {
      |                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:208:14: note: resolves to this declaration
  208 |         bool operator ==(const char *cstr) const {
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:1889:9: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1889 |         Logger::info("Calibration mode set to DFRobot library");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1890:52: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1890 |         request->send(HTTP_OK, "application/json", "{\"status\":\"success\",\"mode\":\"dfrobot\"}");
      |                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                    R"({"status":"success","mode":"dfrobot"})"
G:\finalcolorwithcalibration\src\main.cpp:1891:23: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1891 |       } else if (mode == "custom") {
      |                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:208:14: note: resolves to this declaration
  208 |         bool operator ==(const char *cstr) const {
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:1893:9: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1893 |         Logger::info("Calibration mode set to custom quadratic");
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1894:52: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1894 |         request->send(HTTP_OK, "application/json", "{\"status\":\"success\",\"mode\":\"custom\"}");
      |                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                    R"({"status":"success","mode":"custom"})"
G:\finalcolorwithcalibration\src\main.cpp:1897:23: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1897 |                       "{\"error\":\"Invalid mode. Use 'dfrobot' or 'custom'\"}");
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                       R"({"error":"Invalid mode. Use 'dfrobot' or 'custom'"})"
G:\finalcolorwithcalibration\src\main.cpp:1900:59: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1900 |       request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Missing mode parameter\"}");
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                           R"({"error":"Missing mode parameter"})"
G:\finalcolorwithcalibration\src\main.cpp:1903:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1903 |   Logger::debug("Route registered: /api/set-calibration-mode (GET) -> set calibration mode");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1907:5: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
 1907 |     String response = "{\"status\":\"ok\",\"message\":\"ESP32 API is working\",\"timestamp\":" +
      |     ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:1907:23: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 1907 |     String response = "{\"status\":\"ok\",\"message\":\"ESP32 API is working\",\"timestamp\":" +
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                       R"({"status":"ok","message":"ESP32 API is working","timestamp":)"
G:\finalcolorwithcalibration\src\main.cpp:1907:96: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1907 |     String response = "{\"status\":\"ok\",\"message\":\"ESP32 API is working\",\"timestamp\":" +
      |                                                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1908:30: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1908 |                       String(millis()) + "}";
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1908:40: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1908 |                       String(millis()) + "}";
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1913:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1913 |   Logger::debug("Route registered: /api/debug -> debug endpoint");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1917:5: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1917 |     Logger::debug("404 request received");
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1920:3: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1920 |   Logger::debug("404 handler registered");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1923:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1923 |   Logger::info("Web server started and listening on port 80");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1924:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1924 |   Logger::info("=== SYSTEM INITIALIZATION COMPLETE ===");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:1928:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1928 | void displayCurrentSettings() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1930:10: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
 1930 |   Serial.printf("WiFi: %s | Port: %d\n", WIFI_SSID, WEB_SERVER_PORT);
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1931:10: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
 1931 |   Serial.printf("Static IP: %s | Gateway: %s\n", STATIC_IP, GATEWAY_IP);
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1932:10: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
 1932 |   Serial.printf("KD-Tree: %s | Max Colors: %d\n", settings.enableKdtree ? "ENABLED" : "DISABLED",
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1934:10: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
 1934 |   Serial.printf("Color Samples: %d | Stability: %d\n", settings.colorReadingSamples,
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1936:10: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
 1936 |   Serial.printf("Sensor Distance: %dmm | LED Brightness: %d\n", settings.optimalSensorDistance,
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1938:10: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
 1938 |   Serial.printf("IR Compensation: IR1=%.3f | IR2=%.3f | RGB Limit=%d\n",
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1941:10: warning: do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]
 1941 |   Serial.printf("Integration Time: 0x%02X | Debug Level: %s\n", settings.sensorIntegrationTime,
      |          ^
G:\finalcolorwithcalibration\src\main.cpp:1946:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 1946 | void loop() {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1946:6: warning: function 'loop' has cognitive complexity of 44 (threshold 25) [readability-function-cognitive-complexity]
G:\finalcolorwithcalibration\src\main.cpp:1952:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1952 |   for (int i = 0; i < num_samples; i++) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1967:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 1967 |   if (settings.enableAutoAdjust) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1970:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 1970 |     if (satLevel > settings.autoSatHigh &&
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:1970:41: note: +1
 1970 |     if (satLevel > settings.autoSatHigh &&
      |                                         ^
G:\finalcolorwithcalibration\src\main.cpp:1975:7: note: +3, including nesting penalty of 2, nesting level increased to 3
 1975 |       if (settings.debugSensorReadings)
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:1978:12: note: +1, nesting level increased to 2
 1978 |     } else if (satLevel < settings.autoSatLow &&
      |            ^
G:\finalcolorwithcalibration\src\main.cpp:1978:47: note: +1
 1978 |     } else if (satLevel < settings.autoSatLow &&
      |                                               ^
G:\finalcolorwithcalibration\src\main.cpp:1983:7: note: +3, including nesting penalty of 2, nesting level increased to 3
 1983 |       if (settings.debugSensorReadings)
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:2021:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2021 |   if (!colorLookup.inProgress &&
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:2021:31: note: +1
 2021 |   if (!colorLookup.inProgress &&
      |                               ^
G:\finalcolorwithcalibration\src\main.cpp:2031:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 2031 |     if (colorLookup.needsUpdate || rgbDiff > 5) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:2031:33: note: +1
 2031 |     if (colorLookup.needsUpdate || rgbDiff > 5) {
      |                                 ^
G:\finalcolorwithcalibration\src\main.cpp:2051:7: note: +3, including nesting penalty of 2, nesting level increased to 3
 2051 |       if (settings.debugColorMatching) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:2054:9: note: +4, including nesting penalty of 3, nesting level increased to 4
 2054 |         if (settings.enableKdtree && kdTreeColorDB.isBuilt()) {
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:2054:35: note: +1
 2054 |         if (settings.enableKdtree && kdTreeColorDB.isBuilt()) {
      |                                   ^
G:\finalcolorwithcalibration\src\main.cpp:2058:13: note: +1, nesting level increased to 4
 2058 |             if (simpleColorDB.isOpen()) {
      |             ^
G:\finalcolorwithcalibration\src\main.cpp:2073:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2073 |   if (millis() - lastLogTime > 5000) {  // Log every 5 seconds to reduce overhead
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:2082:3: note: +1, including nesting penalty of 0, nesting level increased to 1
 2082 |   if (millis() - lastPerfCheck > 30000) {
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:2084:44: note: +2, including nesting penalty of 1, nesting level increased to 2
 2084 |     size_t currentFreePsram = psramFound() ? ESP.getFreePsram() : 0;
      |                                            ^
G:\finalcolorwithcalibration\src\main.cpp:2090:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 2090 |     if (settings.debugMemoryUsage) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:2094:7: note: +3, including nesting penalty of 2, nesting level increased to 3
 2094 |       if (lastFreeHeap > 0 && currentFreeHeap < lastFreeHeap - 10000) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:2094:28: note: +1
 2094 |       if (lastFreeHeap > 0 && currentFreeHeap < lastFreeHeap - 10000) {
      |                            ^
G:\finalcolorwithcalibration\src\main.cpp:2099:7: note: +3, including nesting penalty of 2, nesting level increased to 3
 2099 |       if (lastFreePsram > 0 && currentFreePsram < lastFreePsram - 100000) {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:2099:29: note: +1
 2099 |       if (lastFreePsram > 0 && currentFreePsram < lastFreePsram - 100000) {
      |                             ^
G:\finalcolorwithcalibration\src\main.cpp:2106:5: note: +2, including nesting penalty of 1, nesting level increased to 2
 2106 |     if (currentFreePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB) && settings.enableKdtree) {
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:2106:68: note: +1
 2106 |     if (currentFreePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB) && settings.enableKdtree) {
      |                                                                    ^
G:\finalcolorwithcalibration\src\main.cpp:1950:13: warning: invalid case style for constant 'num_samples' [readability-identifier-naming]
 1950 |   const int num_samples = settings.colorReadingSamples;
      |             ^~~~~~~~~~~
      |             NUM_SAMPLES
 1951 |   uint32_t sumX = 0, sumY = 0, sumZ = 0, sumIR1 = 0, sumIR2 = 0;
 1952 |   for (int i = 0; i < num_samples; i++) {
      |                       ~~~~~~~~~~~
      |                       NUM_SAMPLES
 1953 |     sumX += TCS3430.getXData();
 1954 |     sumY += TCS3430.getYData();
 1955 |     sumZ += TCS3430.getZData();
 1956 |     sumIR1 += TCS3430.getIR1Data();
 1957 |     sumIR2 += TCS3430.getIR2Data();
 1958 |     delay(settings.sensorSampleDelay);  // Use runtime setting
 1959 |   }
 1960 |   uint16_t XData = sumX / num_samples;
      |                           ~~~~~~~~~~~
      |                           NUM_SAMPLES
 1961 |   uint16_t YData = sumY / num_samples;
      |                           ~~~~~~~~~~~
      |                           NUM_SAMPLES
 1962 |   uint16_t ZData = sumZ / num_samples;
      |                           ~~~~~~~~~~~
      |                           NUM_SAMPLES
 1963 |   uint16_t IR1Data = sumIR1 / num_samples;
      |                               ~~~~~~~~~~~
      |                               NUM_SAMPLES
 1964 |   uint16_t IR2Data = sumIR2 / num_samples;
      |                               ~~~~~~~~~~~
      |                               NUM_SAMPLES
G:\finalcolorwithcalibration\src\main.cpp:1951:3: warning: no header providing "uint32_t" is directly included [misc-include-cleaner]
 1951 |   uint32_t sumX = 0, sumY = 0, sumZ = 0, sumIR1 = 0, sumIR2 = 0;
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1951:3: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
 1951 |   uint32_t sumX = 0, sumY = 0, sumZ = 0, sumIR1 = 0, sumIR2 = 0;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
G:\finalcolorwithcalibration\src\main.cpp:1958:5: warning: 'delay' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1958 |     delay(settings.sensorSampleDelay);  // Use runtime setting
      |     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:138:6: note: resolves to this declaration
  138 | void delay(uint32_t);
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1960:3: warning: variable 'XData' of type 'uint16_t' (aka 'unsigned short') can be declared 'const' [misc-const-correctness]
 1960 |   uint16_t XData = sumX / num_samples;
      |   ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:1960:12: warning: invalid case style for variable 'XData' [readability-identifier-naming]
 1960 |   uint16_t XData = sumX / num_samples;
      |            ^~~~~
      |            xData
 1961 |   uint16_t YData = sumY / num_samples;
 1962 |   uint16_t ZData = sumZ / num_samples;
 1963 |   uint16_t IR1Data = sumIR1 / num_samples;
 1964 |   uint16_t IR2Data = sumIR2 / num_samples;
 1965 | 
 1966 |   // Auto-adjust integration time if enabled
 1967 |   if (settings.enableAutoAdjust) {
 1968 |     uint16_t maxChannel = max(max(XData, YData), ZData);
      |                                   ~~~~~
      |                                   xData
G:\finalcolorwithcalibration\src\main.cpp:1961:3: warning: variable 'YData' of type 'uint16_t' (aka 'unsigned short') can be declared 'const' [misc-const-correctness]
 1961 |   uint16_t YData = sumY / num_samples;
      |   ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:1961:12: warning: invalid case style for variable 'YData' [readability-identifier-naming]
 1961 |   uint16_t YData = sumY / num_samples;
      |            ^~~~~
      |            yData
 1962 |   uint16_t ZData = sumZ / num_samples;
 1963 |   uint16_t IR1Data = sumIR1 / num_samples;
 1964 |   uint16_t IR2Data = sumIR2 / num_samples;
 1965 | 
 1966 |   // Auto-adjust integration time if enabled
 1967 |   if (settings.enableAutoAdjust) {
 1968 |     uint16_t maxChannel = max(max(XData, YData), ZData);
      |                                          ~~~~~
      |                                          yData
G:\finalcolorwithcalibration\src\main.cpp:1962:12: warning: invalid case style for variable 'ZData' [readability-identifier-naming]
 1962 |   uint16_t ZData = sumZ / num_samples;
      |            ^~~~~
      |            zData
 1963 |   uint16_t IR1Data = sumIR1 / num_samples;
 1964 |   uint16_t IR2Data = sumIR2 / num_samples;
 1965 | 
 1966 |   // Auto-adjust integration time if enabled
 1967 |   if (settings.enableAutoAdjust) {
 1968 |     uint16_t maxChannel = max(max(XData, YData), ZData);
      |                                                  ~~~~~
      |                                                  zData
G:\finalcolorwithcalibration\src\main.cpp:1963:3: warning: variable 'IR1Data' of type 'uint16_t' (aka 'unsigned short') can be declared 'const' [misc-const-correctness]
 1963 |   uint16_t IR1Data = sumIR1 / num_samples;
      |   ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:1963:12: warning: invalid case style for variable 'IR1Data' [readability-identifier-naming]
 1963 |   uint16_t IR1Data = sumIR1 / num_samples;
      |            ^~~~~~~
      |            iR1Data
G:\finalcolorwithcalibration\src\main.cpp:1964:3: warning: variable 'IR2Data' of type 'uint16_t' (aka 'unsigned short') can be declared 'const' [misc-const-correctness]
 1964 |   uint16_t IR2Data = sumIR2 / num_samples;
      |   ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:1964:12: warning: invalid case style for variable 'IR2Data' [readability-identifier-naming]
 1964 |   uint16_t IR2Data = sumIR2 / num_samples;
      |            ^~~~~~~
      |            iR2Data
G:\finalcolorwithcalibration\src\main.cpp:1969:5: warning: variable 'satLevel' of type 'float' can be declared 'const' [misc-const-correctness]
 1969 |     float satLevel = (float)maxChannel / settings.sensorSaturationThreshold;
      |     ^
      |           const 
G:\finalcolorwithcalibration\src\main.cpp:1969:42: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1969 |     float satLevel = (float)maxChannel / settings.sensorSaturationThreshold;
      |                                          ^
G:\finalcolorwithcalibration\src\main.cpp:1972:7: warning: variable 'newTime' of type 'int' can be declared 'const' [misc-const-correctness]
 1972 |       int newTime = (int)settings.sensorIntegrationTime - (int)settings.integrationStep;
      |       ^
      |           const 
G:\finalcolorwithcalibration\src\main.cpp:1975:40: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
 1975 |       if (settings.debugSensorReadings)
      |                                        ^
      |                                         {
 1976 |         Serial.println("[AUTO] Decreased integration to " +
 1977 |                        String(settings.sensorIntegrationTime, HEX));
      |                                                                     
G:\finalcolorwithcalibration\src\main.cpp:1976:59: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1976 |         Serial.println("[AUTO] Decreased integration to " +
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1980:7: warning: variable 'newTime' of type 'int' can be declared 'const' [misc-const-correctness]
 1980 |       int newTime = (int)settings.sensorIntegrationTime + (int)settings.integrationStep;
      |       ^
      |           const 
G:\finalcolorwithcalibration\src\main.cpp:1983:40: warning: statement should be inside braces [hicpp-braces-around-statements,readability-braces-around-statements]
 1983 |       if (settings.debugSensorReadings)
      |                                        ^
      |                                         {
 1984 |         Serial.println("[AUTO] Increased integration to " +
 1985 |                        String(settings.sensorIntegrationTime, HEX));
      |                                                                     
G:\finalcolorwithcalibration\src\main.cpp:1984:59: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1984 |         Serial.println("[AUTO] Increased integration to " +
      |                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:1989:3: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
 1989 |   uint8_t R, G, B;
      |   ^~~~~~~~~~~~~~~~
G:\finalcolorwithcalibration\src\main.cpp:1989:11: warning: variable 'R' is not initialized [cppcoreguidelines-init-variables]
 1989 |   uint8_t R, G, B;
      |           ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1989:11: warning: variable name 'R' is too short, expected at least 3 characters [readability-identifier-length]
G:\finalcolorwithcalibration\src\main.cpp:1989:11: warning: invalid case style for variable 'R' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1989:14: warning: variable 'G' is not initialized [cppcoreguidelines-init-variables]
 1989 |   uint8_t R, G, B;
      |              ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1989:14: warning: variable name 'G' is too short, expected at least 3 characters [readability-identifier-length]
G:\finalcolorwithcalibration\src\main.cpp:1989:14: warning: invalid case style for variable 'G' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1989:17: warning: variable 'B' is not initialized [cppcoreguidelines-init-variables]
 1989 |   uint8_t R, G, B;
      |                 ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1989:17: warning: variable name 'B' is too short, expected at least 3 characters [readability-identifier-length]
G:\finalcolorwithcalibration\src\main.cpp:1989:17: warning: invalid case style for variable 'B' [readability-identifier-naming]
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1992:3: warning: 'convertXYZtoRGB_Calibrated' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 1992 |   convertXYZtoRGB_Calibrated(XData, YData, ZData, IR1Data, IR2Data, R, G, B);
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:1184:6: note: resolves to this declaration
 1184 | void convertXYZtoRGB_Calibrated(uint16_t X, uint16_t Y, uint16_t Z, uint16_t IR1, uint16_t IR2,
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:1995:3: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
 1995 |   static float smoothed_R = R, smoothed_G = G, smoothed_B = B;
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
G:\finalcolorwithcalibration\src\main.cpp:1995:16: warning: invalid case style for variable 'smoothed_R' [readability-identifier-naming]
 1995 |   static float smoothed_R = R, smoothed_G = G, smoothed_B = B;
      |                ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1995:32: warning: invalid case style for variable 'smoothed_G' [readability-identifier-naming]
 1995 |   static float smoothed_R = R, smoothed_G = G, smoothed_B = B;
      |                                ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1995:48: warning: invalid case style for variable 'smoothed_B' [readability-identifier-naming]
 1995 |   static float smoothed_R = R, smoothed_G = G, smoothed_B = B;
      |                                                ^
note: this fix will not be applied because it overlaps with another fix
G:\finalcolorwithcalibration\src\main.cpp:1996:15: warning: invalid case style for constant 'smoothing_factor' [readability-identifier-naming]
 1996 |   const float smoothing_factor = 0.05f;  // Very light smoothing to reduce artifacts without lag
      |               ^~~~~~~~~~~~~~~~
      |               SMOOTHING_FACTOR
 1997 |   smoothed_R = smoothed_R * smoothing_factor + R * (1.0f - smoothing_factor);
      |                             ~~~~~~~~~~~~~~~~               ~~~~~~~~~~~~~~~~
      |                             SMOOTHING_FACTOR               SMOOTHING_FACTOR
 1998 |   smoothed_G = smoothed_G * smoothing_factor + G * (1.0f - smoothing_factor);
      |                             ~~~~~~~~~~~~~~~~               ~~~~~~~~~~~~~~~~
      |                             SMOOTHING_FACTOR               SMOOTHING_FACTOR
 1999 |   smoothed_B = smoothed_B * smoothing_factor + B * (1.0f - smoothing_factor);
      |                             ~~~~~~~~~~~~~~~~               ~~~~~~~~~~~~~~~~
      |                             SMOOTHING_FACTOR               SMOOTHING_FACTOR
G:\finalcolorwithcalibration\src\main.cpp:1997:48: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1997 |   smoothed_R = smoothed_R * smoothing_factor + R * (1.0f - smoothing_factor);
      |                                                ^
G:\finalcolorwithcalibration\src\main.cpp:1998:48: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1998 |   smoothed_G = smoothed_G * smoothing_factor + G * (1.0f - smoothing_factor);
      |                                                ^
G:\finalcolorwithcalibration\src\main.cpp:1999:48: warning: narrowing conversion from 'int' to 'float' [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
 1999 |   smoothed_B = smoothed_B * smoothing_factor + B * (1.0f - smoothing_factor);
      |                                                ^
G:\finalcolorwithcalibration\src\main.cpp:2002:3: warning: variable 'batteryVoltage' of type 'float' can be declared 'const' [misc-const-correctness]
 2002 |   float batteryVoltage = getBatteryVoltage();
      |   ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:2002:26: warning: 'getBatteryVoltage' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2002 |   float batteryVoltage = getBatteryVoltage();
      |                          ^
G:\finalcolorwithcalibration\src\main.cpp:1263:7: note: resolves to this declaration
 1263 | float getBatteryVoltage() {
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:2005:25: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2005 |   currentColorData.fast = {XData,
      |                         ^
G:\finalcolorwithcalibration\src\main.cpp:850:8: note: resolves to this declaration
  850 | struct FastColorData {
      |        ^
G:\finalcolorwithcalibration\src\main.cpp:2010:37: warning: 'round' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2010 |                            (uint8_t)round(smoothed_R),
      |                                     ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:238:40: note: resolves to this declaration
  238 | _NODISCARD _Check_return_ inline float round(_In_ float _Xx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:2010:37: warning: no header providing "round" is directly included [misc-include-cleaner]
 2010 |                            (uint8_t)round(smoothed_R),
      |                                     ^
G:\finalcolorwithcalibration\src\main.cpp:2011:37: warning: 'round' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2011 |                            (uint8_t)round(smoothed_G),
      |                                     ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:238:40: note: resolves to this declaration
  238 | _NODISCARD _Check_return_ inline float round(_In_ float _Xx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:2012:37: warning: 'round' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2012 |                            (uint8_t)round(smoothed_B),  // Integer values for web
      |                                     ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:238:40: note: resolves to this declaration
  238 | _NODISCARD _Check_return_ inline float round(_In_ float _Xx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:2017:28: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2017 |                            millis()};
      |                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2020:3: warning: variable 'currentTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
 2020 |   unsigned long currentTime = millis();
      |   ^
      |                 const 
G:\finalcolorwithcalibration\src\main.cpp:2020:31: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2020 |   unsigned long currentTime = millis();
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2024:5: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
 2024 |     uint8_t currentR = (uint8_t)round(smoothed_R);
      |     ^~~~~~~
      |     auto
G:\finalcolorwithcalibration\src\main.cpp:2024:5: warning: variable 'currentR' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
 2024 |     uint8_t currentR = (uint8_t)round(smoothed_R);
      |     ^
      |             const 
G:\finalcolorwithcalibration\src\main.cpp:2024:33: warning: 'round' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2024 |     uint8_t currentR = (uint8_t)round(smoothed_R);
      |                                 ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:238:40: note: resolves to this declaration
  238 | _NODISCARD _Check_return_ inline float round(_In_ float _Xx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:2025:5: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
 2025 |     uint8_t currentG = (uint8_t)round(smoothed_G);
      |     ^~~~~~~
      |     auto
G:\finalcolorwithcalibration\src\main.cpp:2025:5: warning: variable 'currentG' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
 2025 |     uint8_t currentG = (uint8_t)round(smoothed_G);
      |     ^
      |             const 
G:\finalcolorwithcalibration\src\main.cpp:2025:33: warning: 'round' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2025 |     uint8_t currentG = (uint8_t)round(smoothed_G);
      |                                 ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:238:40: note: resolves to this declaration
  238 | _NODISCARD _Check_return_ inline float round(_In_ float _Xx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:2026:5: warning: use auto when initializing with a cast to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]
 2026 |     uint8_t currentB = (uint8_t)round(smoothed_B);
      |     ^~~~~~~
      |     auto
G:\finalcolorwithcalibration\src\main.cpp:2026:5: warning: variable 'currentB' of type 'uint8_t' (aka 'unsigned char') can be declared 'const' [misc-const-correctness]
 2026 |     uint8_t currentB = (uint8_t)round(smoothed_B);
      |     ^
      |             const 
G:\finalcolorwithcalibration\src\main.cpp:2026:33: warning: 'round' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2026 |     uint8_t currentB = (uint8_t)round(smoothed_B);
      |                                 ^
C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.38.33130\include\cmath:238:40: note: resolves to this declaration
  238 | _NODISCARD _Check_return_ inline float round(_In_ float _Xx) noexcept /* strengthened */ {
      |                                        ^
G:\finalcolorwithcalibration\src\main.cpp:2028:5: warning: variable 'rgbDiff' of type 'int' can be declared 'const' [misc-const-correctness]
 2028 |     int rgbDiff = abs(currentR - colorLookup.lastR) + abs(currentG - colorLookup.lastG) +
      |     ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:2028:19: warning: no header providing "abs" is directly included [misc-include-cleaner]
   26 |     int rgbDiff = abs(currentR - colorLookup.lastR) + abs(currentG - colorLookup.lastG) +
      |                   ^
G:\finalcolorwithcalibration\src\main.cpp:2039:7: warning: variable 'colorSearchStart' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
 2039 |       unsigned long colorSearchStart = micros();
      |       ^
      |                     const 
G:\finalcolorwithcalibration\src\main.cpp:2039:40: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2039 |       unsigned long colorSearchStart = micros();
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2040:7: warning: variable 'colorName' of type 'String' can be declared 'const' [misc-const-correctness]
 2040 |       String colorName = findClosestDuluxColor(currentR, currentG, currentB);
      |       ^
      |              const 
G:\finalcolorwithcalibration\src\main.cpp:2040:26: warning: 'findClosestDuluxColor' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2040 |       String colorName = findClosestDuluxColor(currentR, currentG, currentB);
      |                          ^
G:\finalcolorwithcalibration\src\main.cpp:642:15: note: resolves to this declaration
  642 | static String findClosestDuluxColor(uint8_t r, uint8_t g, uint8_t b) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2041:7: warning: variable 'colorSearchTime' of type 'unsigned long' can be declared 'const' [misc-const-correctness]
 2041 |       unsigned long colorSearchTime = micros() - colorSearchStart;
      |       ^
      |                     const 
G:\finalcolorwithcalibration\src\main.cpp:2041:39: warning: 'micros' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2041 |       unsigned long colorSearchTime = micros() - colorSearchStart;
      |                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:136:15: note: resolves to this declaration
  136 | unsigned long micros();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2044:34: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2044 |       currentColorData.colorName = colorName;
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:2047:36: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2047 |       colorLookup.currentColorName = colorName;
      |                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:104:18: note: resolves to this declaration
  104 |         String & operator =(const String &rhs);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:2055:24: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2055 |           searchMethod = "KD-Tree";
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:2059:24: warning: 'operator=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2059 |           searchMethod = "Binary DB";
      |                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:105:18: note: resolves to this declaration
  105 |         String & operator =(const char *cstr);
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:2062:9: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2062 |         Logger::debug("Color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2062:44: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2062 |         Logger::debug("Color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2062:63: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2062 |         Logger::debug("Color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2062:69: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2062 |         Logger::debug("Color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2062:88: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2062 |         Logger::debug("Color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2062:94: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2062 |         Logger::debug("Color lookup: RGB(" + String(currentR) + "," + String(currentG) + "," +
      |                                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2063:40: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2063 |                       String(currentB) + ") -> " + colorName +
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2063:50: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2063 |                       String(currentB) + ") -> " + colorName +
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2063:62: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2063 |                       String(currentB) + ") -> " + colorName +
      |                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2064:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2064 |                       " | Search: " + String(colorSearchTime) + "├Ä┬╝s (" + searchMethod + ")");
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2064:63: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2064 |                       " | Search: " + String(colorSearchTime) + "├Ä┬╝s (" + searchMethod + ")");
      |                                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2064:75: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2064 |                       " | Search: " + String(colorSearchTime) + "├Ä┬╝s (" + searchMethod + ")");
      |                                                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2064:90: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2064 |                       " | Search: " + String(colorSearchTime) + "├Ä┬╝s (" + searchMethod + ")");
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2073:7: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2073 |   if (millis() - lastLogTime > 5000) {  // Log every 5 seconds to reduce overhead
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2074:5: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2074 |     Logger::info("XYZ: " + String(XData) + "," + String(YData) + "," + String(ZData) + " | RGB: R" +
      |     ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2074:26: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2074 |     Logger::info("XYZ: " + String(XData) + "," + String(YData) + "," + String(ZData) + " | RGB: R" +
      |                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2074:42: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2074 |     Logger::info("XYZ: " + String(XData) + "," + String(YData) + "," + String(ZData) + " | RGB: R" +
      |                                          ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2074:48: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2074 |     Logger::info("XYZ: " + String(XData) + "," + String(YData) + "," + String(ZData) + " | RGB: R" +
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2074:64: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2074 |     Logger::info("XYZ: " + String(XData) + "," + String(YData) + "," + String(ZData) + " | RGB: R" +
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2074:70: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2074 |     Logger::info("XYZ: " + String(XData) + "," + String(YData) + "," + String(ZData) + " | RGB: R" +
      |                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2074:86: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2074 |     Logger::info("XYZ: " + String(XData) + "," + String(YData) + "," + String(ZData) + " | RGB: R" +
      |                                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2074:100: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2074 |     Logger::info("XYZ: " + String(XData) + "," + String(YData) + "," + String(ZData) + " | RGB: R" +
      |                                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2075:40: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2075 |                  String(smoothed_R, 2) + " G" + String(smoothed_G, 2) + " B" +
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2075:47: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2075 |                  String(smoothed_R, 2) + " G" + String(smoothed_G, 2) + " B" +
      |                                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2075:71: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2075 |                  String(smoothed_R, 2) + " G" + String(smoothed_G, 2) + " B" +
      |                                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2075:78: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2075 |                  String(smoothed_R, 2) + " G" + String(smoothed_G, 2) + " B" +
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2076:40: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2076 |                  String(smoothed_B, 2) + " | Color: " + currentColorData.colorName +
      |                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2076:55: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2076 |                  String(smoothed_B, 2) + " | Color: " + currentColorData.colorName +
      |                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2076:84: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2076 |                  String(smoothed_B, 2) + " | Color: " + currentColorData.colorName +
      |                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2077:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2077 |                  " | Last search: " + String(currentColorData.colorSearchDuration) + "├Ä┬╝s");
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2077:84: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2077 |                  " | Last search: " + String(currentColorData.colorSearchDuration) + "├Ä┬╝s");
      |                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2078:19: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2078 |     lastLogTime = millis();
      |                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2082:7: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2082 |   if (millis() - lastPerfCheck > 30000) {
      |       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2083:5: warning: variable 'currentFreeHeap' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
 2083 |     size_t currentFreeHeap = ESP.getFreeHeap();
      |     ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:2084:5: warning: variable 'currentFreePsram' of type 'size_t' (aka 'unsigned long long') can be declared 'const' [misc-const-correctness]
 2084 |     size_t currentFreePsram = psramFound() ? ESP.getFreePsram() : 0;
      |     ^
      |            const 
G:\finalcolorwithcalibration\src\main.cpp:2084:31: warning: 'psramFound' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2084 |     size_t currentFreePsram = psramFound() ? ESP.getFreePsram() : 0;
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal-psram.h:34:6: note: resolves to this declaration
   34 | bool psramFound();
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:2091:7: warning: 'debug' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2091 |       Logger::debug("Performance Monitor: Heap=" + String(currentFreeHeap / BYTES_PER_KB) +
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:116:15: note: resolves to this declaration
  116 |   static void debug(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2091:50: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2091 |       Logger::debug("Performance Monitor: Heap=" + String(currentFreeHeap / BYTES_PER_KB) +
      |                                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2091:91: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2091 |       Logger::debug("Performance Monitor: Heap=" + String(currentFreeHeap / BYTES_PER_KB) +
      |                                                                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2092:34: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2092 |                     "KB, PSRAM=" + String(currentFreePsram / BYTES_PER_KB) + "KB");
      |                                  ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2092:76: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2092 |                     "KB, PSRAM=" + String(currentFreePsram / BYTES_PER_KB) + "KB");
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2095:9: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2095 |         Logger::warn("Heap memory decrease detected: " +
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2095:56: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2095 |         Logger::warn("Heap memory decrease detected: " +
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2096:78: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2096 |                      String((lastFreeHeap - currentFreeHeap) / BYTES_PER_KB) + "KB");
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2100:9: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2100 |         Logger::warn(
      |         ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2101:41: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2101 |             "PSRAM decrease detected: " + String((lastFreePsram - currentFreePsram) / BYTES_PER_KB) + "KB");
      |                                         ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2101:101: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2101 |             "PSRAM decrease detected: " + String((lastFreePsram - currentFreePsram) / BYTES_PER_KB) + "KB");
      |                                                                                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2106:29: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
 2106 |     if (currentFreePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB) && settings.enableKdtree) {
      |                             ^
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^
G:\finalcolorwithcalibration\src\main.cpp:2106:29: note: make conversion explicit to silence this warning
 2106 |     if (currentFreePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB) && settings.enableKdtree) {
      |                             ^                                    
      |                             static_cast<size_t>(                 )
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^
G:\finalcolorwithcalibration\src\main.cpp:2106:29: note: perform multiplication in a wider type
 2106 |     if (currentFreePsram < (PSRAM_SAFETY_MARGIN_KB * BYTES_PER_KB) && settings.enableKdtree) {
      |                             ^
      |                             static_cast<long long>( )
src\sensor_settings.h:116:32: note: expanded from macro 'PSRAM_SAFETY_MARGIN_KB'
  116 | #define PSRAM_SAFETY_MARGIN_KB 2048   // ≡ƒÆ╛ PSRAM to keep free in KB (default: 2048)
      |                                ^~~~
G:\finalcolorwithcalibration\src\main.cpp:2107:7: warning: 'warn' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2107 |       Logger::warn("PSRAM low - disabling KD-tree to conserve memory");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:102:15: note: resolves to this declaration
  102 |   static void warn(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2113:21: warning: 'millis' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2113 |     lastPerfCheck = millis();
      |                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\esp32-hal.h:137:15: note: resolves to this declaration
  137 | unsigned long millis();
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2118:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 2118 | void handleSetColorSamples(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:2120:5: warning: variable 'samples' of type 'int' can be declared 'const' [misc-const-correctness]
 2120 |     int samples = request->getParam("value")->value().toInt();
      |     ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:2123:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2123 |       Logger::info("Color samples updated to: " + String(samples));
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2123:49: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2123 |       Logger::info("Color samples updated to: " + String(samples));
      |                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2125:21: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 2125 |                     "{\"status\":\"success\",\"colorSamples\":" + String(samples) + "}");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     R"({"status":"success","colorSamples":)"
G:\finalcolorwithcalibration\src\main.cpp:2125:65: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2125 |                     "{\"status\":\"success\",\"colorSamples\":" + String(samples) + "}");
      |                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2125:83: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2125 |                     "{\"status\":\"success\",\"colorSamples\":" + String(samples) + "}");
      |                                                                                   ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2127:59: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 2127 |       request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Color samples must be 1-10\"}");
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                           R"({"error":"Color samples must be 1-10"})"
G:\finalcolorwithcalibration\src\main.cpp:2130:57: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 2130 |     request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Missing value parameter\"}");
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                         R"({"error":"Missing value parameter"})"
G:\finalcolorwithcalibration\src\main.cpp:2134:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 2134 | void handleSetSampleDelay(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:2136:5: warning: variable 'delay' of type 'int' can be declared 'const' [misc-const-correctness]
 2136 |     int delay = request->getParam("value")->value().toInt();
      |     ^
      |         const 
G:\finalcolorwithcalibration\src\main.cpp:2139:7: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2139 |       Logger::info("Sample delay updated to: " + String(delay) + "ms");
      |       ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2139:48: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2139 |       Logger::info("Sample delay updated to: " + String(delay) + "ms");
      |                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2139:64: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2139 |       Logger::info("Sample delay updated to: " + String(delay) + "ms");
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2141:21: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 2141 |                     "{\"status\":\"success\",\"sampleDelay\":" + String(delay) + "}");
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                     R"({"status":"success","sampleDelay":)"
G:\finalcolorwithcalibration\src\main.cpp:2141:64: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2141 |                     "{\"status\":\"success\",\"sampleDelay\":" + String(delay) + "}");
      |                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2141:80: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2141 |                     "{\"status\":\"success\",\"sampleDelay\":" + String(delay) + "}");
      |                                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2143:59: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 2143 |       request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Sample delay must be 1-50ms\"}");
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                           R"({"error":"Sample delay must be 1-50ms"})"
G:\finalcolorwithcalibration\src\main.cpp:2146:57: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 2146 |     request->send(HTTP_BAD_REQUEST, "application/json", "{\"error\":\"Missing value parameter\"}");
      |                                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                         R"({"error":"Missing value parameter"})"
G:\finalcolorwithcalibration\src\main.cpp:2150:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 2150 | void handleSetDebugSettings(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:2152:21: warning: escaped string literal can be written as a raw string literal [modernize-raw-string-literal]
 2152 |   String response = "{\"status\":\"success\"";
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~~
      |                     R"({"status":"success")"
G:\finalcolorwithcalibration\src\main.cpp:2155:5: warning: variable 'enable' of type 'bool' can be declared 'const' [misc-const-correctness]
 2155 |     bool enable = request->getParam("sensor")->value() == "true";
      |     ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:2155:56: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2155 |     bool enable = request->getParam("sensor")->value() == "true";
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:208:14: note: resolves to this declaration
  208 |         bool operator ==(const char *cstr) const {
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:2157:14: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2157 |     response += ",\"debugSensor\":" + String(enable ? "true" : "false");
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:2157:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2157 |     response += ",\"debugSensor\":" + String(enable ? "true" : "false");
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2162:5: warning: variable 'enable' of type 'bool' can be declared 'const' [misc-const-correctness]
 2162 |     bool enable = request->getParam("colors")->value() == "true";
      |     ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:2162:56: warning: 'operator==' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2162 |     bool enable = request->getParam("colors")->value() == "true";
      |                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:208:14: note: resolves to this declaration
  208 |         bool operator ==(const char *cstr) const {
      |              ^
G:\finalcolorwithcalibration\src\main.cpp:2164:14: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2164 |     response += ",\"debugColors\":" + String(enable ? "true" : "false");
      |              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:135:18: note: resolves to this declaration
  135 |         String & operator +=(const String &rhs) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:2164:37: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2164 |     response += ",\"debugColors\":" + String(enable ? "true" : "false");
      |                                     ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2168:12: warning: 'operator+=' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2168 |   response += "}";
      |            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:139:18: note: resolves to this declaration
  139 |         String & operator +=(const char *cstr) {
      |                  ^
G:\finalcolorwithcalibration\src\main.cpp:2174:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2174 |   Logger::info("Debug settings updated: " + response);
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2174:43: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2174 |   Logger::info("Debug settings updated: " + response);
      |                                           ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2180:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 2180 | void handleGetCalibration(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:2182:3: warning: variable 'doc' of type 'JsonDocument' can be declared 'const' [misc-const-correctness]
 2182 |   JsonDocument doc(&allocator);
      |   ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:2220:3: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
 2220 |   String response;
      |   ^
      |          const 
G:\finalcolorwithcalibration\src\main.cpp:2227:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2227 |   Logger::info("Calibration settings sent to client");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2231:6: warning: declaration must be enclosed within the 'LIBC_NAMESPACE_DECL' namespace [llvmlibc-implementation-in-namespace]
 2231 | void handleTuneVividWhite(AsyncWebServerRequest *request) {
      |      ^
G:\finalcolorwithcalibration\src\main.cpp:2232:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2232 |   Logger::info("Tuning calibration for Vivid White (247,248,244)");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2248:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2248 |   Logger::info("Vivid White calibration applied");
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2249:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2249 |   Logger::info("New Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2249:30: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2249 |   Logger::info("New Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2249:76: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2249 |   Logger::info("New Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |                                                                            ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2249:84: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2249 |   Logger::info("New Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2249:129: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2249 |   Logger::info("New Red: A=" + String(settings.redA, DECIMAL_PRECISION_10) + " B=" + String(settings.redB, DECIMAL_PRECISION_6) +
      |                                                                                                                                 ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2250:22: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2250 |                " C=" + String(settings.redC, 2));
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2251:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2251 |   Logger::info("New Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2251:32: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2251 |   Logger::info("New Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2251:80: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2251 |   Logger::info("New Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |                                                                                ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2251:88: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2251 |   Logger::info("New Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |                                                                                        ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2251:135: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2251 |   Logger::info("New Green: A=" + String(settings.greenA, DECIMAL_PRECISION_10) + " B=" + String(settings.greenB, DECIMAL_PRECISION_6) +
      |                                                                                                                                       ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2252:22: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2252 |                " C=" + String(settings.greenC, 2));
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2253:3: warning: 'info' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2253 |   Logger::info("New Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |   ^
G:\finalcolorwithcalibration\src\main.cpp:109:15: note: resolves to this declaration
  109 |   static void info(const String &message) {
      |               ^
G:\finalcolorwithcalibration\src\main.cpp:2253:31: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2253 |   Logger::info("New Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |                               ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2253:78: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2253 |   Logger::info("New Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |                                                                              ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2253:86: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2253 |   Logger::info("New Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |                                                                                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2253:132: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2253 |   Logger::info("New Blue: A=" + String(settings.blueA, DECIMAL_PRECISION_10) + " B=" + String(settings.blueB, DECIMAL_PRECISION_6) +
      |                                                                                                                                    ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:186:34: note: resolves to this declaration
  186 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const char *cstr);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2254:22: warning: 'operator+' must resolve to a function declared within the namespace defined by the 'LIBC_NAMESPACE' macro [llvmlibc-callee-namespace]
 2254 |                " C=" + String(settings.blueC, 2));
      |                      ^
C:\Users\micha\.platformio\packages\framework-arduinoespressif32\cores\esp32\WString.h:185:34: note: resolves to this declaration
  185 |         friend StringSumHelper & operator +(const StringSumHelper &lhs, const String &rhs);
      |                                  ^
G:\finalcolorwithcalibration\src\main.cpp:2258:3: warning: variable 'doc' of type 'JsonDocument' can be declared 'const' [misc-const-correctness]
 2258 |   JsonDocument doc(&allocator);
      |   ^
      |                const 
G:\finalcolorwithcalibration\src\main.cpp:2272:3: warning: variable 'response' of type 'String' can be declared 'const' [misc-const-correctness]
 2272 |   String response;
      |   ^
      |          const 
Suppressed 59018 warnings (59018 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
Found compiler error(s).
